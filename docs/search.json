[
  {
    "objectID": "slides/00-intro.html#the-r-project-for-statistical-computing",
    "href": "slides/00-intro.html#the-r-project-for-statistical-computing",
    "title": "About R",
    "section": "The R Project for Statistical Computing",
    "text": "The R Project for Statistical Computing\nhttps://www.r-project.org/\n\nStarted in 1991 by Ross Ihaka and Robert Gentleman at the University of Auckland (NZ).\nMade open source in 1995.\nOfficial ‚Äúpeer reviewed‚Äù packages are hosted on CRAN.\nHas multiple ‚Äúuniverses‚Äù of packages, including Bioconductor dedicated to bioinformatics, and the Tidyverse for Data Science.\nGreat for analyzing data, for statistics, for research and for communicating data to others."
  },
  {
    "objectID": "slides/00-intro.html#a-bit-more-on-r",
    "href": "slides/00-intro.html#a-bit-more-on-r",
    "title": "About R",
    "section": "A bit more on R",
    "text": "A bit more on R\n\nWe are going to use the Tidyverse. But you might have to learn also a bit of the original idiom, now called base R, which sometimes helps if you have to programm your own functions.\nWe are going to use R in visual studio code as you did for Python, but you might want to try out also Rstudio, which is a great open source IDE dedicated to R."
  },
  {
    "objectID": "slides/00-intro.html#as-always-stackoverflow-is-your-friend",
    "href": "slides/00-intro.html#as-always-stackoverflow-is-your-friend",
    "title": "About R",
    "section": "As always, stackoverflow is your friend",
    "text": "As always, stackoverflow is your friend\nIf you need help, as always, Google and Stackoverflow are your friends.\n\nBut sometimes you need to learn on a support that is structured, nuanced and detailed‚Ä¶ üìö"
  },
  {
    "objectID": "slides/00-intro.html#a-helpful-and-welcoming-community",
    "href": "slides/00-intro.html#a-helpful-and-welcoming-community",
    "title": "About R",
    "section": "A helpful and welcoming community üìö",
    "text": "A helpful and welcoming community üìö\nOne of the things that makes R great is its community of users and programmer.\nIt is open source and open access oriented and highly dedicated to lowering the barrier to learning R and data science, and make their tools available and usable to everyone."
  },
  {
    "objectID": "slides/00-intro.html#open-books",
    "href": "slides/00-intro.html#open-books",
    "title": "About R",
    "section": "Open Books",
    "text": "Open Books\n\n\nBookdown: a package and a repository for open access books about R."
  },
  {
    "objectID": "slides/00-intro.html#open-books-1",
    "href": "slides/00-intro.html#open-books-1",
    "title": "About R",
    "section": "Open Books",
    "text": "Open Books\n\n\n\nR for Data Science - A gentle introducion to data science with the Tidyverse.\nIntroduction to Data Science - A detailed introduction to Data science by a biostatistician.\nAdvanced R - All you need to know about programming in R.\nIntroduction to Statistical Learning - A detailed introductio to modern statistical methods, implemented in R.\n\n\n\nText Mining in R Dealing with natural language and written text in R.\nTidy Modeling with R R Machine learning framework.\nDesigning and Building Data Science Solutions how to set up a data science project."
  },
  {
    "objectID": "slides/00-intro.html#more",
    "href": "slides/00-intro.html#more",
    "title": "About R",
    "section": "More ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è",
    "text": "More ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è\n\nSlack Spaces\n\n\nR for Data Science Community a slack chanel for R networking.\n\n\nBlogs\n\nAlison Hill‚Äôs Blog; great for everything Rmarkdown.\nSimply Statistics; modern statistics and R.\nJulia Silge‚Äôs Blog; learn about R machine learning framework from one of its main developer.\nGina Reynolds Flipbooks; for more tidyverse and Rmarkdown mastery.\nFornkonstin; at the interface between math, art and coding.\nData imaginist; more art in R üé®.\n\nCollaborative Challenges\n\nTidytuesday Tidy and visualize a dataset and share your results with the R community every week on Tuesday.\n\n\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "slides/01-meet-r.html#r-understands-you",
    "href": "slides/01-meet-r.html#r-understands-you",
    "title": "Meet R",
    "section": "R understands you",
    "text": "R understands you\nWrite someting at the R console:\n\nA simple number‚Ä¶\n\n2\n\n[1] 2\n\n\n\n\nSome operation‚Ä¶\n\n3 + 7\n\n[1] 10\n\n\n\n\nText must be quoted‚Ä¶\n\n'hello'\n\n[1] \"hello\"\n\n\n\n\nOtherwise it is interpreted as the name of a variable:\n\nmy_var\n\nError in eval(expr, envir, enclos): object 'my_var' not found"
  },
  {
    "objectID": "slides/01-meet-r.html#you-can-define-variables",
    "href": "slides/01-meet-r.html#you-can-define-variables",
    "title": "Meet R",
    "section": "You can define variables",
    "text": "You can define variables\nYou can define a variable with the operator <- .\n\n# a numeric variable\nthis_year <- 2022\n \n# a character variable\nitalian_greetings <- 'ciao'\n\n\nIf you type the name of a variable without quotes, r prints its value:\n\nthis_year\n\n[1] 2022\n\n\n\nitalian_greetings\n\n[1] \"ciao\"\n\n\n\n\nUse the keyboard shortcut alt/option + - to write the assign operator <- more easily."
  },
  {
    "objectID": "slides/01-meet-r.html#data-types",
    "href": "slides/01-meet-r.html#data-types",
    "title": "Meet R",
    "section": "Data Types",
    "text": "Data Types\nWhen you define an object R guesses its type.\n\ntypeof() returns the internal type of an object.\n\ntypeof(this_year)\n\n[1] \"double\"\n\ntypeof(italian_greetings)\n\n[1] \"character\"\n\n\n\n\nclass() returns a the class attribute of an object.\n\nclass(this_year)\n\n[1] \"numeric\"\n\nclass(italian_greetings)\n\n[1] \"character\""
  },
  {
    "objectID": "slides/01-meet-r.html#everything-in-r-is-an-object",
    "href": "slides/01-meet-r.html#everything-in-r-is-an-object",
    "title": "Meet R",
    "section": "Everything in R is an object",
    "text": "Everything in R is an object\nAnd objects have a types.\n\n\nclass(2)\n\n[1] \"numeric\"\n\n\n\n\n\nclass('hello')\n\n[1] \"character\"\n\n\n\n\n\nclass(FALSE)\n\n[1] \"logical\"\n\n\n\n\n\nclass(mean)\n\n[1] \"function\"\n\n\n\n\n\nclass(`<-`)\n\n[1] \"function\"\n\n\n\n\n\nclass(Sys.Date())\n\n[1] \"Date\""
  },
  {
    "objectID": "slides/01-meet-r.html#exercise",
    "href": "slides/01-meet-r.html#exercise",
    "title": "Meet R",
    "section": "Exercise",
    "text": "Exercise\n\nUse the function c(arg_1, arg_2, ..., arg_n) to put together in a vector many objects that you expect to have the same class. Try with different ones.\nNow do the same, but try to put together in a vector data with different types, what happened?\n\n\n\nLearn more about vectors and types at Advanced R."
  },
  {
    "objectID": "slides/01-meet-r.html#vectors-store-one-or-more-data-point-of-the-same-class",
    "href": "slides/01-meet-r.html#vectors-store-one-or-more-data-point-of-the-same-class",
    "title": "Meet R",
    "section": "Vectors store one or more data point of the same class",
    "text": "Vectors store one or more data point of the same class\n\nnum_vector <- c(1, 3, 5, 3, 6)\n\ncharacter_vector <- c('Hi', ',', 'I', 'am', 'a', 'character', 'vector')\n\nlogical_vector <- c(TRUE, FALSE, FALSE, TRUE, FALSE)\n\n\n\n\nclass(num_vector)\n\n[1] \"numeric\"\n\nclass(character_vector)\n\n[1] \"character\"\n\nclass(logical_vector)\n\n[1] \"logical\""
  },
  {
    "objectID": "slides/01-meet-r.html#classes-can-be-coherced",
    "href": "slides/01-meet-r.html#classes-can-be-coherced",
    "title": "Meet R",
    "section": "Classes can be coherced",
    "text": "Classes can be coherced\nTRUE and FALSE can be coerced into numeric zeroes and ones, or also into characters.\n\nc(2, TRUE, 5, FALSE, 4)\n\n[1] 2 1 5 0 4\n\n\n\nNumbers can be coerced into characters.\n\nc('a', TRUE, 5, FALSE, 4)\n\n[1] \"a\"     \"TRUE\"  \"5\"     \"FALSE\" \"4\""
  },
  {
    "objectID": "slides/01-meet-r.html#classes-can-be-coherced-1",
    "href": "slides/01-meet-r.html#classes-can-be-coherced-1",
    "title": "Meet R",
    "section": "Classes can be coherced",
    "text": "Classes can be coherced\nClasses can be coerced explicitly.\n\nlogical_vector <- c(T, F, F, T, T, F)\nlogical_vector\n\n[1]  TRUE FALSE FALSE  TRUE  TRUE FALSE\n\nas.numeric(logical_vector)\n\n[1] 1 0 0 1 1 0\n\nas.character(logical_vector)\n\n[1] \"TRUE\"  \"FALSE\" \"FALSE\" \"TRUE\"  \"TRUE\"  \"FALSE\"\n\n\n\nIf an element can‚Äôt be coerced to the desired class, R returns a missing value (NA).\n\nas.numeric(c('1', 'two', '3'))\n\n[1]  1 NA  3"
  },
  {
    "objectID": "slides/01-meet-r.html#atomic-elements-are-vectors-of-length-1",
    "href": "slides/01-meet-r.html#atomic-elements-are-vectors-of-length-1",
    "title": "Meet R",
    "section": "Atomic elements are vectors of length 1",
    "text": "Atomic elements are vectors of length 1\n\nshort_vector <- 1\nlong_vector <- 1:50\n\n\n\nshort_vector\n\n[1] 1\n\nlong_vector\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n\n\n\n\n\nclass(short_vector)\n\n[1] \"numeric\"\n\nclass(long_vector)\n\n[1] \"integer\"\n\n\n\n\n\nlength(short_vector)\n\n[1] 1\n\nlength(long_vector)\n\n[1] 50"
  },
  {
    "objectID": "slides/01-meet-r.html#most-functions-in-r-are-vectorized",
    "href": "slides/01-meet-r.html#most-functions-in-r-are-vectorized",
    "title": "Meet R",
    "section": "Most functions in R are vectorized",
    "text": "Most functions in R are vectorized\nIf I want to apply an operation over a vector, I can just write it as it is without a for loop. For example:\n\nAdd an integer to every number in a vector:\n\nlong_vector + 100\n\n [1] 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119\n[20] 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138\n[39] 139 140 141 142 143 144 145 146 147 148 149 150\n\n\n\n\nMultiply every number in a vector by an integer:\n\nlong_vector * 2\n\n [1]   2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38\n[20]  40  42  44  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76\n[39]  78  80  82  84  86  88  90  92  94  96  98 100"
  },
  {
    "objectID": "slides/01-meet-r.html#most-functions-in-r-are-vectorized-1",
    "href": "slides/01-meet-r.html#most-functions-in-r-are-vectorized-1",
    "title": "Meet R",
    "section": "Most functions in R are vectorized",
    "text": "Most functions in R are vectorized\nTake the square root of every number in a vector:\n\nsqrt(long_vector)\n\n [1] 1.000000 1.414214 1.732051 2.000000 2.236068 2.449490 2.645751 2.828427\n [9] 3.000000 3.162278 3.316625 3.464102 3.605551 3.741657 3.872983 4.000000\n[17] 4.123106 4.242641 4.358899 4.472136 4.582576 4.690416 4.795832 4.898979\n[25] 5.000000 5.099020 5.196152 5.291503 5.385165 5.477226 5.567764 5.656854\n[33] 5.744563 5.830952 5.916080 6.000000 6.082763 6.164414 6.244998 6.324555\n[41] 6.403124 6.480741 6.557439 6.633250 6.708204 6.782330 6.855655 6.928203\n[49] 7.000000 7.071068"
  },
  {
    "objectID": "slides/01-meet-r.html#exercise-1",
    "href": "slides/01-meet-r.html#exercise-1",
    "title": "Meet R",
    "section": "Exercise",
    "text": "Exercise\n\nGenerate a vector of 100 (semi-) random numbers with a normal distribution.\nUse a for loop (even if you don‚Äôt need one) to multiply eachs number in the vector by 2.\n\n\n\nFor loops in R according to Roger D. Peng."
  },
  {
    "objectID": "slides/01-meet-r.html#extra---lists",
    "href": "slides/01-meet-r.html#extra---lists",
    "title": "Meet R",
    "section": "Extra - Lists",
    "text": "Extra - Lists\nIf you need to collect together and store data of different types, you can use lists.\n\nmy_list <- list(\n  'hello',\n  1,\n  FALSE,\n  1:25\n)\n\nmy_list\n\n[[1]]\n[1] \"hello\"\n\n[[2]]\n[1] 1\n\n[[3]]\n[1] FALSE\n\n[[4]]\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"
  },
  {
    "objectID": "slides/01-meet-r.html#can-we-use-vectors-to-build-a-dataframe",
    "href": "slides/01-meet-r.html#can-we-use-vectors-to-build-a-dataframe",
    "title": "Meet R",
    "section": "Can we use vectors to build a dataframe?",
    "text": "Can we use vectors to build a dataframe?\nWe learned that vector contain elements of the same type, for example, numerics, character, logical.\n\nAccording to the Tidy Data theory, in rectangular dataframes:\n\n\nEach row is an observation.\nEach column is a variable.\n\n\nBy definiton variables of your data, must be made by atomic elements of the same type. So we can use vectors of the same length to build the columns of a dataframe.\nLet‚Äôs try."
  },
  {
    "objectID": "slides/01-meet-r.html#and-we-have-data",
    "href": "slides/01-meet-r.html#and-we-have-data",
    "title": "Meet R",
    "section": "And‚Ä¶ We have data",
    "text": "And‚Ä¶ We have data\nLet‚Äôs prepare three vectors with the first observations of iris and use them to make a dataframe.\n\nsepal_length <- c(5.1, 7.0, 6.3)\n\nsepal_width <- c(3.5, 3.2, 3.3)\n\nspecies <- c('setosa', 'versicolor', 'virginica')\n\niris_simple <- \n  data.frame(\n    species,\n    sepal_length,\n    sepal_width\n  )\n\niris_simple\n\n     species sepal_length sepal_width\n1     setosa          5.1         3.5\n2 versicolor          7.0         3.2\n3  virginica          6.3         3.3"
  },
  {
    "objectID": "slides/01-meet-r.html#and-we-have-data-1",
    "href": "slides/01-meet-r.html#and-we-have-data-1",
    "title": "Meet R",
    "section": "And‚Ä¶ We have data",
    "text": "And‚Ä¶ We have data\nThe variable iris_simple points to a dataframe that stores rectangular data.\n\nclass(iris_simple)\n\n[1] \"data.frame\"\n\n\n\ndim(iris_simple)\n\n[1] 3 3\n\n\n\nWe can access its columns with the operator $. Each column is a vector.\n\niris_simple$sepal_length\n\n[1] 5.1 7.0 6.3\n\n\n\nclass(iris_simple$sepal_length)\n\n[1] \"numeric\"\n\n\n\nis.vector(iris_simple$sepal_length)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/01-meet-r.html#section",
    "href": "slides/01-meet-r.html#section",
    "title": "Meet R",
    "section": "",
    "text": "Now that we have data, let‚Äôs take our first stroll into the Tidyverse."
  },
  {
    "objectID": "slides/01-meet-r.html#tibbles-a-modern-take-on-dataframes",
    "href": "slides/01-meet-r.html#tibbles-a-modern-take-on-dataframes",
    "title": "Meet R",
    "section": "Tibbles: a modern take on dataframes",
    "text": "Tibbles: a modern take on dataframes\nLet‚Äôs attach the whole Tidyverse, which includes also the Tibble package‚Ä¶\n\nlibrary(tidyverse)\n\n\n‚Ä¶and convert our dataframe iris_simple into a tibble.\n\niris_simple <- as_tibble(iris_simple)\n\n\n\nThe print method for a tibble, provides a handy and informative output.\n\niris_simple\n\n# A tibble: 3 √ó 3\n  species    sepal_length sepal_width\n  <chr>             <dbl>       <dbl>\n1 setosa              5.1         3.5\n2 versicolor          7           3.2\n3 virginica           6.3         3.3"
  },
  {
    "objectID": "slides/01-meet-r.html#tibbles-a-modern-take-on-dataframes-1",
    "href": "slides/01-meet-r.html#tibbles-a-modern-take-on-dataframes-1",
    "title": "Meet R",
    "section": "Tibbles: a modern take on dataframes",
    "text": "Tibbles: a modern take on dataframes\nLet‚Äôs compare the print method for the dataframe iris, before and after we convert it to a tibble.\n\niris\n\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica"
  },
  {
    "objectID": "slides/01-meet-r.html#tibbles-a-modern-take-on-dataframes-2",
    "href": "slides/01-meet-r.html#tibbles-a-modern-take-on-dataframes-2",
    "title": "Meet R",
    "section": "Tibbles: a modern take on dataframes",
    "text": "Tibbles: a modern take on dataframes\nLet‚Äôs compare the print method for the dataframe iris, before and after we convert it to a tibble.\n\nas_tibble(iris)\n\n# A tibble: 150 √ó 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1          5.1         3.5          1.4         0.2 setosa \n 2          4.9         3            1.4         0.2 setosa \n 3          4.7         3.2          1.3         0.2 setosa \n 4          4.6         3.1          1.5         0.2 setosa \n 5          5           3.6          1.4         0.2 setosa \n 6          5.4         3.9          1.7         0.4 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          5           3.4          1.5         0.2 setosa \n 9          4.4         2.9          1.4         0.2 setosa \n10          4.9         3.1          1.5         0.1 setosa \n# ‚Ä¶ with 140 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/01-meet-r.html#exercise-2",
    "href": "slides/01-meet-r.html#exercise-2",
    "title": "Meet R",
    "section": "Exercise",
    "text": "Exercise\n\n\nCheck the weather forecast for your hometown (or a place of your choice).\nAssign the forecasted temperature in one vector and the corresponding time in another vector for at least 5 data points.\nMake a dataframe with those two variables.\nWhat‚Äôs the average temperature? And what‚Äôs its standard deviation?\nThen, visualize those data with a line-chart in which the x axis represents time and the y axis represents the forecasted temperature.\n\n\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "slides/02-manipulate.html#the-tidyverse-is-an-ecosystem-of-packages-for-data-science",
    "href": "slides/02-manipulate.html#the-tidyverse-is-an-ecosystem-of-packages-for-data-science",
    "title": "Manipulate Data",
    "section": "The Tidyverse is an ecosystem of packages for Data Science",
    "text": "The Tidyverse is an ecosystem of packages for Data Science\nAll the packages share a common design:\n\nOne function does one thing, well.\nDesigned for pipes.\nExtensive user-friendly documentation.\nNon-standard evaluation, to write code quickly and easily.\n\n\nAll packages can be loaded with library(tidyverse), but you can also load single packages one by one."
  },
  {
    "objectID": "slides/02-manipulate.html#we-first-explore-the-palmer-penguins-dataset",
    "href": "slides/02-manipulate.html#we-first-explore-the-palmer-penguins-dataset",
    "title": "Manipulate Data",
    "section": "We first explore the Palmer Penguins Dataset",
    "text": "We first explore the Palmer Penguins Dataset\nThe Penguins Dataset stores real data about palmer penguins. This R data package was developed and is maintained by Allison Horst, Alison Hill and Kirsten Gorman for teaching purposes.\n\nLet‚Äôs install the package‚Ä¶\n\ninstall.packages('palmerpenguins')\n\n\n\n‚Ä¶and load it in R.\n\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "slides/02-manipulate.html#palmerpenguins-exports-two-datasets",
    "href": "slides/02-manipulate.html#palmerpenguins-exports-two-datasets",
    "title": "Manipulate Data",
    "section": "palmerpenguins exports two datasets",
    "text": "palmerpenguins exports two datasets\n\npenguins_raw\n\n# A tibble: 344 √ó 17\n   studyName Sample Num‚Ä¶¬π Species Region Island Stage Indiv‚Ä¶¬≤ Clutc‚Ä¶¬≥ `Date Egg`\n   <chr>            <dbl> <chr>   <chr>  <chr>  <chr> <chr>   <chr>   <date>    \n 1 PAL0708              1 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N1A1    Yes     2007-11-11\n 2 PAL0708              2 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N1A2    Yes     2007-11-11\n 3 PAL0708              3 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N2A1    Yes     2007-11-16\n 4 PAL0708              4 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N2A2    Yes     2007-11-16\n 5 PAL0708              5 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N3A1    Yes     2007-11-16\n 6 PAL0708              6 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N3A2    Yes     2007-11-16\n 7 PAL0708              7 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N4A1    No      2007-11-15\n 8 PAL0708              8 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N4A2    No      2007-11-15\n 9 PAL0708              9 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N5A1    Yes     2007-11-09\n10 PAL0708             10 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N5A2    Yes     2007-11-09\n# ‚Ä¶ with 334 more rows, 8 more variables: `Culmen Length (mm)` <dbl>,\n#   `Culmen Depth (mm)` <dbl>, `Flipper Length (mm)` <dbl>,\n#   `Body Mass (g)` <dbl>, Sex <chr>, `Delta 15 N (o/oo)` <dbl>,\n#   `Delta 13 C (o/oo)` <dbl>, Comments <chr>, and abbreviated variable names\n#   ¬π‚Äã`Sample Number`, ¬≤‚Äã`Individual ID`, ¬≥‚Äã`Clutch Completion`\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"
  },
  {
    "objectID": "slides/02-manipulate.html#palmerpenguins-exports-two-datasets-1",
    "href": "slides/02-manipulate.html#palmerpenguins-exports-two-datasets-1",
    "title": "Manipulate Data",
    "section": "palmerpenguins exports two datasets",
    "text": "palmerpenguins exports two datasets\n\npenguins\n\n# A tibble: 344 √ó 8\n   species island    bill_length_mm bill_depth_mm flipper_‚Ä¶¬π body_‚Ä¶¬≤ sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007\n 2 Adelie  Torgersen           39.5          17.4        186    3800 fema‚Ä¶  2007\n 3 Adelie  Torgersen           40.3          18          195    3250 fema‚Ä¶  2007\n 4 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 5 Adelie  Torgersen           36.7          19.3        193    3450 fema‚Ä¶  2007\n 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007\n 7 Adelie  Torgersen           38.9          17.8        181    3625 fema‚Ä¶  2007\n 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007\n 9 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n10 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n# ‚Ä¶ with 334 more rows, and abbreviated variable names ¬π‚Äãflipper_length_mm,\n#   ¬≤‚Äãbody_mass_g\n# ‚Ñπ Use `print(n = ...)` to see more rows\n\n\nWe will use the first one: penguins, which has already been cleaned."
  },
  {
    "objectID": "slides/02-manipulate.html#exercise",
    "href": "slides/02-manipulate.html#exercise",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nThe print method for a tibble gives you a reasonable overview of the data stored in it.\nCan you get more details with the package skimr?\nCheck its documentation, install it, try it out on the penguins dataset. Comment on the output: is it useful? How?."
  },
  {
    "objectID": "slides/02-manipulate.html#a-grammar-for-data-manipulation",
    "href": "slides/02-manipulate.html#a-grammar-for-data-manipulation",
    "title": "Manipulate Data",
    "section": "A grammar for data manipulation",
    "text": "A grammar for data manipulation\n\n\n\n\nDplyr provides a grammar for manipulating data, with many useful verbs:\n\nmutate() adds new variables that are functions of existing variables\nselect() picks variables based on their names.\nfilter() picks cases based on their values.\nsummarise() reduces multiple values down to a single summary.\ngroup_by() performs operations by group."
  },
  {
    "objectID": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data",
    "href": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 344 √ó 9\n   species island    bill_length_mm bill_d‚Ä¶¬π flipp‚Ä¶¬≤ body_‚Ä¶¬≥ sex    year bill_‚Ä¶‚Å¥\n   <fct>   <fct>              <dbl>    <dbl>   <int>   <int> <fct> <int>   <dbl>\n 1 Adelie  Torgersen           39.1     18.7     181    3750 male   2007  0.0391\n 2 Adelie  Torgersen           39.5     17.4     186    3800 fema‚Ä¶  2007  0.0395\n 3 Adelie  Torgersen           40.3     18       195    3250 fema‚Ä¶  2007  0.0403\n 4 Adelie  Torgersen           NA       NA        NA      NA <NA>   2007 NA     \n 5 Adelie  Torgersen           36.7     19.3     193    3450 fema‚Ä¶  2007  0.0367\n 6 Adelie  Torgersen           39.3     20.6     190    3650 male   2007  0.0393\n 7 Adelie  Torgersen           38.9     17.8     181    3625 fema‚Ä¶  2007  0.0389\n 8 Adelie  Torgersen           39.2     19.6     195    4675 male   2007  0.0392\n 9 Adelie  Torgersen           34.1     18.1     193    3475 <NA>   2007  0.0341\n10 Adelie  Torgersen           42       20.2     190    4250 <NA>   2007  0.042 \n# ‚Ä¶ with 334 more rows, and abbreviated variable names ¬π‚Äãbill_depth_mm,\n#   ¬≤‚Äãflipper_length_mm, ¬≥‚Äãbody_mass_g, ‚Å¥‚Äãbill_length_meters\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-1",
    "href": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-1",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(bill_length_mm) %>% \n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 344 √ó 2\n   bill_length_mm bill_length_meters\n            <dbl>              <dbl>\n 1           39.1             0.0391\n 2           39.5             0.0395\n 3           40.3             0.0403\n 4           NA              NA     \n 5           36.7             0.0367\n 6           39.3             0.0393\n 7           38.9             0.0389\n 8           39.2             0.0392\n 9           34.1             0.0341\n10           42               0.042 \n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-2",
    "href": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-2",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 344 √ó 4\n   species island    bill_length_mm bill_length_meters\n   <fct>   <fct>              <dbl>              <dbl>\n 1 Adelie  Torgersen           39.1             0.0391\n 2 Adelie  Torgersen           39.5             0.0395\n 3 Adelie  Torgersen           40.3             0.0403\n 4 Adelie  Torgersen           NA              NA     \n 5 Adelie  Torgersen           36.7             0.0367\n 6 Adelie  Torgersen           39.3             0.0393\n 7 Adelie  Torgersen           38.9             0.0389\n 8 Adelie  Torgersen           39.2             0.0392\n 9 Adelie  Torgersen           34.1             0.0341\n10 Adelie  Torgersen           42               0.042 \n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-3",
    "href": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-3",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n count(island)\n\n# A tibble: 3 √ó 2\n  island        n\n  <fct>     <int>\n1 Biscoe      168\n2 Dream       124\n3 Torgersen    52"
  },
  {
    "objectID": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-4",
    "href": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-4",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 124 √ó 4\n   species island bill_length_mm bill_length_meters\n   <fct>   <fct>           <dbl>              <dbl>\n 1 Adelie  Dream            39.5             0.0395\n 2 Adelie  Dream            37.2             0.0372\n 3 Adelie  Dream            39.5             0.0395\n 4 Adelie  Dream            40.9             0.0409\n 5 Adelie  Dream            36.4             0.0364\n 6 Adelie  Dream            39.2             0.0392\n 7 Adelie  Dream            38.8             0.0388\n 8 Adelie  Dream            42.2             0.0422\n 9 Adelie  Dream            37.6             0.0376\n10 Adelie  Dream            39.8             0.0398\n# ‚Ä¶ with 114 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-5",
    "href": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-5",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000) %>% \n  group_by(species)\n\n# A tibble: 124 √ó 4\n# Groups:   species [2]\n   species island bill_length_mm bill_length_meters\n   <fct>   <fct>           <dbl>              <dbl>\n 1 Adelie  Dream            39.5             0.0395\n 2 Adelie  Dream            37.2             0.0372\n 3 Adelie  Dream            39.5             0.0395\n 4 Adelie  Dream            40.9             0.0409\n 5 Adelie  Dream            36.4             0.0364\n 6 Adelie  Dream            39.2             0.0392\n 7 Adelie  Dream            38.8             0.0388\n 8 Adelie  Dream            42.2             0.0422\n 9 Adelie  Dream            37.6             0.0376\n10 Adelie  Dream            39.8             0.0398\n# ‚Ä¶ with 114 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-6",
    "href": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-6",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000) %>% \n  group_by(species) %>% \n  summarise(mean_bill_length_mm = mean(bill_length_mm),\n            sd_bill_length_mm = sd(bill_length_mm))\n\n# A tibble: 2 √ó 3\n  species   mean_bill_length_mm sd_bill_length_mm\n  <fct>                   <dbl>             <dbl>\n1 Adelie                   38.5              2.47\n2 Chinstrap                48.8              3.34"
  },
  {
    "objectID": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-7",
    "href": "slides/02-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-7",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\ndream_summary <- \n  penguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000) %>% \n  group_by(species) %>% \n  summarise(mean_bill_length_mm = mean(bill_length_mm),\n            sd_bill_length_mm = sd(bill_length_mm))\n\nLet‚Äôs assign the output to a new variable dream_summary."
  },
  {
    "objectID": "slides/02-manipulate.html#section-1",
    "href": "slides/02-manipulate.html#section-1",
    "title": "Manipulate Data",
    "section": "",
    "text": "In the previous code we have seen also two additional aspects that feature heavily in the tidyverse:\n\nThe Pipe %>%.\nNon-Standard Evaluation."
  },
  {
    "objectID": "slides/02-manipulate.html#the-pipe",
    "href": "slides/02-manipulate.html#the-pipe",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n\n\n\n\n\n\nThe pipe is provided by the package magrittr, it‚Äôs a forwarding operator:\n\nIt takes the ouput of what comes before (LHS) and sends it to the first argument of the function that comes after (RHS).\n\nLHS %>% RHS"
  },
  {
    "objectID": "slides/02-manipulate.html#the-pipe-1",
    "href": "slides/02-manipulate.html#the-pipe-1",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\nFor example, you could write:\n\nselect(penguins, species, body_mass_g)\n\n# A tibble: 344 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/02-manipulate.html#the-pipe-2",
    "href": "slides/02-manipulate.html#the-pipe-2",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n‚Ä¶but if you use the pipe, your code is easier to read‚Ä¶\n\npenguins %>% select(species, body_mass_g)\n\n# A tibble: 344 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/02-manipulate.html#the-pipe-3",
    "href": "slides/02-manipulate.html#the-pipe-3",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n‚Ä¶especially if you have to perform many operations one after the other‚Ä¶\n\npenguins %>%\n  select(species, body_mass_g) %>% \n  filter(species == 'Adelie')\n\n# A tibble: 152 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 142 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/02-manipulate.html#the-pipe-4",
    "href": "slides/02-manipulate.html#the-pipe-4",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n‚Ä¶that otherwise would force you to nest your code horribly.\n\nfilter(\n  select(\n    penguins,\n    species, body_mass_g\n  ),\n  species == 'Adelie'\n)\n\n# A tibble: 152 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 142 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/02-manipulate.html#non-standard-evaluation",
    "href": "slides/02-manipulate.html#non-standard-evaluation",
    "title": "Manipulate Data",
    "section": "Non-Standard Evaluation",
    "text": "Non-Standard Evaluation\nThis one is difficult‚Ä¶\n\nWhich argument does the function select() take? Let‚Äôs check it in its help page with ?select.\n\n?select\n\nUnder the Usage section it says:\nselect(.data, ...)\n\n\nAnd then in the section Arguments the help page says:\n.data: A data frame, data frame extension (e.g. a tibble), or a lazy data frame (e.g. from dbplyr or dtplyr). See Methods, below, for more details.\n\n...: <tidy-select> One or more unquoted expressions separated by commas. Variable names can be used as if they were positions in the data frame, so expressions like x:y can be used to select a range of variables."
  },
  {
    "objectID": "slides/02-manipulate.html#non-standard-evaluation-1",
    "href": "slides/02-manipulate.html#non-standard-evaluation-1",
    "title": "Manipulate Data",
    "section": "Non-Standard Evaluation",
    "text": "Non-Standard Evaluation\nSo, what are do we mean if we write:\n\npenguins %>% \n  select(species, island)\n\n\nThe penguins tibble is fills the.data parameter through the pipe %>%.\nThe unquoted names species, island fill the argument ..., they represent the names of the columns to be selected.\n\n\nBut the name of columns in a tibble is a character vector.\n\ncolnames(penguins)\n\n[1] \"species\"           \"island\"            \"bill_length_mm\"   \n[4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n[7] \"sex\"               \"year\""
  },
  {
    "objectID": "slides/02-manipulate.html#non-standard-evaluation-2",
    "href": "slides/02-manipulate.html#non-standard-evaluation-2",
    "title": "Manipulate Data",
    "section": "Non-Standard Evaluation",
    "text": "Non-Standard Evaluation\nThrough non-standard evaluation, in the function select, we can call element of a character vector like if they were variables (without quoting them).\n\npenguins %>% \n  select(species, island)\n\nThe variables species and island don‚Äôt exist outside of the dplyr function select().\n\nspecies\n\nError in eval(expr, envir, enclos): object 'species' not found"
  },
  {
    "objectID": "slides/02-manipulate.html#section-2",
    "href": "slides/02-manipulate.html#section-2",
    "title": "Manipulate Data",
    "section": "",
    "text": "With non-standard evaluation we can write names without quoting them. This makes writing code for iterative data exploration faster.\n\nIf you come from a more strict programming language, it could be hard to get use to this behaviour.\n\n\nMost function of the Tidyverse do non-standard evaluation."
  },
  {
    "objectID": "slides/02-manipulate.html#exercise-1",
    "href": "slides/02-manipulate.html#exercise-1",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nWith the penguin dataset:\n\n\nSelect all numeric variables (columns).\nConvert all variables that are expressed in millimeters into meters, rename them accordingly.\n\n\nGet help from:\n\nDplyr‚Äôs website.\nThe Data Wrangling Chapter of R4DS."
  },
  {
    "objectID": "slides/02-manipulate.html#exercise-2",
    "href": "slides/02-manipulate.html#exercise-2",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nMove all the defined variable of the penguins dataset (species, island, sex, year) to the left of the measured variables.\nDoes any of the defined variables has missing data? In case remove the corresponding row.\nThen group the dataset by all of those variable defined variables and estimate the minimum for each measured variable of each group."
  },
  {
    "objectID": "slides/02-manipulate.html#exercise-3",
    "href": "slides/02-manipulate.html#exercise-3",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nHow many penguins have bill_length_mm above average?\nRepeat the analysis for each species.\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "slides/03-visualize.html#we-are-bad-at-recognizing-pattern-from-raw-data",
    "href": "slides/03-visualize.html#we-are-bad-at-recognizing-pattern-from-raw-data",
    "title": "Data Visualization",
    "section": "We are bad at recognizing pattern from raw data",
    "text": "We are bad at recognizing pattern from raw data\n\n\n# A tibble: 2,582 √ó 2\n         x      y\n     <dbl>  <dbl>\n   1 587   475   \n   2 176.   94.3 \n   3 533   388   \n   4 123   175.  \n   5 260   353   \n   6  86.6  60.5 \n   7 264   354   \n   8 236   189   \n   9 221   236   \n  10 198   130   \n  11 415   397   \n  12 594   387   \n  13 653   425   \n  14 237   281   \n  15 195   147   \n  16 271   262   \n  17 154   211   \n  18 153.  105.  \n  19 163.   48.8 \n  20 562   442   \n  21 783   361   \n  22 376   395   \n  23  76.2  54   \n  24 149    28   \n  25 400   379   \n  26 348   336   \n  27 270   323   \n  28 423   468   \n  29 312   290   \n  30 581   386   \n  31 352   310   \n  32 469   412   \n  33 109.   89.1 \n  34 116.   60.5 \n  35 253   298   \n  36 148   215   \n  37 616   468   \n  38 250   242   \n  39 639   454   \n  40 344   316   \n  41 110   123.  \n  42 361   405   \n  43 612   420   \n  44 219   232   \n  45 670   447   \n  46 160   238   \n  47 170.   20.2 \n  48 141.   55.3 \n  49 462   397   \n  50 127.   82.6 \n  51 271   294   \n  52 110    26.7 \n  53 359   434   \n  54 265   312   \n  55 758   357   \n  56 159.  126.  \n  57 201   198   \n  58 794   309   \n  59 262   298   \n  60 116.   59.2 \n  61 164   162   \n  62 296   310   \n  63 264   378   \n  64 704   425   \n  65 633   446   \n  66 283   352   \n  67 697   412   \n  68 175    37.1 \n  69 273   329   \n  70 115.  150.  \n  71 171.   73.5 \n  72 286   354   \n  73 166   245   \n  74 341   349   \n  75 221   221   \n  76  86.6  78.7 \n  77 440   404   \n  78 488   438   \n  79 283   273   \n  80 270   394   \n  81 753   363   \n  82 517   406   \n  83 405   379   \n  84 215   213   \n  85 560   382   \n  86 231   216   \n  87 304   295   \n  88 324   322   \n  89 110    25.4 \n  90 156   241   \n  91 135.   34.5 \n  92 306   282   \n  93 126.    4.60\n  94 462   429   \n  95 245   237   \n  96 754   368   \n  97 119.   43.6 \n  98 335   320   \n  99 270   325   \n 100 635   401   \n 101 105.  110.  \n 102 157.   31.9 \n 103 265   382   \n 104 203   236   \n 105 381   448   \n 106 171.   74.8 \n 107  90.5 155.  \n 108 110   124.  \n 109 162   179   \n 110 109.   68.3 \n 111 806   332   \n 112 248   262   \n 113 123   109.  \n 114 182.  180.  \n 115 388   369   \n 116 210   145   \n 117 702   419   \n 118 186   197   \n 119  77.5 115.  \n 120 174.   70.9 \n 121 499   461   \n 122 449   463   \n 123 234   276   \n 124 417   399   \n 125 504   461   \n 126 280   249   \n 127 580   449   \n 128 645   416   \n 129 586   386   \n 130 192   212   \n 131 109.  172.  \n 132 634   446   \n 133 308   397   \n 134 244   199   \n 135 173   143   \n 136 502   465   \n 137 247   260   \n 138 565   393   \n 139 374   433   \n 140 145.   20.2 \n 141  54.1  94.3 \n 142 263   258   \n 143 328   361   \n 144 116.   22.8 \n 145 262   374   \n 146 239   249   \n 147 170.   60.5 \n 148 511   442   \n 149 654   422   \n 150 149   140.  \n 151 225   184   \n 152 147   172   \n 153 685   438   \n 154 180.   55.3 \n 155 274   252   \n 156 366   362   \n 157 622   467   \n 158 724   412   \n 159 469   417   \n 160 286   406   \n 161 518   476   \n 162 787   335   \n 163 470   409   \n 164 763   380   \n 165 281   250   \n 166 383   388   \n 167 148.   83.9 \n 168 154   217   \n 169 245   258   \n 170 167.   78.7 \n 171 241   204   \n 172 266   297   \n 173 140   216   \n 174 286   384   \n 175 161   153   \n 176 309   322   \n 177 269   314   \n 178 128.   29.3 \n 179 440   474   \n 180 382   378   \n 181 246   342   \n 182 336   416   \n 183 240   227   \n 184 385   367   \n 185 175   221   \n 186 109.   28   \n 187 459   479   \n 188  90.5  72.2 \n 189 318   297   \n 190 283   282   \n 191 329   363   \n 192 523   459   \n 193 133.   87.8 \n 194 130.   95.6 \n 195 212   157   \n 196 154.  120.  \n 197 219   197   \n 198 172.   73.5 \n 199 136   159.  \n 200 254   269   \n 201 124.   93   \n 202 277   272   \n 203 304   294   \n 204 463   408   \n 205 248   239   \n 206 356   341   \n 207  94.4 175.  \n 208 140.    3.30\n 209 158   169   \n 210 157.   95.6 \n 211 302   303   \n 212 789   327   \n 213 266   387   \n 214 641   459   \n 215 166.  101.  \n 216 265   280   \n 217 183   159   \n 218 299   333   \n 219 144   183   \n 220 157.   96.9 \n 221 127.   31.9 \n 222 102.  146.  \n 223 284   261   \n 224 409   426   \n 225 599   414   \n 226 220   258   \n 227 218   162   \n 228 159.  114.  \n 229 286   280   \n 230 530   476   \n 231 427   407   \n 232 460   448   \n 233 247   333   \n 234 749   392   \n 235 155   205   \n 236 266   247   \n 237 294   266   \n 238 257   251   \n 239 105.   44.9 \n 240 221   176   \n 241 148.   50.1 \n 242 425   447   \n 243 769   344   \n 244  56.7 106   \n 245 127.   30.6 \n 246 520   395   \n 247 368   440   \n 248 365   315   \n 249 167   245   \n 250 415   410   \n 251 214   240   \n 252 546   470   \n 253 171   173   \n 254 622   452   \n 255 424   463   \n 256 492   399   \n 257 279   388   \n 258 377   395   \n 259 273   292   \n 260 613   402   \n 261 247   238   \n 262 713   415   \n 263 629   448   \n 264 137.    2   \n 265 163.   82.6 \n 266 519   410   \n 267 495   399   \n 268 150.  112.  \n 269 446   394   \n 270 225   232   \n 271 174.   69.6 \n 272 148.  103.  \n 273 333   318   \n 274 346   332   \n 275 257   328   \n 276 553   462   \n 277 755   372   \n 278 470   397   \n 279 144.  132   \n 280  95.7 158   \n 281 320   300   \n 282 266   389   \n 283 533   473   \n 284 105.  111.  \n 285 154   239   \n 286 635   402   \n 287 237   199   \n 288 730   408   \n 289 265   380   \n 290 498   419   \n 291 220   215   \n 292 365   393   \n 293 192   130   \n 294 119.  144.  \n 295 105.  112.  \n 296 123    42.3 \n 297 265   323   \n 298 654   411   \n 299 625   395   \n 300  97    70.9 \n 301 105.  101.  \n 302  68.4 146.  \n 303 115.   24.1 \n 304 368   430   \n 305 153.  122.  \n 306 136    35.8 \n 307 195   236   \n 308 609   428   \n 309 649   408   \n 310 156   153   \n 311 485   482   \n 312 451   477   \n 313 261   353   \n 314 261   278   \n 315 509   452   \n 316 410   425   \n 317 151   226   \n 318 126.  133.  \n 319 118.   94.3 \n 320 680   442   \n 321 352   397   \n 322 213   248   \n 323 149   115.  \n 324 380   383   \n 325 187   135   \n 326 148   183   \n 327 476   481   \n 328 433   422   \n 329 363   327   \n 330 590   474   \n 331 148.  149.  \n 332 753   389   \n 333 780   350   \n 334 544   482   \n 335 559   471   \n 336  71   157.  \n 337 726   405   \n 338 141.   54   \n 339 731   407   \n 340 142.  152.  \n 341 238   192   \n 342  78.8 167.  \n 343 104.   44.9 \n 344 611   469   \n 345  63.2 110.  \n 346 168   214   \n 347 165   200   \n 348 343   316   \n 349 160   144   \n 350 585   386   \n 351 796   334   \n 352 574   421   \n 353 146.   94.3 \n 354 116.  162.  \n 355 122.  155.  \n 356 231   240   \n 357 157.   33.2 \n 358 105.   98.2 \n 359 226   210   \n 360  58   114.  \n 361 452   460   \n 362 253   316   \n 363 163   140   \n 364 786   357   \n 365 787   322   \n 366  69.7 161.  \n 367 115.   60.5 \n 368 405   430   \n 369 577   412   \n 370 136    34.5 \n 371 455   478   \n 372 180.   50.1 \n 373 105.   64.4 \n 374 615   415   \n 375 264   311   \n 376  65.8 115.  \n 377 136   205   \n 378 274   326   \n 379 531   442   \n 380 370   441   \n 381 354   311   \n 382 292   394   \n 383 144   199   \n 384 588   426   \n 385 820   287   \n 386 294   345   \n 387 268   392   \n 388 550   378   \n 389 176.   41   \n 390 178.  106   \n 391 310   386   \n 392 279   247   \n 393 132.   78.7 \n 394 210   244   \n 395 128.   94.3 \n 396 220   213   \n 397 160   177   \n 398 571   436   \n 399 276   278   \n 400 275   252   \n 401 270   269   \n 402 770   351   \n 403 642   440   \n 404 265   298   \n 405 153.   34.5 \n 406 593   392   \n 407 178.   63.1 \n 408 413   418   \n 409 570   429   \n 410 608   410   \n 411 599   446   \n 412 551   383   \n 413 616   414   \n 414 114.  141.  \n 415 165   174   \n 416 201   236   \n 417 157   197   \n 418 309   406   \n 419 462   475   \n 420 165.  115.  \n 421 115.   85.2 \n 422 184   197   \n 423  77.5  56.6 \n 424 185   161   \n 425 198   218   \n 426 722   392   \n 427 822   291   \n 428 110    24.1 \n 429 545   398   \n 430 283   402   \n 431 159   243   \n 432 114.  166.  \n 433 625   396   \n 434 601   389   \n 435 124.   33.2 \n 436 270   235   \n 437 732   407   \n 438 300   282   \n 439 104.  144.  \n 440 251   207   \n 441 153   239   \n 442 426   446   \n 443 531   443   \n 444 423   412   \n 445 297   380   \n 446 724   390   \n 447 542   473   \n 448 681   422   \n 449 349   408   \n 450 674   433   \n 451 625   465   \n 452 246   343   \n 453 580   386   \n 454 319   299   \n 455  81.4  39.7 \n 456 596   473   \n 457 383   360   \n 458 757   364   \n 459 333   319   \n 460 162   167   \n 461 152   219   \n 462 265   384   \n 463 364   368   \n 464 462   414   \n 465 394   450   \n 466 226   266   \n 467 132.  153.  \n 468 359   349   \n 469 661   431   \n 470 154.   57.9 \n 471 531   456   \n 472 142.  103.  \n 473 180.   52.7 \n 474 339   418   \n 475 822   296   \n 476 265   324   \n 477 466   397   \n 478 796   307   \n 479 577   414   \n 480 492   482   \n 481 723   405   \n 482 558   448   \n 483 293   396   \n 484 676   443   \n 485 212   240   \n 486 719   400   \n 487 286   375   \n 488 232   216   \n 489 269   282   \n 490 778   334   \n 491 584   475   \n 492 812   322   \n 493 545   462   \n 494 459   474   \n 495 810   324   \n 496 288   386   \n 497 738   377   \n 498 284   290   \n 499 136     7.20\n 500 212   150   \n 501 771   351   \n 502 305   415   \n 503 335   415   \n 504 261   372   \n 505 775   361   \n 506 471   481   \n 507 150   188   \n 508 110   141.  \n 509 145   199   \n 510 567   479   \n 511 748   374   \n 512 183   145   \n 513 116.   74.8 \n 514 651   417   \n 515 652   410   \n 516 356   307   \n 517 467   428   \n 518 260   372   \n 519 361   338   \n 520 150.  127.  \n 521 607   430   \n 522 405   399   \n 523 712   421   \n 524 106.   93   \n 525  97   168.  \n 526 141.   39.7 \n 527  76.2  51.4 \n 528 329   313   \n 529 576   383   \n 530 593   451   \n 531 184   160   \n 532 144.   17.6 \n 533 784   359   \n 534 185   205   \n 535 166.   80   \n 536 165   226   \n 537  99.6 162.  \n 538 491   446   \n 539 676   424   \n 540 810   285   \n 541 672   440   \n 542 131.   38.4 \n 543 348   416   \n 544 110    89.1 \n 545 377   432   \n 546 227   195   \n 547 130.  168.  \n 548 321   387   \n 549 171.  103.  \n 550 382   376   \n 551 284   361   \n 552 122.   20.2 \n 553 141.   48.8 \n 554 235   220   \n 555 448   476   \n 556 407   389   \n 557 148   199   \n 558  90.5 146.  \n 559 187   134   \n 560 410   395   \n 561 111.   87.8 \n 562 161   198   \n 563 107.  120.  \n 564 818   284   \n 565 152   192   \n 566 327   311   \n 567 290   300   \n 568 266   312   \n 569 156.  103.  \n 570 240   269   \n 571 252   274   \n 572 294   307   \n 573 326   407   \n 574 155   203   \n 575 317   305   \n 576 485   472   \n 577 589   386   \n 578 627   401   \n 579 434   421   \n 580 344   373   \n 581 272   332   \n 582 239   251   \n 583 277   292   \n 584 789   319   \n 585 396   439   \n 586 750   391   \n 587 465   408   \n 588  63.2 145   \n 589 431   402   \n 590 227   254   \n 591 369   329   \n 592  78.8  99.5 \n 593 367   440   \n 594 264   298   \n 595 139.   37.1 \n 596 641   441   \n 597 118.  174.  \n 598 146.   24.1 \n 599  77.5  82.6 \n 600 300   416   \n 601 146   173   \n 602 237   191   \n 603 568   416   \n 604 131.   17.6 \n 605 589   460   \n 606 246   295   \n 607 387   363   \n 608  58    95.6 \n 609 597   387   \n 610  90.5  39.7 \n 611 457   443   \n 612 489   434   \n 613 226   243   \n 614 164   140   \n 615 171.  110.  \n 616 789   330   \n 617 249   326   \n 618 647   429   \n 619 574   396   \n 620 741   389   \n 621 469   402   \n 622 418   453   \n 623 264   227   \n 624 368   357   \n 625 429   391   \n 626 409   462   \n 627 196   130   \n 628 324   306   \n 629 237   190   \n 630 308   300   \n 631 542   482   \n 632 340   350   \n 633 251   360   \n 634 207   139   \n 635 693   428   \n 636 123    35.8 \n 637 696   432   \n 638 609   457   \n 639 411   395   \n 640 784   326   \n 641 269   268   \n 642 193   145   \n 643 172.   72.2 \n 644 794   310   \n 645 239   201   \n 646 621   453   \n 647 170   179   \n 648 701   428   \n 649 329   403   \n 650 488   440   \n 651 589   474   \n 652 463   420   \n 653 295   268   \n 654 267   361   \n 655 226   233   \n 656 562   385   \n 657 347   425   \n 658 619   389   \n 659 154.  119   \n 660 596   435   \n 661 563   393   \n 662 691   434   \n 663 361   311   \n 664 458   441   \n 665  55.4 129.  \n 666 201   130   \n 667 248   298   \n 668 150.   37.1 \n 669 336   321   \n 670 411   396   \n 671 345   347   \n 672 424   469   \n 673 311   299   \n 674 743   380   \n 675 102.  178.  \n 676 162   172   \n 677 145.   39.7 \n 678 293   265   \n 679 168   204   \n 680 127.  133.  \n 681 145.   22.8 \n 682 165   145   \n 683 231   241   \n 684 603   427   \n 685 324   307   \n 686 282   377   \n 687 490   415   \n 688 122.    7.20\n 689 175    35.8 \n 690  64.5  86.5 \n 691 286   341   \n 692 537   440   \n 693 541   383   \n 694 321   302   \n 695  55.4  93   \n 696 172.   90.4 \n 697 140.  135.  \n 698 293   275   \n 699 176.   39.7 \n 700 612   421   \n 701  58    89.1 \n 702  91.8  41   \n 703  81.4  93   \n 704 739   401   \n 705 174.   90.4 \n 706 127.   93   \n 707 151   175   \n 708 273   396   \n 709 175   143   \n 710  86.6 163.  \n 711 233   184   \n 712 330   323   \n 713 614   403   \n 714 550   466   \n 715 155   195   \n 716 293   414   \n 717 560   374   \n 718 217   253   \n 719 577   470   \n 720 333   370   \n 721 167.   80   \n 722 766   376   \n 723 418   399   \n 724 545   472   \n 725 362   328   \n 726 521   395   \n 727 152.   37.1 \n 728 507   398   \n 729 477   482   \n 730 793   312   \n 731 797   344   \n 732 500   468   \n 733 166   228   \n 734 179   203   \n 735 153.   86.5 \n 736 616   409   \n 737 202   130   \n 738  91.8  83.9 \n 739 436   473   \n 740 283   380   \n 741 742   399   \n 742 273   384   \n 743 135.   29.3 \n 744 126.   57.9 \n 745 196   155   \n 746 199   214   \n 747 218   254   \n 748  56.7  91.7 \n 749 362   312   \n 750  65.8 141.  \n 751 435   417   \n 752 822   297   \n 753 217   240   \n 754 364   437   \n 755 322   311   \n 756 495   466   \n 757 745   397   \n 758 649   416   \n 759 249   262   \n 760 468   424   \n 761 213   140   \n 762 217   201   \n 763 369   402   \n 764 698   411   \n 765 272   396   \n 766 170.   90.4 \n 767 285   406   \n 768 608   394   \n 769 111.   22.8 \n 770 119.   59.2 \n 771 618   454   \n 772 612   457   \n 773 284   291   \n 774 217   204   \n 775 158   175   \n 776 289   342   \n 777 732   382   \n 778 252   319   \n 779 369   358   \n 780 220   165   \n 781 170.   77.4 \n 782 204   136   \n 783 783   328   \n 784 599   431   \n 785 458   479   \n 786 110   170.  \n 787 314   293   \n 788 467   397   \n 789 670   427   \n 790 216   207   \n 791 549   383   \n 792 391   454   \n 793 467   480   \n 794 107.   63.1 \n 795 290   269   \n 796 169   240   \n 797 256   215   \n 798 330   314   \n 799 532   389   \n 800 398   437   \n 801 464   437   \n 802 747   395   \n 803 241   285   \n 804 732   406   \n 805 253   367   \n 806 257   340   \n 807  86.6  65.7 \n 808 423   413   \n 809 445   459   \n 810 272   293   \n 811 217   156   \n 812 375   397   \n 813 105.  107.  \n 814 663   431   \n 815 354   407   \n 816 107.   93   \n 817 359   316   \n 818 122.   77.4 \n 819 161.   52.7 \n 820 214   249   \n 821 340   420   \n 822 408   427   \n 823 615   389   \n 824 174.  114.  \n 825 609   389   \n 826 128.   60.5 \n 827 422   387   \n 828 226   184   \n 829 109.   57.9 \n 830 632   409   \n 831 156.  116.  \n 832 179   202   \n 833 573   479   \n 834 339   351   \n 835 795   346   \n 836 765   379   \n 837 115.   42.3 \n 838 295   339   \n 839 436   465   \n 840 165.   87.8 \n 841 113.   70.9 \n 842 366   386   \n 843 786   358   \n 844 275   278   \n 845 265   383   \n 846 794   347   \n 847 248   357   \n 848 549   459   \n 849 110    87.8 \n 850 111.  161.  \n 851 653   420   \n 852 309   336   \n 853 177   244   \n 854 159.  105.  \n 855 339   338   \n 856 650   416   \n 857 389   420   \n 858 107.   91.7 \n 859 395   387   \n 860 417   446   \n 861 708   404   \n 862 266   388   \n 863 709   403   \n 864  94.4 172.  \n 865 450   410   \n 866 162    99.5 \n 867 329   314   \n 868 420   385   \n 869 223   262   \n 870 596   408   \n 871 163.   85.2 \n 872 267   312   \n 873 337   383   \n 874  95.7 152.  \n 875 278   247   \n 876 299   387   \n 877 490   410   \n 878 512   407   \n 879 796   306   \n 880 128.  135.  \n 881 604   390   \n 882 147   199   \n 883 189   204   \n 884 109.   90.4 \n 885 139.   26.7 \n 886 104.  150.  \n 887 137.   59.2 \n 888 502   479   \n 889 311   298   \n 890 261   308   \n 891 177   239   \n 892 114.   17.6 \n 893 165.   48.8 \n 894 372   428   \n 895 459   407   \n 896 681   442   \n 897 333   395   \n 898 181   203   \n 899 584   386   \n 900 821   301   \n 901 207   243   \n 902 420   401   \n 903 172   179   \n 904 273   383   \n 905 658   453   \n 906 266   361   \n 907 244   287   \n 908 308   399   \n 909 133.  158   \n 910 267   246   \n 911 503   402   \n 912 389   453   \n 913 367   356   \n 914 539   384   \n 915 585   475   \n 916 490   428   \n 917 539   385   \n 918 141   195   \n 919 138   196   \n 920 740   387   \n 921 437   473   \n 922 799   303   \n 923 252   361   \n 924 432   391   \n 925 536   387   \n 926 376   360   \n 927 122.   56.6 \n 928 415   455   \n 929 646   447   \n 930 246   348   \n 931 355   336   \n 932 127.   57.9 \n 933 530   446   \n 934 156.   94.3 \n 935 457   453   \n 936 252   236   \n 937 466   432   \n 938  87.9 150.  \n 939 306   326   \n 940 293   305   \n 941 672   446   \n 942 291   412   \n 943 106.   44.9 \n 944 618   468   \n 945 615   408   \n 946 270   255   \n 947 326   339   \n 948 416   405   \n 949 270   262   \n 950 456   478   \n 951 105.  102.  \n 952 359   308   \n 953 653   411   \n 954 411   400   \n 955 543   390   \n 956 630   394   \n 957 357   334   \n 958 212   160   \n 959 772   342   \n 960 362   338   \n 961 734   381   \n 962 364   430   \n 963 554   482   \n 964 165.   81.3 \n 965 292   393   \n 966 159   145   \n 967 803   295   \n 968 136   207   \n 969 599   388   \n 970 109.  164.  \n 971 192   135   \n 972 185   242   \n 973 568   479   \n 974 133.   35.8 \n 975 569   412   \n 976 595   450   \n 977 205   242   \n 978 290   261   \n 979 148.  129.  \n 980 141.   52.7 \n 981 583   386   \n 982 634   408   \n 983 266   339   \n 984 157   151   \n 985 136    28   \n 986 307   282   \n 987 217   203   \n 988 541   479   \n 989  68.4 112.  \n 990 277   387   \n 991 715   418   \n 992 218   163   \n 993 215   144   \n 994 259   297   \n 995 798   343   \n 996 328   387   \n 997 111.   21.5 \n 998 601   440   \n 999 533   400   \n1000 310   299   \n1001 167.  109.  \n1002 223   169   \n1003 521   463   \n1004 312   388   \n1005 159   204   \n1006 195   216   \n1007 613   389   \n1008 787   321   \n1009 561   444   \n1010 605   422   \n1011 253   267   \n1012 474   413   \n1013 287   257   \n1014 334   371   \n1015 653   427   \n1016 149    29.3 \n1017 246   272   \n1018  76.2 154.  \n1019 165   245   \n1020 613   418   \n1021 105.  114.  \n1022 691   414   \n1023  98.3 179.  \n1024  54.1 129.  \n1025 209   141   \n1026 293   329   \n1027 535   413   \n1028 306   317   \n1029 817   311   \n1030 624   451   \n1031 289   367   \n1032 491   410   \n1033 480   482   \n1034 504   462   \n1035 332   384   \n1036 246   341   \n1037 153.   35.8 \n1038 154.   91.7 \n1039 564   412   \n1040 493   410   \n1041 267   390   \n1042 216   211   \n1043 263   367   \n1044 358   308   \n1045 227   236   \n1046 247   227   \n1047 440   392   \n1048 502   455   \n1049 793   348   \n1050 396   457   \n1051 127.    9.80\n1052  98.3 164.  \n1053 357   335   \n1054 459   400   \n1055 427   401   \n1056 281   389   \n1057 351   373   \n1058 387   362   \n1059 359   355   \n1060 411   463   \n1061 180.  180.  \n1062 258   274   \n1063 175    69.6 \n1064 345   331   \n1065 429   465   \n1066 427   464   \n1067 267   230   \n1068 106.   64.4 \n1069 174   244   \n1070 461   401   \n1071 730   385   \n1072 146.  101.  \n1073  68.4 132   \n1074 243   263   \n1075 459   440   \n1076 164   173   \n1077 233   218   \n1078  93.1  56.6 \n1079 740   400   \n1080 160   198   \n1081 271   235   \n1082  80.1  47.5 \n1083 127.  150.  \n1084 386   365   \n1085 401   392   \n1086 235   245   \n1087 423   388   \n1088 190   158   \n1089 163   148   \n1090 176.  114.  \n1091 308   328   \n1092 167   220   \n1093 106.  175.  \n1094  85.3 145   \n1095  52.8 119   \n1096 686   437   \n1097 269   295   \n1098 567   435   \n1099 271   283   \n1100 247   352   \n1101  84    38.4 \n1102 273   338   \n1103 453   473   \n1104 757   375   \n1105 174   240   \n1106  97    43.6 \n1107 168.   18.9 \n1108 113.   20.2 \n1109 491   419   \n1110 354   307   \n1111 698   431   \n1112 118.   93   \n1113 684   439   \n1114 438   396   \n1115 342   421   \n1116  67.1 146.  \n1117 366   366   \n1118 159.   54   \n1119 356   432   \n1120 335   414   \n1121 146   172   \n1122 150.  126.  \n1123 652   437   \n1124 598   398   \n1125 191   151   \n1126 388   453   \n1127 583   391   \n1128 272   334   \n1129 297   339   \n1130 286   257   \n1131 645   437   \n1132 197   204   \n1133  54.1 112.  \n1134 804   335   \n1135 221   259   \n1136 281   349   \n1137 642   459   \n1138 283   401   \n1139  76.2 161.  \n1140 518   467   \n1141 213   165   \n1142 140.   55.3 \n1143 365   438   \n1144 178.   41   \n1145 140   195   \n1146 137.   26.7 \n1147 159.  120.  \n1148 774   354   \n1149 203   241   \n1150 105.  127.  \n1151 305   326   \n1152 315   294   \n1153 407   379   \n1154 597   447   \n1155 218   226   \n1156 349   337   \n1157 172.   21.5 \n1158 294   364   \n1159 646   429   \n1160 629   464   \n1161 386   364   \n1162 289   269   \n1163 174.  115.  \n1164 124.  109.  \n1165 647   448   \n1166 337   322   \n1167 690   435   \n1168 251   265   \n1169 158   215   \n1170 154   216   \n1171 150.  136.  \n1172 797   306   \n1173 207   238   \n1174 301   416   \n1175 535   415   \n1176 235   221   \n1177 223   228   \n1178 627   465   \n1179 361   317   \n1180 140.  106   \n1181 646   448   \n1182 525   405   \n1183 139.   57.9 \n1184 119.   42.3 \n1185 306   281   \n1186 187   141   \n1187 308   400   \n1188 580   476   \n1189 487   399   \n1190 228   237   \n1191 679   423   \n1192 608   403   \n1193  94.4 141.  \n1194 394   387   \n1195 130.    2   \n1196 463   440   \n1197 242   269   \n1198 419   400   \n1199 216   208   \n1200 141.   46.2 \n1201 436   391   \n1202 175    39.7 \n1203 105.   96.9 \n1204 350   338   \n1205 791   315   \n1206 468   423   \n1207  60.6  86.5 \n1208 360   332   \n1209 190   237   \n1210 116.  128.  \n1211 427   433   \n1212 348   373   \n1213 263   260   \n1214 278   254   \n1215 259   220   \n1216 754   388   \n1217 210   240   \n1218 479   482   \n1219 304   380   \n1220 725   390   \n1221 150   176   \n1222 227   202   \n1223 554   387   \n1224 332   366   \n1225 159   176   \n1226 257   272   \n1227 233   217   \n1228 793   311   \n1229 136   209   \n1230 355   379   \n1231 136    16.3 \n1232  94.4 138.  \n1233 105.   65.7 \n1234 119.   20.2 \n1235 153   218   \n1236 304   303   \n1237 148.   28   \n1238 271   395   \n1239 819   306   \n1240 404   439   \n1241 376   368   \n1242 391   385   \n1243 220   257   \n1244 123    56.6 \n1245 115.   25.4 \n1246  89.2 155.  \n1247 113.   86.5 \n1248 809   285   \n1249 261   364   \n1250 656   414   \n1251 139.   59.2 \n1252 142.    8.5 \n1253 146.   93   \n1254 243   286   \n1255 220   190   \n1256 792   314   \n1257 559   432   \n1258 268   232   \n1259 160   208   \n1260 325   389   \n1261 338   417   \n1262 533   434   \n1263 595   460   \n1264 104.  166.  \n1265 118.  168.  \n1266 672   427   \n1267 521   394   \n1268 247   354   \n1269 407   428   \n1270 407   462   \n1271 363   323   \n1272 161   216   \n1273 776   344   \n1274 140.   38.4 \n1275 168   245   \n1276 102.   44.9 \n1277 570   376   \n1278 106.   94.3 \n1279 522   394   \n1280 820   286   \n1281 310   322   \n1282  97    76.1 \n1283 709   409   \n1284 165.   99.5 \n1285 250   358   \n1286  54.1 119   \n1287 288   289   \n1288 590   454   \n1289 498   418   \n1290 510   402   \n1291 119.   83.9 \n1292 162   151   \n1293 123   107.  \n1294  77.5 145   \n1295 545   391   \n1296 282   250   \n1297 613   456   \n1298 106.  159.  \n1299 410   434   \n1300 403   433   \n1301 382   449   \n1302 392   385   \n1303 140.   57.9 \n1304 270   261   \n1305 500   413   \n1306 592   452   \n1307 146   199   \n1308 820   304   \n1309 602   404   \n1310 250   263   \n1311 369   328   \n1312 561   468   \n1313 145   187   \n1314 326   310   \n1315 258   349   \n1316 260   277   \n1317 283   253   \n1318 110    37.1 \n1319 292   302   \n1320 269   356   \n1321 111.  170.  \n1322 118.  175.  \n1323 605   433   \n1324 339   369   \n1325 190   163   \n1326 566   395   \n1327 251   206   \n1328 226   209   \n1329 139.   90.4 \n1330  84   148.  \n1331 554   384   \n1332 646   446   \n1333 317   345   \n1334 171   138   \n1335 119.  131.  \n1336 309   405   \n1337 131.  135.  \n1338 139   195   \n1339 163   149   \n1340 418   445   \n1341 241   229   \n1342 174   211   \n1343 198   213   \n1344 204   221   \n1345 498   417   \n1346 107.   54   \n1347 124.   56.6 \n1348 609   427   \n1349 525   393   \n1350 434   431   \n1351 412   422   \n1352 266   280   \n1353 149   128.  \n1354 145.   95.6 \n1355 170.   18.9 \n1356 365   392   \n1357 667   429   \n1358 640   441   \n1359 532   400   \n1360 239   250   \n1361 726   388   \n1362 402   459   \n1363 322   351   \n1364 801   339   \n1365 748   393   \n1366 540   384   \n1367 298   313   \n1368 234   219   \n1369 445   475   \n1370 355   396   \n1371 561   374   \n1372 350   309   \n1373 269   233   \n1374 558   434   \n1375 372   435   \n1376 310   286   \n1377 747   368   \n1378 645   459   \n1379 164   224   \n1380 176.   99.5 \n1381 543   388   \n1382 507   444   \n1383 260   307   \n1384 338   351   \n1385 698   430   \n1386 219   256   \n1387 111.  126.  \n1388 361   435   \n1389 199   202   \n1390 356   426   \n1391 350   337   \n1392 681   432   \n1393 217   223   \n1394 397   439   \n1395 649   407   \n1396 506   458   \n1397  95.7  64.4 \n1398 811   322   \n1399 159.  122.  \n1400 617   409   \n1401 291   381   \n1402 674   434   \n1403 748   392   \n1404 637   430   \n1405 170.   76.1 \n1406 162   152   \n1407 180.   48.8 \n1408 324   323   \n1409 179.   43.6 \n1410 488   482   \n1411 735   404   \n1412 175   239   \n1413 168.   90.4 \n1414  86.6  50.1 \n1415 110    35.8 \n1416 148.   91.7 \n1417 585   445   \n1418 136    30.6 \n1419 811   323   \n1420 157   215   \n1421 170.  116.  \n1422 592   446   \n1423 110   163.  \n1424 184   161   \n1425 115.   73.5 \n1426 822   300   \n1427 186   156   \n1428 170   183   \n1429 253   314   \n1430 220   189   \n1431 590   386   \n1432  77.5 154.  \n1433 615   468   \n1434 111.   38.4 \n1435 521   410   \n1436 737   384   \n1437  94.4  70.9 \n1438 133.   85.2 \n1439 496   399   \n1440 152.   29.3 \n1441 124.   42.3 \n1442 426   401   \n1443 667   449   \n1444 227   175   \n1445 425   407   \n1446 176.   93   \n1447 188   163   \n1448 802   298   \n1449 782   362   \n1450 167.   18.9 \n1451 410   463   \n1452 133.   86.5 \n1453 331   411   \n1454 159.  124.  \n1455 558   481   \n1456 212   137   \n1457 427   470   \n1458 255   301   \n1459 107.   44.9 \n1460 236   278   \n1461 177   172   \n1462 358   433   \n1463 223   186   \n1464 376   439   \n1465 122.   43.6 \n1466 617   389   \n1467 368   322   \n1468 274   379   \n1469 288   258   \n1470 443   470   \n1471 299   416   \n1472 383   395   \n1473 185   153   \n1474 248   202   \n1475 162    18.9 \n1476 691   415   \n1477 653   435   \n1478 436   395   \n1479 478   409   \n1480 434   407   \n1481 111.   39.7 \n1482 472   413   \n1483 253   315   \n1484 152   169   \n1485 143   214   \n1486 118.   74.8 \n1487 205   237   \n1488 244   290   \n1489 318   346   \n1490  72.3 162.  \n1491 154.  133.  \n1492 220   250   \n1493  82.7 164.  \n1494 402   385   \n1495 101.   69.6 \n1496 814   316   \n1497 542   474   \n1498 452   459   \n1499 275   269   \n1500 560   445   \n1501 569   479   \n1502 110    34.5 \n1503 685   425   \n1504 171   224   \n1505 150.   29.3 \n1506 295   368   \n1507 153.  133.  \n1508 356   312   \n1509 122.   21.5 \n1510  77.5 133.  \n1511 144.  114.  \n1512 591   441   \n1513 122.  106   \n1514 105.  103.  \n1515 143   220   \n1516 167   204   \n1517 346   346   \n1518 149   103.  \n1519 426   469   \n1520 570   465   \n1521 182   238   \n1522 761   353   \n1523 109.   52.7 \n1524 566   401   \n1525 196   207   \n1526 149   177   \n1527 144.  133.  \n1528 548   482   \n1529 392   454   \n1530 385   380   \n1531 309   285   \n1532 120.   93   \n1533 416   406   \n1534 767   375   \n1535 128.   39.7 \n1536 566   394   \n1537 339   396   \n1538 148.   93   \n1539 312   322   \n1540 152.  110.  \n1541 516   401   \n1542 600   471   \n1543 251   306   \n1544 380   426   \n1545 804   292   \n1546 163   240   \n1547 111.   37.1 \n1548 761   382   \n1549 327   358   \n1550 255   311   \n1551 378   401   \n1552 349   373   \n1553 140.   39.7 \n1554 230   206   \n1555 120.  103.  \n1556 613   401   \n1557 274   276   \n1558 286   383   \n1559 806   289   \n1560 771   365   \n1561 258   358   \n1562 154   233   \n1563 149   152.  \n1564 368   410   \n1565 130.  164.  \n1566 115.  128.  \n1567 128.   16.3 \n1568 217   224   \n1569 142.    7.20\n1570 790   344   \n1571 229   270   \n1572 219   172   \n1573 175    68.3 \n1574 819   286   \n1575 295   416   \n1576 641   412   \n1577 341   328   \n1578 175    91.7 \n1579 252   244   \n1580 768   344   \n1581 555   482   \n1582 196   205   \n1583 717   417   \n1584  74.9 132   \n1585 180   225   \n1586 334   374   \n1587 106.   95.6 \n1588 191   196   \n1589 811   284   \n1590 362   352   \n1591 109.   31.9 \n1592 144.   18.9 \n1593 221   175   \n1594 693   419   \n1595 610   457   \n1596 179.   57.9 \n1597 247   353   \n1598 139.   94.3 \n1599 509   398   \n1600 297   270   \n1601 344   423   \n1602 611   396   \n1603 635   408   \n1604 655   413   \n1605 579   463   \n1606 216   151   \n1607 166.   81.3 \n1608 295   269   \n1609 805   289   \n1610 289   278   \n1611 130.  167.  \n1612 109.   69.6 \n1613 776   347   \n1614 319   393   \n1615 169   214   \n1616 746   396   \n1617 250   322   \n1618 785   325   \n1619 508   440   \n1620 305   337   \n1621 366   439   \n1622 639   460   \n1623 200   130   \n1624 598   397   \n1625 445   394   \n1626 815   316   \n1627 526   392   \n1628 299   400   \n1629 263   233   \n1630 110    48.8 \n1631 155   174   \n1632  95.7 141.  \n1633 660   446   \n1634 653   410   \n1635 406   461   \n1636 332   397   \n1637 302   338   \n1638 271   362   \n1639 628   393   \n1640  61.9 115.  \n1641 307   327   \n1642 352   373   \n1643 282   379   \n1644 212   246   \n1645 335   407   \n1646 106.   67   \n1647 723   413   \n1648 447   457   \n1649 294   306   \n1650 493   440   \n1651 264   335   \n1652 223   178   \n1653 296   334   \n1654 492   445   \n1655 341   327   \n1656 233   273   \n1657 165   227   \n1658 192   196   \n1659  73.6 140.  \n1660 165.  107.  \n1661 122.  176.  \n1662 703   408   \n1663 598   388   \n1664 763   370   \n1665 782   352   \n1666 644   412   \n1667 158.  116.  \n1668 345   424   \n1669 330   410   \n1670 782   329   \n1671 755   381   \n1672 273   372   \n1673 560   422   \n1674 263   298   \n1675 355   432   \n1676 366   356   \n1677 420   386   \n1678 719   394   \n1679 109.  122.  \n1680 231   271   \n1681 200   197   \n1682 658   424   \n1683 416   455   \n1684 574   379   \n1685 343   422   \n1686 163.   99.5 \n1687 463   423   \n1688 643   439   \n1689 512   440   \n1690 444   405   \n1691 222   169   \n1692 319   348   \n1693 217   170   \n1694 607   415   \n1695 179.   59.2 \n1696 373   434   \n1697 361   370   \n1698 116.   99.5 \n1699  74.9 155.  \n1700 148.   39.7 \n1701 176.  103.  \n1702 302   296   \n1703 127.   25.4 \n1704 149    91.7 \n1705 350   393   \n1706 576   464   \n1707 738   402   \n1708 604   459   \n1709 157   149   \n1710 272   237   \n1711 265   227   \n1712 105.  109.  \n1713 713   400   \n1714 701   418   \n1715 161   155   \n1716 296   339   \n1717 566   404   \n1718 175    67   \n1719 306   414   \n1720 328   311   \n1721 217   160   \n1722  81.4  57.9 \n1723 345   322   \n1724 282   397   \n1725 575   478   \n1726 729   385   \n1727 688   417   \n1728 130.   38.4 \n1729 728   403   \n1730 186   205   \n1731 621   407   \n1732 284   282   \n1733 232   184   \n1734 166.   46.2 \n1735 793   332   \n1736 157   159   \n1737 154   202   \n1738 120.   34.5 \n1739 215   212   \n1740 587   444   \n1741 127.   59.2 \n1742 382   430   \n1743 120.  131.  \n1744 137.  135.  \n1745 551   396   \n1746 178.  112.  \n1747 174   228   \n1748 636   408   \n1749 110    50.1 \n1750 314   339   \n1751 800   300   \n1752 180.   47.5 \n1753 264   377   \n1754 429   471   \n1755 553   442   \n1756 183   238   \n1757 447   471   \n1758 170.  115.  \n1759 628   410   \n1760 287   310   \n1761 180   152   \n1762 101.  178.  \n1763 118.  102.  \n1764 327   408   \n1765 553   376   \n1766 373   369   \n1767 305   332   \n1768 409   395   \n1769 130.  170.  \n1770 251   264   \n1771 556   459   \n1772 266   329   \n1773 119.   74.8 \n1774 557   428   \n1775 489   437   \n1776 725   389   \n1777 109.   29.3 \n1778 561   428   \n1779 137.   35.8 \n1780  93.1  51.4 \n1781 760   382   \n1782 303   333   \n1783 433   472   \n1784 529   460   \n1785  91.8  72.2 \n1786 289   322   \n1787 176.   91.7 \n1788 130.  109.  \n1789 178.  105.  \n1790 189   196   \n1791 342   362   \n1792 179   243   \n1793 239   193   \n1794 583   475   \n1795 275   277   \n1796 315   293   \n1797 360   429   \n1798 148   180   \n1799 657   415   \n1800 255   215   \n1801 178.   61.8 \n1802 296   311   \n1803 178.   64.4 \n1804 149    51.4 \n1805 227   267   \n1806 355   431   \n1807 120.   56.6 \n1808 202   135   \n1809 626   396   \n1810 176.   96.9 \n1811 266   281   \n1812 461   474   \n1813 171   183   \n1814 449   476   \n1815 219   239   \n1816  97   166.  \n1817 622   458   \n1818 331   316   \n1819 254   268   \n1820 185   197   \n1821 453   400   \n1822 332   406   \n1823 131.  146.  \n1824 424   401   \n1825 539   482   \n1826 567   387   \n1827 504   479   \n1828 119.   93   \n1829  91.8 144.  \n1830 131.  144.  \n1831 325   355   \n1832 150.   83.9 \n1833 413   396   \n1834 566   398   \n1835 297   402   \n1836 187   143   \n1837 340   379   \n1838 155   169   \n1839 171.   39.7 \n1840 537   386   \n1841 703   426   \n1842  87.9 162.  \n1843 536   386   \n1844 797   305   \n1845 251   209   \n1846  71   158   \n1847 118.  170.  \n1848 152.   83.9 \n1849 153.  103.  \n1850 303   378   \n1851 716   418   \n1852 552   463   \n1853 148   179   \n1854 123   146.  \n1855 251   235   \n1856 151   227   \n1857 180.   51.4 \n1858 124.    4.60\n1859 256   250   \n1860 489   482   \n1861 454   410   \n1862 124.  132   \n1863 214   166   \n1864  89.2 162.  \n1865 284   403   \n1866 789   318   \n1867 161.   98.2 \n1868 276   279   \n1869 162    35.8 \n1870 120.   77.4 \n1871  82.7  81.3 \n1872 282   273   \n1873 296   370   \n1874  94.4  42.3 \n1875 454   457   \n1876 252   349   \n1877  93.1  47.5 \n1878 462   479   \n1879 562   374   \n1880 149   185   \n1881 220   214   \n1882 257   333   \n1883 235   276   \n1884 181   204   \n1885 627   450   \n1886 295   415   \n1887 722   398   \n1888 428   407   \n1889 511   445   \n1890 173   199   \n1891 287   271   \n1892 300   338   \n1893  93.1 159.  \n1894 116.  101.  \n1895 627   464   \n1896 191   142   \n1897  77.5  48.8 \n1898 133.  135.  \n1899 409   394   \n1900 757   379   \n1901  93.1  77.4 \n1902 370   442   \n1903 179.   44.9 \n1904 593   438   \n1905 788   319   \n1906 226   183   \n1907  56.7 114.  \n1908 216   150   \n1909 433   434   \n1910 387   381   \n1911 257   357   \n1912 198   196   \n1913 640   442   \n1914 102.   63.1 \n1915 215   251   \n1916 122.  131.  \n1917 307   290   \n1918 128.   59.2 \n1919 594   425   \n1920 230   240   \n1921 146.  102.  \n1922 193   135   \n1923 464   438   \n1924 283   252   \n1925 573   425   \n1926 105.  106   \n1927 292   395   \n1928 349   427   \n1929 788   321   \n1930  76.2 111.  \n1931  78.8  47.5 \n1932 451   461   \n1933 270   395   \n1934 182.  181.  \n1935 344   322   \n1936 213   240   \n1937 238   209   \n1938 208   244   \n1939 729   409   \n1940 252   339   \n1941 164   240   \n1942 193   196   \n1943 298   272   \n1944 263   311   \n1945 154   232   \n1946 270   234   \n1947 289   327   \n1948 551   444   \n1949 358   333   \n1950 252   232   \n1951 120.  105.  \n1952 805   332   \n1953 139.   38.4 \n1954 176.  101.  \n1955 246   237   \n1956 109.   46.2 \n1957 648   430   \n1958 172.  115.  \n1959 372   389   \n1960 105.  105.  \n1961 780   330   \n1962 582   476   \n1963 523   480   \n1964 311   288   \n1965 513   397   \n1966 114.  150.  \n1967 792   341   \n1968 728   409   \n1969 350   428   \n1970 577   464   \n1971 150.   38.4 \n1972 639   451   \n1973 787   356   \n1974 325   407   \n1975 361   377   \n1976 284   351   \n1977 230   263   \n1978 176.   95.6 \n1979 603   390   \n1980 790   316   \n1981 546   380   \n1982 334   353   \n1983 421   416   \n1984 771   342   \n1985 228   191   \n1986 247   351   \n1987 327   409   \n1988 634   400   \n1989 154   194   \n1990 803   335   \n1991 241   261   \n1992 148.  102.  \n1993 468   426   \n1994 601   442   \n1995 102.   52.7 \n1996 613   468   \n1997 308   411   \n1998 218   198   \n1999 159.   44.9 \n2000 341   326   \n2001 320   385   \n2002 602   427   \n2003 148.   26.7 \n2004 156   196   \n2005 169   178   \n2006 807   330   \n2007 370   373   \n2008 582   386   \n2009 200   202   \n2010 487   442   \n2011 274   275   \n2012 238   225   \n2013 366   438   \n2014 272   335   \n2015 394   415   \n2016 576   477   \n2017 171.   20.2 \n2018 382   388   \n2019 242   262   \n2020 242   254   \n2021 130.  162.  \n2022 192   142   \n2023 360   371   \n2024 309   286   \n2025  50.2 118.  \n2026 105.  115.  \n2027 797   334   \n2028 637   408   \n2029 126.  109.  \n2030 451   452   \n2031 389   373   \n2032 150.   52.7 \n2033 116.   85.2 \n2034 211   147   \n2035 185   154   \n2036 727   410   \n2037 413   456   \n2038 256   270   \n2039 745   382   \n2040 527   451   \n2041 625   411   \n2042 362   311   \n2043 101.  157.  \n2044 336   415   \n2045 128.  103.  \n2046 276   386   \n2047 476   398   \n2048 220   166   \n2049 346   333   \n2050 272   338   \n2051 293   266   \n2052 563   414   \n2053 222   225   \n2054 106.  154.  \n2055 289   410   \n2056 752   364   \n2057 165   175   \n2058 284   338   \n2059 178   146   \n2060 363   322   \n2061 253   245   \n2062 416   465   \n2063 513   402   \n2064 105.  142.  \n2065 566   420   \n2066 644   428   \n2067 598   394   \n2068 756   359   \n2069  93.1  41   \n2070 332   367   \n2071 292   372   \n2072 762   351   \n2073 331   323   \n2074 607   390   \n2075 717   412   \n2076 266   228   \n2077 566   454   \n2078 263   280   \n2079 302   319   \n2080 122.  132   \n2081 443   398   \n2082 149   233   \n2083 222   224   \n2084 192   154   \n2085 461   479   \n2086 152.  107.  \n2087 643   428   \n2088 130.   94.3 \n2089 300   382   \n2090 292   303   \n2091 724   406   \n2092  82.7  57.9 \n2093 217   155   \n2094 783   327   \n2095 283   370   \n2096 306   292   \n2097 130.   39.7 \n2098 180.   46.2 \n2099 743   379   \n2100 546   482   \n2101 806   331   \n2102 107.  141.  \n2103 819   307   \n2104 422   401   \n2105 800   301   \n2106 385   366   \n2107  76.2  83.9 \n2108 438   473   \n2109 548   477   \n2110 218   255   \n2111 228   253   \n2112 570   377   \n2113 668   428   \n2114 391   443   \n2115 175   114.  \n2116 728   410   \n2117 255   214   \n2118 702   426   \n2119 277   271   \n2120 353   396   \n2121 417   454   \n2122 714   419   \n2123 230   182   \n2124 567   416   \n2125 130.  141.  \n2126 142   200   \n2127 332   325   \n2128 153   193   \n2129 387   452   \n2130 786   323   \n2131 326   358   \n2132 250   301   \n2133 136    61.8 \n2134 229   239   \n2135 418   392   \n2136 323   354   \n2137 265   385   \n2138 179.   56.6 \n2139 693   413   \n2140 569   376   \n2141 316   343   \n2142 581   435   \n2143 124.  133.  \n2144 633   408   \n2145  99.6 178.  \n2146  99.6  74.8 \n2147 136    60.5 \n2148 153.  123.  \n2149 292   362   \n2150 707   411   \n2151 371   408   \n2152 325   384   \n2153 546   379   \n2154 269   331   \n2155 579   421   \n2156 289   333   \n2157 334   413   \n2158 164   225   \n2159 619   468   \n2160 130.  161.  \n2161 182   143   \n2162  93.1  90.4 \n2163 576   471   \n2164 237   247   \n2165 114.   72.2 \n2166 490   427   \n2167 354   431   \n2168 526   453   \n2169 265   338   \n2170 114.   77.4 \n2171 775   354   \n2172 272   284   \n2173 210   245   \n2174 289   411   \n2175 163   181   \n2176 552   377   \n2177 196   154   \n2178 343   347   \n2179 268   231   \n2180 544   434   \n2181 333   341   \n2182 363   430   \n2183 157.  129.  \n2184 446   476   \n2185 704   426   \n2186 118.   12.4 \n2187 357   378   \n2188  50.2 115.  \n2189 160   165   \n2190 298   338   \n2191 470   476   \n2192 176.   98.2 \n2193 352   353   \n2194 159.   98.2 \n2195 175   181.  \n2196 738   401   \n2197 482   473   \n2198 178.  110.  \n2199 569   461   \n2200 249   279   \n2201 198   219   \n2202  91.8 161.  \n2203 168.   41   \n2204 273   284   \n2205 337   334   \n2206 337   416   \n2207 168.   77.4 \n2208 463   442   \n2209 153.   57.9 \n2210 469   413   \n2211 308   409   \n2212 534   429   \n2213 711   421   \n2214 187   142   \n2215 613   399   \n2216  94.4  86.5 \n2217 591   386   \n2218 491   425   \n2219 226   202   \n2220 657   453   \n2221 126.   42.3 \n2222 787   347   \n2223 381   425   \n2224 461   445   \n2225 198   134   \n2226 625   391   \n2227 149    55.3 \n2228 246   346   \n2229 540   383   \n2230 198   203   \n2231 818   308   \n2232 101.  171   \n2233 263   334   \n2234 268   267   \n2235 182   158   \n2236 334   237   \n2237 285   405   \n2238 242   222   \n2239 281   257   \n2240 247   296   \n2241 231   215   \n2242 155   210   \n2243 171   168   \n2244 436   415   \n2245 258   346   \n2246 123   132   \n2247 519   395   \n2248 273   339   \n2249 306   337   \n2250 740   388   \n2251 637   461   \n2252 307   317   \n2253 146.   46.2 \n2254 304   415   \n2255 219   163   \n2256 548   460   \n2257 267   391   \n2258 641   415   \n2259 163.   83.9 \n2260 289   336   \n2261 657   416   \n2262 781   329   \n2263 346   359   \n2264 361   436   \n2265 163.   86.5 \n2266 798   304   \n2267 239   208   \n2268 574   478   \n2269 166   175   \n2270 799   333   \n2271 273   274   \n2272 357   372   \n2273 254   247   \n2274 553   482   \n2275 623   390   \n2276 274   324   \n2277 438   391   \n2278 361   310   \n2279 771   352   \n2280 224   180   \n2281 218   225   \n2282 486   472   \n2283 547   469   \n2284 782   363   \n2285 118.   42.3 \n2286 603   437   \n2287 666   434   \n2288 124.   57.9 \n2289 744   380   \n2290 150.  103.  \n2291 591   453   \n2292 449   455   \n2293 304   286   \n2294  95.7  65.7 \n2295 180   151   \n2296 164   199   \n2297 412   420   \n2298 139.   25.4 \n2299 503   455   \n2300 565   408   \n2301 234   257   \n2302 602   389   \n2303 377   427   \n2304 762   381   \n2305 448   464   \n2306 578   385   \n2307 118.   59.2 \n2308 380   447   \n2309 208   239   \n2310 137.  154.  \n2311 380   400   \n2312 145   175   \n2313 312   289   \n2314 262   224   \n2315 295   334   \n2316 149   170   \n2317 555   459   \n2318 261   373   \n2319 411   458   \n2320 484   473   \n2321 295   307   \n2322 249   301   \n2323 362   370   \n2324 178   174   \n2325 452   406   \n2326  85.3 146.  \n2327  63.2 131.  \n2328 599   460   \n2329  87.9  74.8 \n2330 279   248   \n2331 330   390   \n2332 127.   15   \n2333 421   462   \n2334 420   420   \n2335 116.  152.  \n2336 272   253   \n2337 768   345   \n2338 818   309   \n2339 251   205   \n2340 434   432   \n2341 216   148   \n2342 496   433   \n2343 155   196   \n2344 176   144   \n2345 780   365   \n2346 364   412   \n2347 754   381   \n2348 143   199   \n2349 284   382   \n2350 320   349   \n2351 443   475   \n2352 501   468   \n2353 244   288   \n2354 165.   82.6 \n2355 362   319   \n2356 114.   60.5 \n2357 219   191   \n2358 376   377   \n2359 422   388   \n2360 246   202   \n2361 344   347   \n2362 146.  131.  \n2363  77.5  50.1 \n2364 450   395   \n2365 167   144   \n2366 593   473   \n2367 636   444   \n2368 430   395   \n2369 456   445   \n2370 596   448   \n2371 606   390   \n2372 566   444   \n2373 250   203   \n2374 174   138   \n2375 167   177   \n2376 370   372   \n2377  69.7 107.  \n2378  87.9  90.4 \n2379 107.   90.4 \n2380 751   364   \n2381  80.1  46.2 \n2382 537   437   \n2383 171   245   \n2384 400   452   \n2385 577   477   \n2386  99.6 161.  \n2387 597   393   \n2388 576   459   \n2389 386   369   \n2390 116.   98.2 \n2391 804   291   \n2392 325   390   \n2393 777   348   \n2394 276   378   \n2395 216   209   \n2396 407   394   \n2397 396   451   \n2398 408   452   \n2399 659   420   \n2400 141.   41   \n2401 380   448   \n2402 181   223   \n2403 326   390   \n2404 447   398   \n2405 561   480   \n2406 237   279   \n2407 225   172   \n2408 264   260   \n2409 498   416   \n2410 743   398   \n2411 782   328   \n2412 171.  115.  \n2413 635   445   \n2414 289   335   \n2415 579   386   \n2416 359   339   \n2417 169   229   \n2418 289   331   \n2419 777   334   \n2420 812   320   \n2421 244   235   \n2422 295   366   \n2423 165.   38.4 \n2424 218   228   \n2425 518   477   \n2426 137.   80   \n2427 612   419   \n2428 548   379   \n2429 183   147   \n2430 462   426   \n2431 211   240   \n2432 417   460   \n2433 140   204   \n2434 344   323   \n2435 462   412   \n2436 658   417   \n2437 368   323   \n2438 800   342   \n2439 212   154   \n2440 282   389   \n2441 318   403   \n2442 235   277   \n2443 197   196   \n2444 269   243   \n2445 711   415   \n2446 753   383   \n2447 253   365   \n2448 286   256   \n2449 241   253   \n2450 785   334   \n2451 418   454   \n2452 146.   25.4 \n2453 216   170   \n2454 450   472   \n2455 300   400   \n2456 176.   65.7 \n2457 390   444   \n2458 466   475   \n2459 563   480   \n2460 552   435   \n2461 700   410   \n2462 324   389   \n2463 153.  120.  \n2464 764   379   \n2465 303   321   \n2466 246   337   \n2467 397   457   \n2468 136   136.  \n2469 141.   47.5 \n2470 614   402   \n2471 518   406   \n2472 808   286   \n2473 141.   51.4 \n2474  64.5 120.  \n2475 266   230   \n2476 358   395   \n2477 813   284   \n2478 184   238   \n2479 807   287   \n2480 144   185   \n2481 331   365   \n2482 193   213   \n2483 468   401   \n2484 299   273   \n2485 153   169   \n2486 775   368   \n2487 367   331   \n2488 757   376   \n2489 128.   28   \n2490 425   438   \n2491 127.   29.3 \n2492 168.   78.7 \n2493 371   358   \n2494 209   143   \n2495 152.   35.8 \n2496 132.   61.8 \n2497 344   339   \n2498 130.  135.  \n2499 265   311   \n2500 251   320   \n2501 137   197   \n2502 623   407   \n2503 821   302   \n2504 263   249   \n2505 127.  142.  \n2506 707   405   \n2507 273   239   \n2508 265   262   \n2509 478   482   \n2510 144.   20.2 \n2511 218   172   \n2512 131.  148.  \n2513 465   397   \n2514 233   193   \n2515 158   197   \n2516 146.   43.6 \n2517 113.   72.2 \n2518 176   139   \n2519 259   256   \n2520 258   345   \n2521 477   402   \n2522  82.7 140.  \n2523 245   226   \n2524 819   308   \n2525 142.   11.1 \n2526 110    77.4 \n2527  84   145   \n2528 338   364   \n2529 130.  166.  \n2530 567   461   \n2531 369   441   \n2532  78.8 166.  \n2533 819   285   \n2534 148   171   \n2535 495   482   \n2536 243   235   \n2537 116.   95.6 \n2538 266   264   \n2539 623   394   \n2540 272   379   \n2541 126.   93   \n2542 221   188   \n2543 115.   31.9 \n2544 137.   37.1 \n2545 130.  148.  \n2546 383   372   \n2547 162   159   \n2548 720   400   \n2549 231   190   \n2550 279   274   \n2551 268   282   \n2552 647   449   \n2553 167.   44.9 \n2554 328   343   \n2555 164   245   \n2556 593   460   \n2557 119.  145   \n2558 412   450   \n2559 324   388   \n2560 271   293   \n2561 238   248   \n2562 195   196   \n2563 259   352   \n2564 622   460   \n2565 146.   48.8 \n2566 172.  103.  \n2567 551   377   \n2568 105.   99.5 \n2569  51.5 112.  \n2570 308   408   \n2571 607   458   \n2572 168.  109.  \n2573 554   386   \n2574 325   406   \n2575  77.5 116.  \n2576 119.  103.  \n2577 588   443   \n2578 283   371   \n2579 502   398   \n2580 152   200   \n2581 789   337   \n2582 157   158"
  },
  {
    "objectID": "slides/03-visualize.html#summary-statistics-might-help-us",
    "href": "slides/03-visualize.html#summary-statistics-might-help-us",
    "title": "Data Visualization",
    "section": "Summary statistics might help us",
    "text": "Summary statistics might help us\nvar: x\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   50.2   167.2   288.0   346.0   499.8   822.0 \n\n\nvar: y\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    2.0   162.2   314.0   283.3   401.0   482.0 \n\n\ncorrelation between x, y\n\n\n[1] 0.7601536"
  },
  {
    "objectID": "slides/03-visualize.html#who-needs-your-dataviz",
    "href": "slides/03-visualize.html#who-needs-your-dataviz",
    "title": "Data Visualization",
    "section": "Who needs your dataviz?",
    "text": "Who needs your dataviz?\nYou generally visualize data for two types of people:\n\n\nYourself.\nOthers.\n\n\n\nWhen you make dataviz for yourself, your aim is explorative and your goal is to generate as many raw graphs as quickly as possible to gain insights on your data.\n\n\nWhen you make dataviz for others, your aim is communicative and you work to be as clear and as understandable as possible."
  },
  {
    "objectID": "slides/03-visualize.html#exercise",
    "href": "slides/03-visualize.html#exercise",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\nWith the penguin dataset:\n\nMake a histogram of the variable bill_length_mm. Repeat the same histogram, but use colors to differentiate species.\nMake a histogram of bill_depth_mm, but only for female penguins.\nMake a scatterplot of flipper_length_mm vs body_mass_g, use colors to differentiate species.\n\n\n\nGet help from ggplot2‚Äôs documentation.\n\nOn ggplot2‚Äôs book.\nOn R4DS book.\nOn ggplot2‚Äôs website."
  },
  {
    "objectID": "slides/03-visualize.html#a-grammar-of-graphics",
    "href": "slides/03-visualize.html#a-grammar-of-graphics",
    "title": "Data Visualization",
    "section": "A grammar of graphics",
    "text": "A grammar of graphics\n\n\n\n\nggplot2 is one of the main tools for declaring graphics in R.\nIt is based on the grammar of graphics.\nIt can be used both for explorative analysis and for publication ready graphs."
  },
  {
    "objectID": "slides/03-visualize.html#the-grammar-of-graphics",
    "href": "slides/03-visualize.html#the-grammar-of-graphics",
    "title": "Data Visualization",
    "section": "The grammar of graphics",
    "text": "The grammar of graphics\nThe grammar of graphics is a unifying framework to conceptualize and program datavisualization.\nIt states that most graphics are composed of:\n\nA default dataset and set of mappings from variables to aesthetics.\nOne or more layers, with each layer having one geometric object, one statistical transformation, one position adjustment, and optionally, one dataset and set of aesthetic mappings,\nOne scale for each aesthetic mapping used.\nA coordinate system.\nThe facet specification.\n\nHadley Wickham - A Layered Grammar of Graphics, 2010"
  },
  {
    "objectID": "slides/03-visualize.html#lets-put-it-in-practice",
    "href": "slides/03-visualize.html#lets-put-it-in-practice",
    "title": "Data Visualization",
    "section": "Let‚Äôs put it in practice",
    "text": "Let‚Äôs put it in practice\nWe take dataset (penguins) and decide that we want to map a set of variables to aesthetics specification‚Ä¶\n\n\nVariables\n\nbill_length_mm\nbill_depth_mm\nisland\nsex\n\n\nAesthetics\n\nx\ny\ncolour\nshape"
  },
  {
    "objectID": "slides/03-visualize.html#lets-put-it-in-practice-1",
    "href": "slides/03-visualize.html#lets-put-it-in-practice-1",
    "title": "Data Visualization",
    "section": "Let‚Äôs put it in practice",
    "text": "Let‚Äôs put it in practice\n\n\n\n\nflowchart LR\n  bill_length_mm --> x\n  bill_depth_mm --> y\n  island --> colour\n  sex --> shape\n  subgraph Variable\n  bill_length_mm\n  bill_depth_mm\n  island\n  sex\n  end\n  subgraph aesthetics\n  x\n  y\n  colour\n  shape\n  end"
  },
  {
    "objectID": "slides/03-visualize.html#section-6",
    "href": "slides/03-visualize.html#section-6",
    "title": "Data Visualization",
    "section": "",
    "text": "A default dataset‚Ä¶\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot()"
  },
  {
    "objectID": "slides/03-visualize.html#section-7",
    "href": "slides/03-visualize.html#section-7",
    "title": "Data Visualization",
    "section": "",
    "text": "A default dataset and set of mappings from variables to aesthetics.\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n    )"
  },
  {
    "objectID": "slides/03-visualize.html#section-8",
    "href": "slides/03-visualize.html#section-8",
    "title": "Data Visualization",
    "section": "",
    "text": "One or more layers, with each layer having one geometric object‚Ä¶\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point()"
  },
  {
    "objectID": "slides/03-visualize.html#section-9",
    "href": "slides/03-visualize.html#section-9",
    "title": "Data Visualization",
    "section": "",
    "text": "‚Ä¶and a statistical transformation.\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth()"
  },
  {
    "objectID": "slides/03-visualize.html#section-10",
    "href": "slides/03-visualize.html#section-10",
    "title": "Data Visualization",
    "section": "",
    "text": "‚Ä¶and a statistical transformation.\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth(method = 'lm')"
  },
  {
    "objectID": "slides/03-visualize.html#section-11",
    "href": "slides/03-visualize.html#section-11",
    "title": "Data Visualization",
    "section": "",
    "text": "The facet specification.\n\n\n\np <- \n  penguins %>%\n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth(method = 'lm') +\n  facet_wrap(facets = 'sex',\n             ncol = 1)"
  },
  {
    "objectID": "slides/03-visualize.html#section-12",
    "href": "slides/03-visualize.html#section-12",
    "title": "Data Visualization",
    "section": "",
    "text": "We can also modify the coordinate system, if needed.\n\n\n\np <- \n  penguins %>%\n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth(method = 'lm') +\n  facet_wrap(facets = 'sex',\n             ncol = 1) +\n  scale_y_log10()"
  },
  {
    "objectID": "slides/03-visualize.html#exercise-1",
    "href": "slides/03-visualize.html#exercise-1",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\nTake the penguins dataset; make a bar chart that counts how many penguins have been recorded for each species.\n\nwhich variable are you mapping to each aesthetic specification?\nWhich geometric object are you using?\nAre you using a statistical transformation?"
  },
  {
    "objectID": "slides/03-visualize.html#graphical-exploration",
    "href": "slides/03-visualize.html#graphical-exploration",
    "title": "Data Visualization",
    "section": "Graphical exploration",
    "text": "Graphical exploration\nYou can use graphics to learn what‚Äôs inside our data.\n\nFirst, asking questions about data then, plotting them with different visual models to highlight and learn about data patterns, we can go through these two steps iteratively (plot, rinse and repeat)."
  },
  {
    "objectID": "slides/03-visualize.html#visual-models",
    "href": "slides/03-visualize.html#visual-models",
    "title": "Data Visualization",
    "section": "Visual models",
    "text": "Visual models\nA visual model is a specific type of graph, designed for a specific purpose.\n\nggplot provides many basic visual models in its set of geom_* functions.\n\nNiche and advanced visual models can be found in its ecosystem of extensions."
  },
  {
    "objectID": "slides/03-visualize.html#visual-models-1",
    "href": "slides/03-visualize.html#visual-models-1",
    "title": "Data Visualization",
    "section": "Visual models",
    "text": "Visual models\nExamples of visual models used in exploratory data analysis are:\n\n\none variable\n\nbarplots.\nhistograms.\nboxplots.\n\n\ntwo variables\n\nscatterplots.\nheatmaps.\n\n\n\nDon‚Äôt feel limited to these visual models, we learn to program because we want flexibility."
  },
  {
    "objectID": "slides/03-visualize.html#histograms",
    "href": "slides/03-visualize.html#histograms",
    "title": "Data Visualization",
    "section": "Histograms",
    "text": "Histograms\n\npenguins %>% ggplot(aes(x = flipper_length_mm, fill = species)) + geom_histogram()"
  },
  {
    "objectID": "slides/03-visualize.html#histograms-1",
    "href": "slides/03-visualize.html#histograms-1",
    "title": "Data Visualization",
    "section": "Histograms",
    "text": "Histograms\n\npenguins %>% ggplot(aes(x = flipper_length_mm, fill = species)) + geom_histogram()"
  },
  {
    "objectID": "slides/03-visualize.html#boxplots",
    "href": "slides/03-visualize.html#boxplots",
    "title": "Data Visualization",
    "section": "Boxplots",
    "text": "Boxplots\n\n\nRobust summary statistics displayed (median, IQR, outliers).\n\n\n\n\n\nImage source: Wikipedia"
  },
  {
    "objectID": "slides/03-visualize.html#boxplots-1",
    "href": "slides/03-visualize.html#boxplots-1",
    "title": "Data Visualization",
    "section": "Boxplots",
    "text": "Boxplots\n\npenguins %>%\n  ggplot(aes(x = species, y = flipper_length_mm, fill = sex)) + geom_boxplot()"
  },
  {
    "objectID": "slides/03-visualize.html#scatterplots",
    "href": "slides/03-visualize.html#scatterplots",
    "title": "Data Visualization",
    "section": "Scatterplots",
    "text": "Scatterplots\n\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, y= body_mass_g, colour = species)) + geom_point()"
  },
  {
    "objectID": "slides/03-visualize.html#heatmaps-1",
    "href": "slides/03-visualize.html#heatmaps-1",
    "title": "Data Visualization",
    "section": "Heatmaps",
    "text": "Heatmaps"
  },
  {
    "objectID": "slides/03-visualize.html#heatmaps-2",
    "href": "slides/03-visualize.html#heatmaps-2",
    "title": "Data Visualization",
    "section": "Heatmaps",
    "text": "Heatmaps\n\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, body_mass_g)) +\n  geom_hex(bins = c(20, 20*0.010)) +\n  scale_fill_gradient(low = 'grey70', high = 'blue')"
  },
  {
    "objectID": "slides/03-visualize.html#exercise-2",
    "href": "slides/03-visualize.html#exercise-2",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\nMake a histogram of the continuous variables in the penguins dataset but compute the bin statistics before making the plot.\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "slides/04-get.html#dataframes-are-rectangular-datasets",
    "href": "slides/04-get.html#dataframes-are-rectangular-datasets",
    "title": "Get Data into R",
    "section": "Dataframes are rectangular datasets",
    "text": "Dataframes are rectangular datasets\nMore often than not when we speak about datasets, we speak about rectangular data, i.e., data in two-dimensional table, made of values organized in rows and columns.\n\n\nEach cell stores a value.\nEach value belongs to one column and one row.\n\n\n\nRectnagular data are the easiest to use, when we get data that are not rectangular, we try to reshape them in that form."
  },
  {
    "objectID": "slides/04-get.html#readr",
    "href": "slides/04-get.html#readr",
    "title": "Get Data into R",
    "section": "Readr",
    "text": "Readr\n\n\n\n\nReadr is a package that loads (reads) Rectangular Text data in R.\nIt‚Äôs fast, it guesses column types explicitly and it‚Äôs pipe friendly\nYou can use it to read both local data and online data from a URL.\nFor example we can use it to read data in CSV and TSV formats and many more."
  },
  {
    "objectID": "slides/04-get.html#read-the-palmer-pengunis-dataset",
    "href": "slides/04-get.html#read-the-palmer-pengunis-dataset",
    "title": "Get Data into R",
    "section": "Read the Palmer Pengunis dataset",
    "text": "Read the Palmer Pengunis dataset\nWe can use again on the Palmer Penguins Dataset\nThe source code of this package, is on github; we can find the tidy CSV data in the inst/exdata folder.\n\n\npenguin_csv_url <- 'https://raw.githubusercontent.com/allisonhorst/palmerpenguins/main/inst/extdata/penguins.csv'\n \nread_csv(penguin_csv_url)\n\nRows: 344 Columns: 8\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (5): bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, year\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 344 √ó 8\n   species island    bill_length_mm bill_depth_mm flipper_‚Ä¶¬π body_‚Ä¶¬≤ sex    year\n   <chr>   <chr>              <dbl>         <dbl>      <dbl>   <dbl> <chr> <dbl>\n 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007\n 2 Adelie  Torgersen           39.5          17.4        186    3800 fema‚Ä¶  2007\n 3 Adelie  Torgersen           40.3          18          195    3250 fema‚Ä¶  2007\n 4 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 5 Adelie  Torgersen           36.7          19.3        193    3450 fema‚Ä¶  2007\n 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007\n 7 Adelie  Torgersen           38.9          17.8        181    3625 fema‚Ä¶  2007\n 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007\n 9 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n10 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n# ‚Ä¶ with 334 more rows, and abbreviated variable names ¬π‚Äãflipper_length_mm,\n#   ¬≤‚Äãbody_mass_g\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/04-get.html#section",
    "href": "slides/04-get.html#section",
    "title": "Get Data into R",
    "section": "",
    "text": "The tibble that we have loaded and generate d from CSV is not identical to the one that comes already loaded with the palmerpenguins package:\n\npenguins_from_csv <- \n  penguin_csv_url %>% \n  read_csv()\n\nidentical(\n  penguins_from_csv,\n  palmerpenguins::penguins\n)\n\n[1] FALSE\n\n\nLet‚Äôs compare them side by side\n\n\n\npalmerpenguins::penguins %>% \n  glimpse(width = 40)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adel‚Ä¶\n$ island            <fct> Torgersen, T‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, ‚Ä¶\n$ flipper_length_mm <int> 181, 186, 19‚Ä¶\n$ body_mass_g       <int> 3750, 3800, ‚Ä¶\n$ sex               <fct> male, female‚Ä¶\n$ year              <int> 2007, 2007, ‚Ä¶\n\n\n\n\npenguins_from_csv %>% \n  glimpse(width = 40)\n\nRows: 344\nColumns: 8\n$ species           <chr> \"Adelie\", \"A‚Ä¶\n$ island            <chr> \"Torgersen\",‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, ‚Ä¶\n$ flipper_length_mm <dbl> 181, 186, 19‚Ä¶\n$ body_mass_g       <dbl> 3750, 3800, ‚Ä¶\n$ sex               <chr> \"male\", \"fem‚Ä¶\n$ year              <dbl> 2007, 2007, ‚Ä¶\n\n\n\n\nCan you spot that column types are different?"
  },
  {
    "objectID": "slides/04-get.html#parsing",
    "href": "slides/04-get.html#parsing",
    "title": "Get Data into R",
    "section": "Parsing",
    "text": "Parsing\nWhen we read data from text encoded ‚Äúdelimited‚Äù files, such as CSV, we use function that parse the file.\nWhen we parse something, we formalize its structure applying a set of grammatical rules.\nNo parsing rule is perfect, thus we must often review the results and ‚Äúfix‚Äù parsing ‚Äúmistakes‚Äù.\n\n# specify column types manually\n\npenguins_from_csv <-\n  penguin_csv_url %>% \n  read_csv(\n    col_types = cols(\n      species = col_factor(),\n      island = col_factor(),\n      flipper_length_mm = col_integer(),\n      body_mass_g = col_integer(),\n      sex = col_factor(),\n      year = col_integer()\n    )\n  )\n\npenguins_from_csv %>% glimpse()\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n$ sex               <fct> male, female, female, NA, female, male, female, male‚Ä¶\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶"
  },
  {
    "objectID": "slides/04-get.html#exercise",
    "href": "slides/04-get.html#exercise",
    "title": "Get Data into R",
    "section": "Exercise",
    "text": "Exercise\nFind the source code of the readr package.\nIn the inst/extdata folder you can find 10 datasets that display different challenges that you might enconter when you have to load data from an external file.\nLoad in R at least 3 of those datasets using functions from readr.\nGet help from readr‚Äôs documentation and the data import chapter of r4ds.\nWhich function did you use? Did you encounter any parsing failure? How did you fix it?"
  },
  {
    "objectID": "slides/04-get.html#read-a-dataset-from-pangaea",
    "href": "slides/04-get.html#read-a-dataset-from-pangaea",
    "title": "Get Data into R",
    "section": "Read a dataset from PANGAEA",
    "text": "Read a dataset from PANGAEA\nPANGAEA, a Data repository for the evironmental sciences.\nFor our exercise we will use this dataset from Wu et al:\n\n\n‚ÄúEffect of barite-bound Sr on detrital Sr isotope systematics in marine sediments with pertinent Mediterranean examples‚Äù.\n\n\nhttps://doi.pangaea.de/10.1594/PANGAEA.946258"
  },
  {
    "objectID": "slides/04-get.html#section-1",
    "href": "slides/04-get.html#section-1",
    "title": "Get Data into R",
    "section": "",
    "text": "pangaea_filename <- 'Dataset_S2_HCl-leaching.tab'\n\npangaea_path <- here('data-int/Wu-etal_2022/datasets', pangaea_filename)\n\nLet‚Äôs try to read the data file Dataset_S2_HCl-leaching.tab.\nIt‚Äôs a .tab file.\n\npangaea_data <- \n  pangaea_path %>% \n  read_delim()\n\nWarning: One or more parsing issues, see `problems()` for details\n\n\nRows: 177 Columns: 3\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \" \"\nchr (3): /*, DATA, DESCRIPTION:\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "slides/04-get.html#section-2",
    "href": "slides/04-get.html#section-2",
    "title": "Get Data into R",
    "section": "",
    "text": "If we call problems() readr tells us what went wrong.\n\npangaea_data\n\n# A tibble: 177 √ó 3\n   `/*`                   DATA           `DESCRIPTION:`                         \n   <chr>                  <chr>          <chr>                                  \n 1 \"Citation:\\tWu,\"       \"Jiawang;\"     \"Liu, Zhifei; Michard, Annie; Tachikaw‚Ä¶\n 2 \"\\tIn:\"                \"Wu,\"          \"J et al. (2022): Effect of barite-bou‚Ä¶\n 3 \"Keyword(s):\\tBarite;\" \"Barium\"       \"(Ba); marine sediments; Mediterranean‚Ä¶\n 4 \"Related\"              \"to:\\tWu,\"     \"Jiawang; Liu, Zhifei; Michard, Annie;‚Ä¶\n 5 \"Funding:\\tChina\"      \"Postdoctoral\" \"Science Foundation (URI: http://res.c‚Ä¶\n 6 \"\\tChina\"              \"Postdoctoral\" \"Science Foundation (URI: http://res.c‚Ä¶\n 7 \"\\tEuropean\"           \"Commission\"   \"(EC), grant/award no. MAS2-CT93-0051:‚Ä¶\n 8 \"\\tEuropean\"           \"Commission\"   \"(EC), grant/award no. MAS3 CT97-0137:‚Ä¶\n 9 \"\\tEuropean\"           \"Commission\"   \"(EC), grant/award no. MAST1-90022C: E‚Ä¶\n10 \"\\tNational\"           \"Natural\"      \"Science Foundation of China (NSFC) (U‚Ä¶\n# ‚Ä¶ with 167 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/04-get.html#section-3",
    "href": "slides/04-get.html#section-3",
    "title": "Get Data into R",
    "section": "",
    "text": "We can use the arguments:\n\n\ndelim = '\\t' to tell read_delim() that we are reading a file delimited by tabulature (\\t).\nskip = 49 to tell it that the first 49 rows must be skipped.\n\n\n\npangaea_data <- \n  pangaea_path %>% \n  read_delim(delim = '\\t',\n             skip = 49)"
  },
  {
    "objectID": "slides/04-get.html#section-4",
    "href": "slides/04-get.html#section-4",
    "title": "Get Data into R",
    "section": "",
    "text": "Now the data that we‚Äôve imported into R looks fine.\n\npangaea_data %>% glimpse()\n\nRows: 128\nColumns: 19\n$ Event                      <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL‚Ä¶\n$ Latitude                   <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617‚Ä¶\n$ Longitude                  <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117‚Ä¶\n$ `Elevation [m]`            <dbl> -339, -339, -339, -339, -339, -339, -339, -‚Ä¶\n$ `Sample label (barite-Sr)` <chr> \"SL73-1\", \"SL73-2\", \"SL73-3\", \"SL73-4\", \"SL‚Ä¶\n$ `Samp type`                <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"S1b\", \"S1b\",‚Ä¶\n$ `Depth [m]`                <dbl> 0.0045, 0.0465, 0.0665, 0.1215, 0.1765, 0.1‚Ä¶\n$ `Age [ka BP]`              <dbl> 1.66, 3.13, 4.13, 5.75, 7.30, 7.78, 8.65, 9‚Ä¶\n$ `CaCO3 [%]`                <dbl> 61.5, 55.1, 53.0, 43.4, 41.8, 42.3, 42.6, 3‚Ä¶\n$ `Ba [¬µg/g] (Leachate)`     <dbl> 72.6, 64.3, 37.4, 63.5, 101.0, 141.0, 75.2,‚Ä¶\n$ `Sr [¬µg/g] (Leachate)`     <dbl> 767, 681, 690, 552, 527, 528, 551, 482, 391‚Ä¶\n$ `Ca [¬µg/g] (Leachate)`     <dbl> 188951.9, 163260.4, 162188.7, 125937.6, 124‚Ä¶\n$ `Al [¬µg/g] (Leachate)`     <dbl> 10612.7, 11428.4, 5463.0, 3261.5, 2121.7, 1‚Ä¶\n$ `Fe [¬µg/g] (Leachate)`     <dbl> 5935.0, 6814.3, 2465.7, 3936.8, 189.6, 7711‚Ä¶\n$ `Ba [¬µg/g] (Residue)`      <dbl> 171.0, 198.0, 251.0, 290.0, 315.0, 259.0, 3‚Ä¶\n$ `Sr [¬µg/g] (Residue)`      <dbl> 66.6, 71.3, 90.3, 99.8, 106.0, 90.7, 108.0,‚Ä¶\n$ `Ca [¬µg/g] (Residue)`      <dbl> 2315.5, 2369.6, 3007.7, 3447.9, 3713.2, 331‚Ä¶\n$ `Al [¬µg/g] (Residue)`      <dbl> 29262.5, 35561.4, 45862.4, 52485.6, 55083.0‚Ä¶\n$ `Fe [¬µg/g] (Residue)`      <dbl> 14834.8, 18301.4, 24534.5, 30745.3, 28532.2‚Ä¶"
  },
  {
    "objectID": "slides/04-get.html#section-5",
    "href": "slides/04-get.html#section-5",
    "title": "Get Data into R",
    "section": "",
    "text": "Now the data that we‚Äôve imported into R looks fine.\n\npangaea_data %>% skimr::skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n128\n\n\nNumber of columns\n19\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n16\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nEvent\n0\n1\n5\n7\n0\n11\n0\n\n\nSample label (barite-Sr)\n0\n1\n5\n7\n0\n128\n0\n\n\nSamp type\n0\n1\n3\n6\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nLatitude\n0\n1\n35.32\n2.24\n33.38\n33.67\n34.55\n35.29\n39.66\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÉ\n\n\nLongitude\n0\n1\n22.79\n8.17\n4.51\n17.86\n24.51\n28.61\n32.67\n‚ñÇ‚ñÅ‚ñÜ‚ñÜ‚ñá\n\n\nElevation [m]\n0\n1\n-1807.65\n829.55\n-3390.00\n-2373.00\n-1587.00\n-1375.00\n-339.00\n‚ñÇ‚ñá‚ñÅ‚ñÖ‚ñÖ\n\n\nDepth [m]\n0\n1\n0.30\n0.25\n0.00\n0.17\n0.26\n0.34\n1.40\n‚ñá‚ñÖ‚ñÅ‚ñÅ‚ñÅ\n\n\nAge [ka BP]\n0\n1\n7.88\n3.49\n0.30\n5.83\n7.86\n9.82\n19.61\n‚ñÉ‚ñá‚ñá‚ñÇ‚ñÅ\n\n\nCaCO3 [%]\n0\n1\n57.94\n8.29\n33.70\n52.58\n57.80\n64.45\n74.60\n‚ñÅ‚ñÉ‚ñá‚ñá‚ñÖ\n\n\nBa [¬µg/g] (Leachate)\n0\n1\n216.49\n223.26\n0.00\n37.15\n122.00\n398.75\n954.00\n‚ñá‚ñÇ‚ñÇ‚ñÅ‚ñÅ\n\n\nSr [¬µg/g] (Leachate)\n0\n1\n784.98\n207.08\n341.00\n635.15\n767.50\n886.25\n1419.00\n‚ñÉ‚ñá‚ñá‚ñÇ‚ñÅ\n\n\nCa [¬µg/g] (Leachate)\n0\n1\n179277.91\n34034.64\n82460.20\n158421.22\n182153.85\n204214.33\n240253.00\n‚ñÅ‚ñÉ‚ñÜ‚ñá‚ñÖ\n\n\nAl [¬µg/g] (Leachate)\n0\n1\n9075.10\n3739.72\n122.20\n6036.95\n9034.50\n11691.80\n21011.90\n‚ñÇ‚ñá‚ñá‚ñÖ‚ñÅ\n\n\nFe [¬µg/g] (Leachate)\n0\n1\n7673.07\n4235.50\n189.60\n4937.08\n6918.25\n9513.88\n21428.70\n‚ñÉ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nBa [¬µg/g] (Residue)\n0\n1\n184.58\n109.97\n54.80\n98.30\n142.00\n251.00\n507.00\n‚ñá‚ñÉ‚ñÇ‚ñÅ‚ñÅ\n\n\nSr [¬µg/g] (Residue)\n0\n1\n46.15\n17.69\n20.50\n33.53\n41.10\n51.85\n120.00\n‚ñá‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\nCa [¬µg/g] (Residue)\n0\n1\n1316.60\n930.42\n475.50\n825.50\n1057.45\n1446.40\n8343.50\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\nAl [¬µg/g] (Residue)\n0\n1\n36668.75\n8937.30\n19227.20\n29424.80\n37297.75\n43806.80\n60033.10\n‚ñÜ‚ñá‚ñá‚ñÜ‚ñÅ\n\n\nFe [¬µg/g] (Residue)\n0\n1\n21446.97\n6866.21\n10823.30\n16197.70\n20393.90\n24408.27\n48057.60\n‚ñá‚ñá‚ñÉ‚ñÅ‚ñÅ"
  },
  {
    "objectID": "slides/04-get.html#always-check-for-missing-values",
    "href": "slides/04-get.html#always-check-for-missing-values",
    "title": "Get Data into R",
    "section": "Always check for missing values",
    "text": "Always check for missing values\nskimr::skim() shows you how many values are missing in your dataset:\n\n\nHow many missing value are there?\nWhere do they occur?"
  },
  {
    "objectID": "slides/04-get.html#section-6",
    "href": "slides/04-get.html#section-6",
    "title": "Get Data into R",
    "section": "",
    "text": "A more formal way to check for missing values.\n\npangaea_data %>% \n  summarise(\n    across(\n      .fns = ~is.na(.) %>% sum()\n    )\n  ) %>% \n  glimpse()\n\nRows: 1\nColumns: 19\n$ Event                      <int> 0\n$ Latitude                   <int> 0\n$ Longitude                  <int> 0\n$ `Elevation [m]`            <int> 0\n$ `Sample label (barite-Sr)` <int> 0\n$ `Samp type`                <int> 0\n$ `Depth [m]`                <int> 0\n$ `Age [ka BP]`              <int> 0\n$ `CaCO3 [%]`                <int> 0\n$ `Ba [¬µg/g] (Leachate)`     <int> 0\n$ `Sr [¬µg/g] (Leachate)`     <int> 0\n$ `Ca [¬µg/g] (Leachate)`     <int> 0\n$ `Al [¬µg/g] (Leachate)`     <int> 0\n$ `Fe [¬µg/g] (Leachate)`     <int> 0\n$ `Ba [¬µg/g] (Residue)`      <int> 0\n$ `Sr [¬µg/g] (Residue)`      <int> 0\n$ `Ca [¬µg/g] (Residue)`      <int> 0\n$ `Al [¬µg/g] (Residue)`      <int> 0\n$ `Fe [¬µg/g] (Residue)`      <int> 0"
  },
  {
    "objectID": "slides/04-get.html#quick-checklist-when-you-read-new-data-into-r",
    "href": "slides/04-get.html#quick-checklist-when-you-read-new-data-into-r",
    "title": "Get Data into R",
    "section": "Quick checklist when you read new data into R",
    "text": "Quick checklist when you read new data into R\n\n\nCheck for missing values.\nCheck the column types, are they what you expect?\nCheck the row number and the column names.\nOptional, check the head() and the tail() of the file.\n\n\nNow let‚Äôs tidy the data."
  },
  {
    "objectID": "slides/04-get.html#exercise-1",
    "href": "slides/04-get.html#exercise-1",
    "title": "Get Data into R",
    "section": "Exercise",
    "text": "Exercise\nTidytuesday is a weekly data project aimed at learning, collaborating and networking the R ecosystem.\nFind this week‚Äôs dataset and read it in R. Run the checklist from the previous slide on the data that you‚Äôve read.\nIf you are donw early, proceed reading data from the previous week or find a colleague to help.\nCheck Tidytuesday submissions on Twitter with the hashtag #TidyTuesday\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "slides/05-clean.html#which-dataset-is-tidy",
    "href": "slides/05-clean.html#which-dataset-is-tidy",
    "title": "Clean and Tidy Data",
    "section": "Which Dataset is Tidy?",
    "text": "Which Dataset is Tidy?\nA common practical way to structure (empirical) data.\n\n\nEvery column is a variable.\nEvery row is an observation.\nEvery cell is a single value.\n(Every observational unit is in its own table).\n\n\nPlus: fixed variables should come first, followed by measured variables.\nReference: An Introduction to Tidy Data"
  },
  {
    "objectID": "slides/05-clean.html#which-dataset-is-tidy-1",
    "href": "slides/05-clean.html#which-dataset-is-tidy-1",
    "title": "Clean and Tidy Data",
    "section": "Which Dataset is Tidy?",
    "text": "Which Dataset is Tidy?\n\nSource: R4DS - Tidy Data"
  },
  {
    "objectID": "slides/05-clean.html#section",
    "href": "slides/05-clean.html#section",
    "title": "Clean and Tidy Data",
    "section": "",
    "text": "Joey\n\n\nMonica\n\n\nRachel\n\n\nPhoebe\n\n\nRoss\n\n\nChandler\n\n\nTribbiani\n\n\nGeller\n\n\nGreen\n\n\nBuffay\n\n\nGeller\n\n\nBing\n\n\n27\n\n\n24\n\n\n23\n\n\n27\n\n\n26\n\n\n26"
  },
  {
    "objectID": "slides/05-clean.html#semantics-of-tidy-data",
    "href": "slides/05-clean.html#semantics-of-tidy-data",
    "title": "Clean and Tidy Data",
    "section": "Semantics of (tidy) Data",
    "text": "Semantics of (tidy) Data\nAlways quoting the Tidy Data article:\n\nA dataset is a collection of values.\nEvery value belongs to a variable and an observation.\nA variable contains all values that measure the same underlying attribute (like height, temperature, duration) across units.\nAn observation contains all values measured on the same unit (like a person, or a day, or a race) across attributes"
  },
  {
    "objectID": "slides/05-clean.html#tools-tidy-data-with-tidyr",
    "href": "slides/05-clean.html#tools-tidy-data-with-tidyr",
    "title": "Clean and Tidy Data",
    "section": "Tools: Tidy data with Tidyr",
    "text": "Tools: Tidy data with Tidyr\n\n\n\n\nTidyr provides functions for:\n\nPivoting data.\nRectangling data.\nNesting data.\nCombining and splitting columns.\nMake missing values explicit."
  },
  {
    "objectID": "slides/05-clean.html#pangea-data",
    "href": "slides/05-clean.html#pangea-data",
    "title": "Clean and Tidy Data",
    "section": "Pangea Data",
    "text": "Pangea Data\nRemember the dataset from Pangaea?\n\npangaea_filename <- 'Dataset_S2_HCl-leaching.tab'\n\npangaea_path <- here('data-int/Wu-etal_2022/datasets', pangaea_filename)\n\npangaea_data <- \n  pangaea_path %>% \n  read_delim(delim = '\\t',\n             skip = 49)\n\n\npangaea_data %>% \n  glimpse()\n\nRows: 128\nColumns: 19\n$ Event                      <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL‚Ä¶\n$ Latitude                   <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617‚Ä¶\n$ Longitude                  <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117‚Ä¶\n$ `Elevation [m]`            <dbl> -339, -339, -339, -339, -339, -339, -339, -‚Ä¶\n$ `Sample label (barite-Sr)` <chr> \"SL73-1\", \"SL73-2\", \"SL73-3\", \"SL73-4\", \"SL‚Ä¶\n$ `Samp type`                <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"S1b\", \"S1b\",‚Ä¶\n$ `Depth [m]`                <dbl> 0.0045, 0.0465, 0.0665, 0.1215, 0.1765, 0.1‚Ä¶\n$ `Age [ka BP]`              <dbl> 1.66, 3.13, 4.13, 5.75, 7.30, 7.78, 8.65, 9‚Ä¶\n$ `CaCO3 [%]`                <dbl> 61.5, 55.1, 53.0, 43.4, 41.8, 42.3, 42.6, 3‚Ä¶\n$ `Ba [¬µg/g] (Leachate)`     <dbl> 72.6, 64.3, 37.4, 63.5, 101.0, 141.0, 75.2,‚Ä¶\n$ `Sr [¬µg/g] (Leachate)`     <dbl> 767, 681, 690, 552, 527, 528, 551, 482, 391‚Ä¶\n$ `Ca [¬µg/g] (Leachate)`     <dbl> 188951.9, 163260.4, 162188.7, 125937.6, 124‚Ä¶\n$ `Al [¬µg/g] (Leachate)`     <dbl> 10612.7, 11428.4, 5463.0, 3261.5, 2121.7, 1‚Ä¶\n$ `Fe [¬µg/g] (Leachate)`     <dbl> 5935.0, 6814.3, 2465.7, 3936.8, 189.6, 7711‚Ä¶\n$ `Ba [¬µg/g] (Residue)`      <dbl> 171.0, 198.0, 251.0, 290.0, 315.0, 259.0, 3‚Ä¶\n$ `Sr [¬µg/g] (Residue)`      <dbl> 66.6, 71.3, 90.3, 99.8, 106.0, 90.7, 108.0,‚Ä¶\n$ `Ca [¬µg/g] (Residue)`      <dbl> 2315.5, 2369.6, 3007.7, 3447.9, 3713.2, 331‚Ä¶\n$ `Al [¬µg/g] (Residue)`      <dbl> 29262.5, 35561.4, 45862.4, 52485.6, 55083.0‚Ä¶\n$ `Fe [¬µg/g] (Residue)`      <dbl> 14834.8, 18301.4, 24534.5, 30745.3, 28532.2‚Ä¶"
  },
  {
    "objectID": "slides/05-clean.html#clean-the-column-names-with-janitor",
    "href": "slides/05-clean.html#clean-the-column-names-with-janitor",
    "title": "Clean and Tidy Data",
    "section": "Clean the column names with Janitor",
    "text": "Clean the column names with Janitor\nwe can remove capitalization, spaces, and strange characters from the column names with the function clean_names() from the Janitor Package.\n\npangaea_data <- \n  pangaea_data %>% \n  janitor::clean_names()\n\npangaea_data %>%\n  glimpse()\n\nRows: 128\nColumns: 19\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-2\", \"SL73-3\", \"SL73-4\", \"SL73-5‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"S1b\", \"S1b\", \"S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0465, 0.0665, 0.1215, 0.1765, 0.1915,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 3.13, 4.13, 5.75, 7.30, 7.78, 8.65, 9.94,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 55.1, 53.0, 43.4, 41.8, 42.3, 42.6, 39.1,‚Ä¶\n$ ba_mg_g_leachate       <dbl> 72.6, 64.3, 37.4, 63.5, 101.0, 141.0, 75.2, 99.‚Ä¶\n$ sr_mg_g_leachate       <dbl> 767, 681, 690, 552, 527, 528, 551, 482, 391, 70‚Ä¶\n$ ca_mg_g_leachate       <dbl> 188951.9, 163260.4, 162188.7, 125937.6, 124733.‚Ä¶\n$ al_mg_g_leachate       <dbl> 10612.7, 11428.4, 5463.0, 3261.5, 2121.7, 12740‚Ä¶\n$ fe_mg_g_leachate       <dbl> 5935.0, 6814.3, 2465.7, 3936.8, 189.6, 7711.3, ‚Ä¶\n$ ba_mg_g_residue        <dbl> 171.0, 198.0, 251.0, 290.0, 315.0, 259.0, 310.0‚Ä¶\n$ sr_mg_g_residue        <dbl> 66.6, 71.3, 90.3, 99.8, 106.0, 90.7, 108.0, 96.‚Ä¶\n$ ca_mg_g_residue        <dbl> 2315.5, 2369.6, 3007.7, 3447.9, 3713.2, 3316.7,‚Ä¶\n$ al_mg_g_residue        <dbl> 29262.5, 35561.4, 45862.4, 52485.6, 55083.0, 44‚Ä¶\n$ fe_mg_g_residue        <dbl> 14834.8, 18301.4, 24534.5, 30745.3, 28532.2, 22‚Ä¶\n\n\nWatch out: Janitor transforms ¬µ into m (so micrograms become milligrams)."
  },
  {
    "objectID": "slides/05-clean.html#place-fixed-variables-in-the-first-columns",
    "href": "slides/05-clean.html#place-fixed-variables-in-the-first-columns",
    "title": "Clean and Tidy Data",
    "section": "Place fixed variables in the first columns",
    "text": "Place fixed variables in the first columns\nWhich column is a fixed variable?\nI‚Äôm not sure if ca_co3_percent is a measured variable, and if it belongs to another informational unit.\nBesides that, the fixed variables are already in front."
  },
  {
    "objectID": "slides/05-clean.html#there-are-values-stored-in-the-column-names",
    "href": "slides/05-clean.html#there-are-values-stored-in-the-column-names",
    "title": "Clean and Tidy Data",
    "section": "There are values stored in the column names",
    "text": "There are values stored in the column names\nLet‚Äôs pivot the measured variables.\n\npangaea_long <- \n  pangaea_data %>% \n  pivot_longer(\n    cols = contains(match = c('leachate', 'residue')),\n    values_to = 'concentration',\n    names_to = 'element'\n  )\n\npangaea_long\n\n# A tibble: 1,280 √ó 11\n   event latit‚Ä¶¬π longi‚Ä¶¬≤ eleva‚Ä¶¬≥ sampl‚Ä¶‚Å¥ samp_‚Ä¶‚Åµ depth_m age_k‚Ä¶‚Å∂ ca_co‚Ä¶‚Å∑ element\n   <chr>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba_mg_‚Ä¶\n 2 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr_mg_‚Ä¶\n 3 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca_mg_‚Ä¶\n 4 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al_mg_‚Ä¶\n 5 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe_mg_‚Ä¶\n 6 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba_mg_‚Ä¶\n 7 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr_mg_‚Ä¶\n 8 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca_mg_‚Ä¶\n 9 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al_mg_‚Ä¶\n10 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe_mg_‚Ä¶\n# ‚Ä¶ with 1,270 more rows, 1 more variable: concentration <dbl>, and abbreviated\n#   variable names ¬π‚Äãlatitude, ¬≤‚Äãlongitude, ¬≥‚Äãelevation_m,\n#   ‚Å¥‚Äãsample_label_barite_sr, ‚Åµ‚Äãsamp_type, ‚Å∂‚Äãage_ka_bp, ‚Å∑‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\npangaea_long %>% glimpse()\n\nRows: 1,280\nColumns: 11\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0045, 0.0045, 0.0045, 0.0045, 0.0045,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5,‚Ä¶\n$ element                <chr> \"ba_mg_g_leachate\", \"sr_mg_g_leachate\", \"ca_mg_‚Ä¶\n$ concentration          <dbl> 72.6, 767.0, 188951.9, 10612.7, 5935.0, 171.0, ‚Ä¶\n\n\nWhen we pivot data we move them from a wide to a long format and vice-versa."
  },
  {
    "objectID": "slides/05-clean.html#pivot-longer",
    "href": "slides/05-clean.html#pivot-longer",
    "title": "Clean and Tidy Data",
    "section": "Pivot Longer",
    "text": "Pivot Longer\n\nSource : R4DS - Tidy Data"
  },
  {
    "objectID": "slides/05-clean.html#pivot-longer-1",
    "href": "slides/05-clean.html#pivot-longer-1",
    "title": "Clean and Tidy Data",
    "section": "Pivot Longer",
    "text": "Pivot Longer\n\n(Image from Alisson Horst, check her other stats illustrations here)"
  },
  {
    "objectID": "slides/05-clean.html#one-cell-contains-multiple-values",
    "href": "slides/05-clean.html#one-cell-contains-multiple-values",
    "title": "Clean and Tidy Data",
    "section": "One cell contains multiple values",
    "text": "One cell contains multiple values\nNow it‚Äôs clear that element contains more than one value.\nFor example: ba_mg_g_leachate is not a single values and could be split into:\n\n\nelement: ba.\nunit: mg_g.\nfraction: leachate.\n\n\nLet‚Äôs split this column at the _ and reconstitute it in a tidy way\n\npangaea_tidy <- \n  pangaea_long %>% \n  separate(element, into = c('element', 'unit_num', 'unit_dem', 'fraction'), sep = '_') %>% \n  unite(col = 'unit', unit_num:unit_dem, sep = '/')\n\npangaea_tidy\n\n# A tibble: 1,280 √ó 13\n   event latit‚Ä¶¬π longi‚Ä¶¬≤ eleva‚Ä¶¬≥ sampl‚Ä¶‚Å¥ samp_‚Ä¶‚Åµ depth_m age_k‚Ä¶‚Å∂ ca_co‚Ä¶‚Å∑ element\n   <chr>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 2 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 3 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 4 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n 5 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n 6 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 7 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 8 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 9 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n10 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n# ‚Ä¶ with 1,270 more rows, 3 more variables: unit <chr>, fraction <chr>,\n#   concentration <dbl>, and abbreviated variable names ¬π‚Äãlatitude, ¬≤‚Äãlongitude,\n#   ¬≥‚Äãelevation_m, ‚Å¥‚Äãsample_label_barite_sr, ‚Åµ‚Äãsamp_type, ‚Å∂‚Äãage_ka_bp,\n#   ‚Å∑‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\npangaea_tidy %>% glimpse()\n\nRows: 1,280\nColumns: 13\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0045, 0.0045, 0.0045, 0.0045, 0.0045,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5,‚Ä¶\n$ element                <chr> \"ba\", \"sr\", \"ca\", \"al\", \"fe\", \"ba\", \"sr\", \"ca\",‚Ä¶\n$ unit                   <chr> \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\",‚Ä¶\n$ fraction               <chr> \"leachate\", \"leachate\", \"leachate\", \"leachate\",‚Ä¶\n$ concentration          <dbl> 72.6, 767.0, 188951.9, 10612.7, 5935.0, 171.0, ‚Ä¶"
  },
  {
    "objectID": "slides/05-clean.html#and-lets-fix-the-measurement-unit",
    "href": "slides/05-clean.html#and-lets-fix-the-measurement-unit",
    "title": "Clean and Tidy Data",
    "section": "And let‚Äôs fix the measurement unit",
    "text": "And let‚Äôs fix the measurement unit\nRemember that janitor transformed ¬µ into m?\n\npangea_tidy <- \n  pangaea_tidy %>% \n  mutate(unit = unit %>% str_replace('m', '¬µ'))\n\npangaea_tidy\n\n# A tibble: 1,280 √ó 13\n   event latit‚Ä¶¬π longi‚Ä¶¬≤ eleva‚Ä¶¬≥ sampl‚Ä¶‚Å¥ samp_‚Ä¶‚Åµ depth_m age_k‚Ä¶‚Å∂ ca_co‚Ä¶‚Å∑ element\n   <chr>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 2 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 3 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 4 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n 5 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n 6 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 7 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 8 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 9 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n10 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n# ‚Ä¶ with 1,270 more rows, 3 more variables: unit <chr>, fraction <chr>,\n#   concentration <dbl>, and abbreviated variable names ¬π‚Äãlatitude, ¬≤‚Äãlongitude,\n#   ¬≥‚Äãelevation_m, ‚Å¥‚Äãsample_label_barite_sr, ‚Åµ‚Äãsamp_type, ‚Å∂‚Äãage_ka_bp,\n#   ‚Å∑‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"
  },
  {
    "objectID": "slides/05-clean.html#data-can-take-many-shapes",
    "href": "slides/05-clean.html#data-can-take-many-shapes",
    "title": "Clean and Tidy Data",
    "section": "Data can take many shapes",
    "text": "Data can take many shapes\n\npangaea_also_tidy <- \n  pangaea_tidy %>% \n  pivot_wider(names_from = 'element', values_from = 'fraction') \n  \npangaea_also_tidy \n\n# A tibble: 1,280 √ó 16\n   event  latitude longi‚Ä¶¬π eleva‚Ä¶¬≤ sampl‚Ä¶¬≥ samp_‚Ä¶‚Å¥ depth_m age_k‚Ä¶‚Åµ ca_co‚Ä¶‚Å∂ unit \n   <chr>     <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>\n 1 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 2 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 3 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 4 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 5 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 6 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 7 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 8 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 9 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n10 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n# ‚Ä¶ with 1,270 more rows, 6 more variables: concentration <dbl>, ba <chr>,\n#   sr <chr>, ca <chr>, al <chr>, fe <chr>, and abbreviated variable names\n#   ¬π‚Äãlongitude, ¬≤‚Äãelevation_m, ¬≥‚Äãsample_label_barite_sr, ‚Å¥‚Äãsamp_type, ‚Åµ‚Äãage_ka_bp,\n#   ‚Å∂‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\npangaea_also_tidy %>% glimpse()\n\nRows: 1,280\nColumns: 16\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0045, 0.0045, 0.0045, 0.0045, 0.0045,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5,‚Ä¶\n$ unit                   <chr> \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\",‚Ä¶\n$ concentration          <dbl> 72.6, 767.0, 188951.9, 10612.7, 5935.0, 171.0, ‚Ä¶\n$ ba                     <chr> \"leachate\", NA, NA, NA, NA, \"residue\", NA, NA, ‚Ä¶\n$ sr                     <chr> NA, \"leachate\", NA, NA, NA, NA, \"residue\", NA, ‚Ä¶\n$ ca                     <chr> NA, NA, \"leachate\", NA, NA, NA, NA, \"residue\", ‚Ä¶\n$ al                     <chr> NA, NA, NA, \"leachate\", NA, NA, NA, NA, \"residu‚Ä¶\n$ fe                     <chr> NA, NA, NA, NA, \"leachate\", NA, NA, NA, NA, \"re‚Ä¶"
  },
  {
    "objectID": "slides/05-clean.html#exercise",
    "href": "slides/05-clean.html#exercise",
    "title": "Clean and Tidy Data",
    "section": "Exercise",
    "text": "Exercise\nTidy last week‚Äôs schedule.\n\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Analysis in R",
    "section": "",
    "text": "Hands-on Lessons\n\nMeet R\nManipulate Data\nVisualize Data\nGet Data into R\nClean Data with R"
  }
]