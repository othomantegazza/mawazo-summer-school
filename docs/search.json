[
  {
    "objectID": "slides/00-intro.html#the-r-project-for-statistical-computing",
    "href": "slides/00-intro.html#the-r-project-for-statistical-computing",
    "title": "About R",
    "section": "The R Project for Statistical Computing",
    "text": "The R Project for Statistical Computing\nhttps://www.r-project.org/\n\nStarted in 1991 by Ross Ihaka and Robert Gentleman at the University of Auckland (NZ).\nMade open source in 1995.\nOfficial ‚Äúpeer reviewed‚Äù packages are hosted on CRAN.\nHas multiple ‚Äúuniverses‚Äù of packages, including Bioconductor dedicated to bioinformatics, and the Tidyverse for Data Science.\nGreat for analyzing data, for statistics, for research and for communicating data to others."
  },
  {
    "objectID": "slides/00-intro.html#a-bit-more-on-r",
    "href": "slides/00-intro.html#a-bit-more-on-r",
    "title": "About R",
    "section": "A bit more on R",
    "text": "A bit more on R\n\nWe are going to use the Tidyverse. But you might have to learn also a bit of the original idiom, now called base R, which sometimes helps if you have to programm your own functions.\nWe are going to use R in visual studio code as you did for Python, but you might want to try out also Rstudio, which is a great open source IDE dedicated to R."
  },
  {
    "objectID": "slides/00-intro.html#as-always-stackoverflow-is-your-friend",
    "href": "slides/00-intro.html#as-always-stackoverflow-is-your-friend",
    "title": "About R",
    "section": "As always, stackoverflow is your friend",
    "text": "As always, stackoverflow is your friend\nIf you need help, as always, Google and Stackoverflow are your friends.\n\nBut sometimes you need to learn on a support that is structured, nuanced and detailed‚Ä¶ üìö"
  },
  {
    "objectID": "slides/00-intro.html#a-helpful-and-welcoming-community",
    "href": "slides/00-intro.html#a-helpful-and-welcoming-community",
    "title": "About R",
    "section": "A helpful and welcoming community üìö",
    "text": "A helpful and welcoming community üìö\nOne of the things that makes R great is its community of users and programmer.\nIt is open source and open access oriented and highly dedicated to lowering the barrier to learning R and data science, and make their tools available and usable to everyone."
  },
  {
    "objectID": "slides/00-intro.html#open-books",
    "href": "slides/00-intro.html#open-books",
    "title": "About R",
    "section": "Open Books",
    "text": "Open Books\n\n\nBookdown: a package and a repository for open access books about R."
  },
  {
    "objectID": "slides/00-intro.html#open-books-1",
    "href": "slides/00-intro.html#open-books-1",
    "title": "About R",
    "section": "Open Books",
    "text": "Open Books\n\n\n\nR for Data Science - A gentle introducion to data science with the Tidyverse.\nIntroduction to Data Science - A detailed introduction to Data science by a biostatistician.\nAdvanced R - All you need to know about programming in R.\nIntroduction to Statistical Learning - A detailed introductio to modern statistical methods, implemented in R.\n\n\n\nText Mining in R Dealing with natural language and written text in R.\nTidy Modeling with R R Machine learning framework.\nDesigning and Building Data Science Solutions how to set up a data science project."
  },
  {
    "objectID": "slides/00-intro.html#more",
    "href": "slides/00-intro.html#more",
    "title": "About R",
    "section": "More ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è",
    "text": "More ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è\n\nSlack Spaces\n\n\nR for Data Science Community a slack chanel for R networking.\n\n\nBlogs\n\nAlison Hill‚Äôs Blog; great for everything Rmarkdown.\nSimply Statistics; modern statistics and R.\nJulia Silge‚Äôs Blog; learn about R machine learning framework from one of its main developer.\nGina Reynolds Flipbooks; for more tidyverse and Rmarkdown mastery.\nFornkonstin; at the interface between math, art and coding.\nData imaginist; more art in R üé®.\n\nCollaborative Challenges\n\nTidytuesday Tidy and visualize a dataset and share your results with the R community every week on Tuesday.\n\n\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "slides/10-meet-r.html#r-understands-you",
    "href": "slides/10-meet-r.html#r-understands-you",
    "title": "Meet R",
    "section": "R understands you",
    "text": "R understands you\nWrite someting at the R console:\n\nA simple number‚Ä¶\n\n2\n\n[1] 2\n\n\n\n\nSome operation‚Ä¶\n\n3 + 7\n\n[1] 10\n\n\n\n\nText must be quoted‚Ä¶\n\n'hello'\n\n[1] \"hello\"\n\n\n\n\nOtherwise it is interpreted as the name of a variable:\n\nmy_var\n\nError in eval(expr, envir, enclos): oggetto 'my_var' non trovato"
  },
  {
    "objectID": "slides/10-meet-r.html#you-can-define-variables",
    "href": "slides/10-meet-r.html#you-can-define-variables",
    "title": "Meet R",
    "section": "You can define variables",
    "text": "You can define variables\nYou can define a variable with the operator <- .\n\n# a numeric variable\nthis_year <- 2022\n \n# a character variable\nitalian_greetings <- 'ciao'\n\n\nIf you type the name of a variable without quotes, r prints its value:\n\nthis_year\n\n[1] 2022\n\n\n\nitalian_greetings\n\n[1] \"ciao\"\n\n\n\n\nUse the keyboard shortcut alt/option + - to write the assign operator <- more easily."
  },
  {
    "objectID": "slides/10-meet-r.html#data-types",
    "href": "slides/10-meet-r.html#data-types",
    "title": "Meet R",
    "section": "Data Types",
    "text": "Data Types\nWhen you define an object R guesses its type.\n\ntypeof() returns the internal type of an object.\n\ntypeof(this_year)\n\n[1] \"double\"\n\ntypeof(italian_greetings)\n\n[1] \"character\"\n\n\n\n\nclass() returns a the class attribute of an object.\n\nclass(this_year)\n\n[1] \"numeric\"\n\nclass(italian_greetings)\n\n[1] \"character\""
  },
  {
    "objectID": "slides/10-meet-r.html#everything-in-r-is-an-object",
    "href": "slides/10-meet-r.html#everything-in-r-is-an-object",
    "title": "Meet R",
    "section": "Everything in R is an object",
    "text": "Everything in R is an object\nAnd objects have a types.\n\n\nclass(2)\n\n[1] \"numeric\"\n\n\n\n\n\nclass('hello')\n\n[1] \"character\"\n\n\n\n\n\nclass(FALSE)\n\n[1] \"logical\"\n\n\n\n\n\nclass(mean)\n\n[1] \"function\"\n\n\n\n\n\nclass(`<-`)\n\n[1] \"function\"\n\n\n\n\n\nclass(Sys.Date())\n\n[1] \"Date\""
  },
  {
    "objectID": "slides/10-meet-r.html#exercise",
    "href": "slides/10-meet-r.html#exercise",
    "title": "Meet R",
    "section": "Exercise",
    "text": "Exercise\n\nUse the function c(arg_1, arg_2, ..., arg_n) to put together in a vector many objects that you expect to have the same class. Try with different ones.\nNow do the same, but try to put together in a vector data with different types, what happened?\n\n\n\nLearn more about vectors and types at Advanced R."
  },
  {
    "objectID": "slides/10-meet-r.html#vectors-store-one-or-more-data-point-of-the-same-class",
    "href": "slides/10-meet-r.html#vectors-store-one-or-more-data-point-of-the-same-class",
    "title": "Meet R",
    "section": "Vectors store one or more data point of the same class",
    "text": "Vectors store one or more data point of the same class\n\nnum_vector <- c(1, 3, 5, 3, 6)\n\ncharacter_vector <- c('Hi', ',', 'I', 'am', 'a', 'character', 'vector')\n\nlogical_vector <- c(TRUE, FALSE, FALSE, TRUE, FALSE)\n\n\n\n\nclass(num_vector)\n\n[1] \"numeric\"\n\nclass(character_vector)\n\n[1] \"character\"\n\nclass(logical_vector)\n\n[1] \"logical\""
  },
  {
    "objectID": "slides/10-meet-r.html#classes-can-be-coherced",
    "href": "slides/10-meet-r.html#classes-can-be-coherced",
    "title": "Meet R",
    "section": "Classes can be coherced",
    "text": "Classes can be coherced\nTRUE and FALSE can be coerced into numeric zeroes and ones, or also into characters.\n\nc(2, TRUE, 5, FALSE, 4)\n\n[1] 2 1 5 0 4\n\n\n\nNumbers can be coerced into characters.\n\nc('a', TRUE, 5, FALSE, 4)\n\n[1] \"a\"     \"TRUE\"  \"5\"     \"FALSE\" \"4\""
  },
  {
    "objectID": "slides/10-meet-r.html#classes-can-be-coherced-1",
    "href": "slides/10-meet-r.html#classes-can-be-coherced-1",
    "title": "Meet R",
    "section": "Classes can be coherced",
    "text": "Classes can be coherced\nClasses can be coerced explicitly.\n\nlogical_vector <- c(T, F, F, T, T, F)\nlogical_vector\n\n[1]  TRUE FALSE FALSE  TRUE  TRUE FALSE\n\nas.numeric(logical_vector)\n\n[1] 1 0 0 1 1 0\n\nas.character(logical_vector)\n\n[1] \"TRUE\"  \"FALSE\" \"FALSE\" \"TRUE\"  \"TRUE\"  \"FALSE\"\n\n\n\nIf an element can‚Äôt be coerced to the desired class, R returns a missing value (NA).\n\nas.numeric(c('1', 'two', '3'))\n\n[1]  1 NA  3"
  },
  {
    "objectID": "slides/10-meet-r.html#atomic-elements-are-vectors-of-length-1",
    "href": "slides/10-meet-r.html#atomic-elements-are-vectors-of-length-1",
    "title": "Meet R",
    "section": "Atomic elements are vectors of length 1",
    "text": "Atomic elements are vectors of length 1\n\nshort_vector <- 1\nlong_vector <- 1:50\n\n\n\nshort_vector\n\n[1] 1\n\nlong_vector\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n\n\n\n\n\nclass(short_vector)\n\n[1] \"numeric\"\n\nclass(long_vector)\n\n[1] \"integer\"\n\n\n\n\n\nlength(short_vector)\n\n[1] 1\n\nlength(long_vector)\n\n[1] 50"
  },
  {
    "objectID": "slides/10-meet-r.html#most-functions-in-r-are-vectorized",
    "href": "slides/10-meet-r.html#most-functions-in-r-are-vectorized",
    "title": "Meet R",
    "section": "Most functions in R are vectorized",
    "text": "Most functions in R are vectorized\nIf I want to apply an operation over a vector, I can just write it as it is without a for loop. For example:\n\nAdd an integer to every number in a vector:\n\nlong_vector + 100\n\n [1] 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119\n[20] 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138\n[39] 139 140 141 142 143 144 145 146 147 148 149 150\n\n\n\n\nMultiply every number in a vector by an integer:\n\nlong_vector * 2\n\n [1]   2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38\n[20]  40  42  44  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76\n[39]  78  80  82  84  86  88  90  92  94  96  98 100"
  },
  {
    "objectID": "slides/10-meet-r.html#most-functions-in-r-are-vectorized-1",
    "href": "slides/10-meet-r.html#most-functions-in-r-are-vectorized-1",
    "title": "Meet R",
    "section": "Most functions in R are vectorized",
    "text": "Most functions in R are vectorized\nTake the square root of every number in a vector:\n\nsqrt(long_vector)\n\n [1] 1.000000 1.414214 1.732051 2.000000 2.236068 2.449490 2.645751 2.828427\n [9] 3.000000 3.162278 3.316625 3.464102 3.605551 3.741657 3.872983 4.000000\n[17] 4.123106 4.242641 4.358899 4.472136 4.582576 4.690416 4.795832 4.898979\n[25] 5.000000 5.099020 5.196152 5.291503 5.385165 5.477226 5.567764 5.656854\n[33] 5.744563 5.830952 5.916080 6.000000 6.082763 6.164414 6.244998 6.324555\n[41] 6.403124 6.480741 6.557439 6.633250 6.708204 6.782330 6.855655 6.928203\n[49] 7.000000 7.071068"
  },
  {
    "objectID": "slides/10-meet-r.html#exercise-1",
    "href": "slides/10-meet-r.html#exercise-1",
    "title": "Meet R",
    "section": "Exercise",
    "text": "Exercise\n\nGenerate a vector of 100 (semi-) random numbers with a normal distribution.\nUse a for loop (even if you don‚Äôt need one) to multiply eachs number in the vector by 2.\n\n\n\nFor loops in R according to Roger D. Peng."
  },
  {
    "objectID": "slides/10-meet-r.html#extra---lists",
    "href": "slides/10-meet-r.html#extra---lists",
    "title": "Meet R",
    "section": "Extra - Lists",
    "text": "Extra - Lists\nIf you need to collect together and store data of different types, you can use lists.\n\nmy_list <- list(\n  'hello',\n  1,\n  FALSE,\n  1:25\n)\n\nmy_list\n\n[[1]]\n[1] \"hello\"\n\n[[2]]\n[1] 1\n\n[[3]]\n[1] FALSE\n\n[[4]]\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"
  },
  {
    "objectID": "slides/10-meet-r.html#can-we-use-vectors-to-build-a-dataframe",
    "href": "slides/10-meet-r.html#can-we-use-vectors-to-build-a-dataframe",
    "title": "Meet R",
    "section": "Can we use vectors to build a dataframe?",
    "text": "Can we use vectors to build a dataframe?\nWe learned that vector contain elements of the same type, for example, numerics, character, logical.\n\nAccording to the Tidy Data theory, in rectangular dataframes:\n\n\nEach row is an observation.\nEach column is a variable.\n\n\nBy definiton variables of your data, must be made by atomic elements of the same type. So we can use vectors of the same length to build the columns of a dataframe.\nLet‚Äôs try."
  },
  {
    "objectID": "slides/10-meet-r.html#and-we-have-data",
    "href": "slides/10-meet-r.html#and-we-have-data",
    "title": "Meet R",
    "section": "And‚Ä¶ We have data",
    "text": "And‚Ä¶ We have data\nLet‚Äôs prepare three vectors with the first observations of iris and use them to make a dataframe.\n\nsepal_length <- c(5.1, 7.0, 6.3)\n\nsepal_width <- c(3.5, 3.2, 3.3)\n\nspecies <- c('setosa', 'versicolor', 'virginica')\n\niris_simple <- \n  data.frame(\n    species,\n    sepal_length,\n    sepal_width\n  )\n\niris_simple\n\n     species sepal_length sepal_width\n1     setosa          5.1         3.5\n2 versicolor          7.0         3.2\n3  virginica          6.3         3.3"
  },
  {
    "objectID": "slides/10-meet-r.html#and-we-have-data-1",
    "href": "slides/10-meet-r.html#and-we-have-data-1",
    "title": "Meet R",
    "section": "And‚Ä¶ We have data",
    "text": "And‚Ä¶ We have data\nThe variable iris_simple points to a dataframe that stores rectangular data.\n\nclass(iris_simple)\n\n[1] \"data.frame\"\n\n\n\ndim(iris_simple)\n\n[1] 3 3\n\n\n\nWe can access its columns with the operator $. Each column is a vector.\n\niris_simple$sepal_length\n\n[1] 5.1 7.0 6.3\n\n\n\nclass(iris_simple$sepal_length)\n\n[1] \"numeric\"\n\n\n\nis.vector(iris_simple$sepal_length)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/10-meet-r.html#section",
    "href": "slides/10-meet-r.html#section",
    "title": "Meet R",
    "section": "",
    "text": "Now that we have data, let‚Äôs take our first stroll into the Tidyverse."
  },
  {
    "objectID": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes",
    "href": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes",
    "title": "Meet R",
    "section": "Tibbles: a modern take on dataframes",
    "text": "Tibbles: a modern take on dataframes\nLet‚Äôs attach the whole Tidyverse, which includes also the Tibble package‚Ä¶\n\nlibrary(tidyverse)\n\n\n‚Ä¶and convert our dataframe iris_simple into a tibble.\n\niris_simple <- as_tibble(iris_simple)\n\n\n\nThe print method for a tibble, provides a handy and informative output.\n\niris_simple\n\n# A tibble: 3 √ó 3\n  species    sepal_length sepal_width\n  <chr>             <dbl>       <dbl>\n1 setosa              5.1         3.5\n2 versicolor          7           3.2\n3 virginica           6.3         3.3"
  },
  {
    "objectID": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes-1",
    "href": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes-1",
    "title": "Meet R",
    "section": "Tibbles: a modern take on dataframes",
    "text": "Tibbles: a modern take on dataframes\nLet‚Äôs compare the print method for the dataframe iris, before and after we convert it to a tibble.\n\niris\n\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica"
  },
  {
    "objectID": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes-2",
    "href": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes-2",
    "title": "Meet R",
    "section": "Tibbles: a modern take on dataframes",
    "text": "Tibbles: a modern take on dataframes\nLet‚Äôs compare the print method for the dataframe iris, before and after we convert it to a tibble.\n\nas_tibble(iris)\n\n# A tibble: 150 √ó 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1          5.1         3.5          1.4         0.2 setosa \n 2          4.9         3            1.4         0.2 setosa \n 3          4.7         3.2          1.3         0.2 setosa \n 4          4.6         3.1          1.5         0.2 setosa \n 5          5           3.6          1.4         0.2 setosa \n 6          5.4         3.9          1.7         0.4 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          5           3.4          1.5         0.2 setosa \n 9          4.4         2.9          1.4         0.2 setosa \n10          4.9         3.1          1.5         0.1 setosa \n# ‚Ä¶ with 140 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/10-meet-r.html#exercise-2",
    "href": "slides/10-meet-r.html#exercise-2",
    "title": "Meet R",
    "section": "Exercise",
    "text": "Exercise\n\n\nCheck the weather forecast for your hometown (or a place of your choice).\nAssign the forecasted temperature in one vector and the corresponding time in another vector for at least 5 data points.\nMake a dataframe with those two variables.\nWhat‚Äôs the average temperature? And what‚Äôs its standard deviation?\nThen, visualize those data with a line-chart in which the x axis represents time and the y axis represents the forecasted temperature.\n\n\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "slides/20-manipulate.html#the-tidyverse-is-an-ecosystem-of-packages-for-data-science",
    "href": "slides/20-manipulate.html#the-tidyverse-is-an-ecosystem-of-packages-for-data-science",
    "title": "Manipulate Data",
    "section": "The Tidyverse is an ecosystem of packages for Data Science",
    "text": "The Tidyverse is an ecosystem of packages for Data Science\nAll the packages share a common design:\n\nOne function does one thing, well.\nDesigned for pipes.\nExtensive user-friendly documentation.\nNon-standard evaluation, to write code quickly and easily.\n\n\nAll packages can be loaded with library(tidyverse), but you can also load single packages one by one."
  },
  {
    "objectID": "slides/20-manipulate.html#we-first-explore-the-palmer-penguins-dataset",
    "href": "slides/20-manipulate.html#we-first-explore-the-palmer-penguins-dataset",
    "title": "Manipulate Data",
    "section": "We first explore the Palmer Penguins Dataset",
    "text": "We first explore the Palmer Penguins Dataset\nThe Penguins Dataset stores real data about palmer penguins. This R data package was developed and is maintained by Allison Horst, Alison Hill and Kirsten Gorman for teaching purposes.\n\nLet‚Äôs install the package‚Ä¶\n\ninstall.packages('palmerpenguins')\n\n\n\n‚Ä¶and load it in R.\n\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "slides/20-manipulate.html#palmerpenguins-exports-two-datasets",
    "href": "slides/20-manipulate.html#palmerpenguins-exports-two-datasets",
    "title": "Manipulate Data",
    "section": "palmerpenguins exports two datasets",
    "text": "palmerpenguins exports two datasets\n\npenguins_raw\n\n# A tibble: 344 √ó 17\n   studyName Sample Num‚Ä¶¬π Species Region Island Stage Indiv‚Ä¶¬≤ Clutc‚Ä¶¬≥ `Date Egg`\n   <chr>            <dbl> <chr>   <chr>  <chr>  <chr> <chr>   <chr>   <date>    \n 1 PAL0708              1 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N1A1    Yes     2007-11-11\n 2 PAL0708              2 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N1A2    Yes     2007-11-11\n 3 PAL0708              3 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N2A1    Yes     2007-11-16\n 4 PAL0708              4 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N2A2    Yes     2007-11-16\n 5 PAL0708              5 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N3A1    Yes     2007-11-16\n 6 PAL0708              6 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N3A2    Yes     2007-11-16\n 7 PAL0708              7 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N4A1    No      2007-11-15\n 8 PAL0708              8 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N4A2    No      2007-11-15\n 9 PAL0708              9 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N5A1    Yes     2007-11-09\n10 PAL0708             10 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N5A2    Yes     2007-11-09\n# ‚Ä¶ with 334 more rows, 8 more variables: `Culmen Length (mm)` <dbl>,\n#   `Culmen Depth (mm)` <dbl>, `Flipper Length (mm)` <dbl>,\n#   `Body Mass (g)` <dbl>, Sex <chr>, `Delta 15 N (o/oo)` <dbl>,\n#   `Delta 13 C (o/oo)` <dbl>, Comments <chr>, and abbreviated variable names\n#   ¬π‚Äã`Sample Number`, ¬≤‚Äã`Individual ID`, ¬≥‚Äã`Clutch Completion`\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"
  },
  {
    "objectID": "slides/20-manipulate.html#palmerpenguins-exports-two-datasets-1",
    "href": "slides/20-manipulate.html#palmerpenguins-exports-two-datasets-1",
    "title": "Manipulate Data",
    "section": "palmerpenguins exports two datasets",
    "text": "palmerpenguins exports two datasets\n\npenguins\n\n# A tibble: 344 √ó 8\n   species island    bill_length_mm bill_depth_mm flipper_‚Ä¶¬π body_‚Ä¶¬≤ sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007\n 2 Adelie  Torgersen           39.5          17.4        186    3800 fema‚Ä¶  2007\n 3 Adelie  Torgersen           40.3          18          195    3250 fema‚Ä¶  2007\n 4 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 5 Adelie  Torgersen           36.7          19.3        193    3450 fema‚Ä¶  2007\n 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007\n 7 Adelie  Torgersen           38.9          17.8        181    3625 fema‚Ä¶  2007\n 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007\n 9 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n10 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n# ‚Ä¶ with 334 more rows, and abbreviated variable names ¬π‚Äãflipper_length_mm,\n#   ¬≤‚Äãbody_mass_g\n# ‚Ñπ Use `print(n = ...)` to see more rows\n\n\nWe will use the first one: penguins, which has already been cleaned."
  },
  {
    "objectID": "slides/20-manipulate.html#exercise",
    "href": "slides/20-manipulate.html#exercise",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nThe print method for a tibble gives you a reasonable overview of the data stored in it.\nCan you get more details with the package skimr?\nCheck its documentation, install it, try it out on the penguins dataset. Comment on the output: is it useful? How?."
  },
  {
    "objectID": "slides/20-manipulate.html#a-grammar-for-data-manipulation",
    "href": "slides/20-manipulate.html#a-grammar-for-data-manipulation",
    "title": "Manipulate Data",
    "section": "A grammar for data manipulation",
    "text": "A grammar for data manipulation\n\n\n\n\nDplyr provides a grammar for manipulating data, with many useful verbs:\n\nmutate() adds new variables that are functions of existing variables\nselect() picks variables based on their names.\nfilter() picks cases based on their values.\nsummarise() reduces multiple values down to a single summary.\ngroup_by() performs operations by group."
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 344 √ó 9\n   species island    bill_length_mm bill_d‚Ä¶¬π flipp‚Ä¶¬≤ body_‚Ä¶¬≥ sex    year bill_‚Ä¶‚Å¥\n   <fct>   <fct>              <dbl>    <dbl>   <int>   <int> <fct> <int>   <dbl>\n 1 Adelie  Torgersen           39.1     18.7     181    3750 male   2007  0.0391\n 2 Adelie  Torgersen           39.5     17.4     186    3800 fema‚Ä¶  2007  0.0395\n 3 Adelie  Torgersen           40.3     18       195    3250 fema‚Ä¶  2007  0.0403\n 4 Adelie  Torgersen           NA       NA        NA      NA <NA>   2007 NA     \n 5 Adelie  Torgersen           36.7     19.3     193    3450 fema‚Ä¶  2007  0.0367\n 6 Adelie  Torgersen           39.3     20.6     190    3650 male   2007  0.0393\n 7 Adelie  Torgersen           38.9     17.8     181    3625 fema‚Ä¶  2007  0.0389\n 8 Adelie  Torgersen           39.2     19.6     195    4675 male   2007  0.0392\n 9 Adelie  Torgersen           34.1     18.1     193    3475 <NA>   2007  0.0341\n10 Adelie  Torgersen           42       20.2     190    4250 <NA>   2007  0.042 \n# ‚Ä¶ with 334 more rows, and abbreviated variable names ¬π‚Äãbill_depth_mm,\n#   ¬≤‚Äãflipper_length_mm, ¬≥‚Äãbody_mass_g, ‚Å¥‚Äãbill_length_meters\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-1",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-1",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(bill_length_mm) %>% \n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 344 √ó 2\n   bill_length_mm bill_length_meters\n            <dbl>              <dbl>\n 1           39.1             0.0391\n 2           39.5             0.0395\n 3           40.3             0.0403\n 4           NA              NA     \n 5           36.7             0.0367\n 6           39.3             0.0393\n 7           38.9             0.0389\n 8           39.2             0.0392\n 9           34.1             0.0341\n10           42               0.042 \n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-2",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-2",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 344 √ó 4\n   species island    bill_length_mm bill_length_meters\n   <fct>   <fct>              <dbl>              <dbl>\n 1 Adelie  Torgersen           39.1             0.0391\n 2 Adelie  Torgersen           39.5             0.0395\n 3 Adelie  Torgersen           40.3             0.0403\n 4 Adelie  Torgersen           NA              NA     \n 5 Adelie  Torgersen           36.7             0.0367\n 6 Adelie  Torgersen           39.3             0.0393\n 7 Adelie  Torgersen           38.9             0.0389\n 8 Adelie  Torgersen           39.2             0.0392\n 9 Adelie  Torgersen           34.1             0.0341\n10 Adelie  Torgersen           42               0.042 \n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-3",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-3",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n count(island)\n\n# A tibble: 3 √ó 2\n  island        n\n  <fct>     <int>\n1 Biscoe      168\n2 Dream       124\n3 Torgersen    52"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-4",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-4",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 124 √ó 4\n   species island bill_length_mm bill_length_meters\n   <fct>   <fct>           <dbl>              <dbl>\n 1 Adelie  Dream            39.5             0.0395\n 2 Adelie  Dream            37.2             0.0372\n 3 Adelie  Dream            39.5             0.0395\n 4 Adelie  Dream            40.9             0.0409\n 5 Adelie  Dream            36.4             0.0364\n 6 Adelie  Dream            39.2             0.0392\n 7 Adelie  Dream            38.8             0.0388\n 8 Adelie  Dream            42.2             0.0422\n 9 Adelie  Dream            37.6             0.0376\n10 Adelie  Dream            39.8             0.0398\n# ‚Ä¶ with 114 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-5",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-5",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000) %>% \n  group_by(species)\n\n# A tibble: 124 √ó 4\n# Groups:   species [2]\n   species island bill_length_mm bill_length_meters\n   <fct>   <fct>           <dbl>              <dbl>\n 1 Adelie  Dream            39.5             0.0395\n 2 Adelie  Dream            37.2             0.0372\n 3 Adelie  Dream            39.5             0.0395\n 4 Adelie  Dream            40.9             0.0409\n 5 Adelie  Dream            36.4             0.0364\n 6 Adelie  Dream            39.2             0.0392\n 7 Adelie  Dream            38.8             0.0388\n 8 Adelie  Dream            42.2             0.0422\n 9 Adelie  Dream            37.6             0.0376\n10 Adelie  Dream            39.8             0.0398\n# ‚Ä¶ with 114 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-6",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-6",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000) %>% \n  group_by(species) %>% \n  summarise(mean_bill_length_mm = mean(bill_length_mm),\n            sd_bill_length_mm = sd(bill_length_mm))\n\n# A tibble: 2 √ó 3\n  species   mean_bill_length_mm sd_bill_length_mm\n  <fct>                   <dbl>             <dbl>\n1 Adelie                   38.5              2.47\n2 Chinstrap                48.8              3.34"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-7",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-7",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\ndream_summary <- \n  penguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000) %>% \n  group_by(species) %>% \n  summarise(mean_bill_length_mm = mean(bill_length_mm),\n            sd_bill_length_mm = sd(bill_length_mm))\n\nLet‚Äôs assign the output to a new variable dream_summary."
  },
  {
    "objectID": "slides/20-manipulate.html#section-1",
    "href": "slides/20-manipulate.html#section-1",
    "title": "Manipulate Data",
    "section": "",
    "text": "In the previous code we have seen also two additional aspects that feature heavily in the tidyverse:\n\nThe Pipe %>%.\nNon-Standard Evaluation."
  },
  {
    "objectID": "slides/20-manipulate.html#the-pipe",
    "href": "slides/20-manipulate.html#the-pipe",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n\n\n\n\n\n\nThe pipe is provided by the package magrittr, it‚Äôs a forwarding operator:\n\nIt takes the ouput of what comes before (LHS) and sends it to the first argument of the function that comes after (RHS).\n\nLHS %>% RHS"
  },
  {
    "objectID": "slides/20-manipulate.html#the-pipe-1",
    "href": "slides/20-manipulate.html#the-pipe-1",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\nFor example, you could write:\n\nselect(penguins, species, body_mass_g)\n\n# A tibble: 344 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#the-pipe-2",
    "href": "slides/20-manipulate.html#the-pipe-2",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n‚Ä¶but if you use the pipe, your code is easier to read‚Ä¶\n\npenguins %>% select(species, body_mass_g)\n\n# A tibble: 344 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#the-pipe-3",
    "href": "slides/20-manipulate.html#the-pipe-3",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n‚Ä¶especially if you have to perform many operations one after the other‚Ä¶\n\npenguins %>%\n  select(species, body_mass_g) %>% \n  filter(species == 'Adelie')\n\n# A tibble: 152 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 142 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#the-pipe-4",
    "href": "slides/20-manipulate.html#the-pipe-4",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n‚Ä¶that otherwise would force you to nest your code horribly.\n\nfilter(\n  select(\n    penguins,\n    species, body_mass_g\n  ),\n  species == 'Adelie'\n)\n\n# A tibble: 152 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 142 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#non-standard-evaluation",
    "href": "slides/20-manipulate.html#non-standard-evaluation",
    "title": "Manipulate Data",
    "section": "Non-Standard Evaluation",
    "text": "Non-Standard Evaluation\nThis one is difficult‚Ä¶\n\nWhich argument does the function select() take? Let‚Äôs check it in its help page with ?select.\n\n?select\n\nUnder the Usage section it says:\nselect(.data, ...)\n\n\nAnd then in the section Arguments the help page says:\n.data: A data frame, data frame extension (e.g. a tibble), or a lazy data frame (e.g. from dbplyr or dtplyr). See Methods, below, for more details.\n\n...: <tidy-select> One or more unquoted expressions separated by commas. Variable names can be used as if they were positions in the data frame, so expressions like x:y can be used to select a range of variables."
  },
  {
    "objectID": "slides/20-manipulate.html#non-standard-evaluation-1",
    "href": "slides/20-manipulate.html#non-standard-evaluation-1",
    "title": "Manipulate Data",
    "section": "Non-Standard Evaluation",
    "text": "Non-Standard Evaluation\nSo, what are do we mean if we write:\n\npenguins %>% \n  select(species, island)\n\n\nThe penguins tibble is fills the.data parameter through the pipe %>%.\nThe unquoted names species, island fill the argument ..., they represent the names of the columns to be selected.\n\n\nBut the name of columns in a tibble is a character vector.\n\ncolnames(penguins)\n\n[1] \"species\"           \"island\"            \"bill_length_mm\"   \n[4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n[7] \"sex\"               \"year\""
  },
  {
    "objectID": "slides/20-manipulate.html#non-standard-evaluation-2",
    "href": "slides/20-manipulate.html#non-standard-evaluation-2",
    "title": "Manipulate Data",
    "section": "Non-Standard Evaluation",
    "text": "Non-Standard Evaluation\nThrough non-standard evaluation, in the function select, we can call element of a character vector like if they were variables (without quoting them).\n\npenguins %>% \n  select(species, island)\n\nThe variables species and island don‚Äôt exist outside of the dplyr function select().\n\nspecies\n\nError in eval(expr, envir, enclos): oggetto 'species' non trovato"
  },
  {
    "objectID": "slides/20-manipulate.html#section-2",
    "href": "slides/20-manipulate.html#section-2",
    "title": "Manipulate Data",
    "section": "",
    "text": "With non-standard evaluation we can write names without quoting them. This makes writing code for iterative data exploration faster.\n\nIf you come from a more strict programming language, it could be hard to get use to this behaviour.\n\n\nMost function of the Tidyverse do non-standard evaluation."
  },
  {
    "objectID": "slides/20-manipulate.html#exercise-1",
    "href": "slides/20-manipulate.html#exercise-1",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nWith the penguin dataset:\n\n\nSelect all numeric variables (columns).\nConvert all variables that are expressed in millimeters into meters, rename them accordingly.\n\n\nGet help from:\n\nDplyr‚Äôs website.\nThe Data Wrangling Chapter of R4DS."
  },
  {
    "objectID": "slides/20-manipulate.html#exercise-2",
    "href": "slides/20-manipulate.html#exercise-2",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nMove all the defined variable of the penguins dataset (species, island, sex, year) to the left of the measured variables.\nDoes any of the defined variables has missing data? In case remove the corresponding row.\nThen group the dataset by all of those variable defined variables and estimate the minimum for each measured variable of each group."
  },
  {
    "objectID": "slides/20-manipulate.html#exercise-3",
    "href": "slides/20-manipulate.html#exercise-3",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nHow many penguins have bill_length_mm above average?\nRepeat the analysis for each species.\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "slides/30-visualize.html#we-are-bad-at-recognizing-pattern-from-raw-data",
    "href": "slides/30-visualize.html#we-are-bad-at-recognizing-pattern-from-raw-data",
    "title": "Data Visualization",
    "section": "We are bad at recognizing pattern from raw data",
    "text": "We are bad at recognizing pattern from raw data\n\n\n# A tibble: 2,582 √ó 2\n         x      y\n     <dbl>  <dbl>\n   1 153.  105.  \n   2 279   247   \n   3 220   165   \n   4 403   433   \n   5 426   469   \n   6 408   427   \n   7  78.8 166.  \n   8 609   457   \n   9 611   469   \n  10 171   168   \n  11  95.7 152.  \n  12 548   482   \n  13 626   396   \n  14 153.  123.  \n  15 404   439   \n  16 123    35.8 \n  17 219   256   \n  18 641   412   \n  19  82.7  81.3 \n  20 221   221   \n  21 165.   48.8 \n  22 803   335   \n  23 267   391   \n  24 127.   29.3 \n  25 102.  178.  \n  26 171   224   \n  27 753   383   \n  28 242   222   \n  29 246   295   \n  30 748   392   \n  31 527   451   \n  32 131.  146.  \n  33 219   197   \n  34 127.   15   \n  35 571   436   \n  36 136    35.8 \n  37 175    69.6 \n  38  90.5 155.  \n  39 531   442   \n  40 198   130   \n  41 270   255   \n  42 145.   22.8 \n  43 289   367   \n  44 175   143   \n  45 132.   61.8 \n  46 422   401   \n  47 335   407   \n  48 122.   20.2 \n  49 178.  105.  \n  50 345   347   \n  51 796   306   \n  52 159.   44.9 \n  53 723   413   \n  54 385   366   \n  55 309   336   \n  56 302   303   \n  57 175   114.  \n  58 250   263   \n  59 367   331   \n  60 560   374   \n  61 122.  106   \n  62 130.  164.  \n  63 322   351   \n  64 588   426   \n  65 267   312   \n  66 670   447   \n  67 299   387   \n  68 248   357   \n  69 641   415   \n  70 462   397   \n  71 180.   46.2 \n  72 709   409   \n  73 679   423   \n  74 271   294   \n  75 819   306   \n  76 300   400   \n  77 542   482   \n  78 574   478   \n  79 349   408   \n  80 708   404   \n  81 257   251   \n  82 160   198   \n  83 140.   39.7 \n  84 386   364   \n  85 386   365   \n  86 150.  136.  \n  87 149    51.4 \n  88 165.   38.4 \n  89 357   335   \n  90 228   253   \n  91 237   190   \n  92 332   406   \n  93 203   241   \n  94 727   410   \n  95 368   323   \n  96 434   421   \n  97 350   309   \n  98 110    77.4 \n  99 563   393   \n 100 120.   56.6 \n 101 583   386   \n 102 462   412   \n 103 366   362   \n 104 167.   44.9 \n 105 170.  116.  \n 106  64.5 120.  \n 107 137.    2   \n 108 312   289   \n 109 188   163   \n 110 518   406   \n 111 252   361   \n 112 168   204   \n 113 116.   22.8 \n 114 350   428   \n 115 382   449   \n 116 187   141   \n 117 266   230   \n 118 217   155   \n 119  86.6  78.7 \n 120 146   199   \n 121 588   443   \n 122 167   220   \n 123 124.   33.2 \n 124 542   473   \n 125 433   422   \n 126 254   247   \n 127 359   308   \n 128 562   374   \n 129 234   257   \n 130 124.  132   \n 131 798   304   \n 132 195   236   \n 133 142.   11.1 \n 134 653   435   \n 135 579   421   \n 136 190   237   \n 137 569   376   \n 138 224   180   \n 139 577   414   \n 140 149   103.  \n 141 409   395   \n 142 596   435   \n 143 469   412   \n 144 187   134   \n 145 200   202   \n 146 150   188   \n 147 105.  127.  \n 148 263   311   \n 149 574   379   \n 150 252   349   \n 151  78.8  47.5 \n 152 702   426   \n 153 563   480   \n 154 272   334   \n 155 307   327   \n 156 217   223   \n 157 225   172   \n 158 701   428   \n 159 116.   95.6 \n 160 256   250   \n 161 738   377   \n 162 243   263   \n 163 208   239   \n 164 504   461   \n 165 554   384   \n 166 293   396   \n 167 490   410   \n 168 634   408   \n 169 143   214   \n 170 185   153   \n 171 381   448   \n 172 165   200   \n 173 169   229   \n 174 783   328   \n 175 342   362   \n 176 116.  128.  \n 177 521   394   \n 178 162   152   \n 179 133.  135.  \n 180 500   468   \n 181 265   280   \n 182 140   216   \n 183  93.1  90.4 \n 184 319   393   \n 185 339   338   \n 186 175    68.3 \n 187 265   227   \n 188 116.   99.5 \n 189 628   393   \n 190 276   278   \n 191 181   204   \n 192 276   378   \n 193 259   352   \n 194 650   416   \n 195 573   425   \n 196 436   465   \n 197  80.1  46.2 \n 198 101.  178.  \n 199 220   250   \n 200 744   380   \n 201 261   364   \n 202 596   448   \n 203 537   437   \n 204 521   395   \n 205 251   264   \n 206 427   401   \n 207 246   272   \n 208 395   387   \n 209 297   380   \n 210 359   434   \n 211 563   414   \n 212 518   476   \n 213 724   390   \n 214 238   192   \n 215 462   479   \n 216 116.  162.  \n 217  97   166.  \n 218 614   403   \n 219 268   267   \n 220 295   269   \n 221  86.6 163.  \n 222 308   400   \n 223 159   176   \n 224 110   141.  \n 225 154   232   \n 226 217   240   \n 227 190   158   \n 228 378   401   \n 229 424   401   \n 230 340   379   \n 231 225   232   \n 232  81.4  93   \n 233  55.4 129.  \n 234 152.  110.  \n 235 189   196   \n 236 457   453   \n 237 127.    9.80\n 238 490   427   \n 239 362   311   \n 240 653   427   \n 241 212   137   \n 242 163   149   \n 243 302   296   \n 244 149   170   \n 245 197   196   \n 246 155   203   \n 247 784   326   \n 248 178   174   \n 249  68.4 146.  \n 250 159.  120.  \n 251 789   337   \n 252 217   224   \n 253 289   322   \n 254 760   382   \n 255 283   352   \n 256 252   232   \n 257 151   226   \n 258 492   482   \n 259 172   179   \n 260 717   412   \n 261 280   249   \n 262 266   339   \n 263 607   415   \n 264 335   415   \n 265 805   332   \n 266 308   397   \n 267 567   461   \n 268 154   211   \n 269 220   215   \n 270 693   428   \n 271 615   468   \n 272 277   292   \n 273 305   326   \n 274 169   240   \n 275 376   368   \n 276 549   383   \n 277 166.   80   \n 278 569   461   \n 279 169   178   \n 280 152.   35.8 \n 281 726   405   \n 282  77.5 154.  \n 283 281   257   \n 284 567   435   \n 285 604   390   \n 286 109.  164.  \n 287 583   391   \n 288 543   388   \n 289  94.4  86.5 \n 290 249   279   \n 291 495   482   \n 292 349   337   \n 293 293   265   \n 294  76.2  51.4 \n 295 143   220   \n 296 184   197   \n 297 698   430   \n 298 245   258   \n 299 471   481   \n 300 227   195   \n 301 116.   59.2 \n 302 359   355   \n 303 424   469   \n 304 155   196   \n 305 218   254   \n 306 164   199   \n 307 258   346   \n 308 157.   95.6 \n 309 436   415   \n 310 506   458   \n 311 645   416   \n 312 548   477   \n 313 247   353   \n 314 262   298   \n 315 166.  101.  \n 316 257   333   \n 317 504   462   \n 318 118.   94.3 \n 319 177   172   \n 320 780   330   \n 321 449   455   \n 322 159.   98.2 \n 323 223   228   \n 324 700   410   \n 325 372   428   \n 326 770   351   \n 327 186   205   \n 328 561   480   \n 329 282   389   \n 330 771   351   \n 331 127.  142.  \n 332  63.2 131.  \n 333 552   463   \n 334 174   138   \n 335 179   243   \n 336 335   414   \n 337 289   335   \n 338 139.   26.7 \n 339 122.  132   \n 340 496   433   \n 341 411   396   \n 342 628   410   \n 343 123   107.  \n 344 193   135   \n 345 315   294   \n 346  97    70.9 \n 347 545   391   \n 348 281   349   \n 349 551   444   \n 350  86.6  65.7 \n 351  76.2 111.  \n 352 286   256   \n 353 648   430   \n 354 646   448   \n 355  78.8 167.  \n 356 202   135   \n 357 363   430   \n 358  77.5  48.8 \n 359 606   390   \n 360 415   397   \n 361 157.  129.  \n 362 145.   20.2 \n 363 567   479   \n 364  87.9  74.8 \n 365 593   451   \n 366 757   379   \n 367 190   163   \n 368 299   333   \n 369 459   407   \n 370 195   147   \n 371 732   407   \n 372 554   482   \n 373 219   191   \n 374  64.5  86.5 \n 375 536   387   \n 376 119.   59.2 \n 377 724   406   \n 378 294   345   \n 379  65.8 141.  \n 380 411   463   \n 381 139   195   \n 382 310   286   \n 383 241   285   \n 384 376   377   \n 385 539   482   \n 386 532   400   \n 387 182.  181.  \n 388 295   366   \n 389 176.   39.7 \n 390 717   417   \n 391  85.3 146.  \n 392 738   402   \n 393 298   313   \n 394 153   218   \n 395 503   402   \n 396 562   385   \n 397 119.  144.  \n 398 139.   94.3 \n 399 144.   17.6 \n 400 199   214   \n 401 598   398   \n 402 171.   73.5 \n 403 732   406   \n 404 438   473   \n 405 115.  150.  \n 406 368   357   \n 407 425   407   \n 408 149    28   \n 409 272   379   \n 410 233   184   \n 411 257   272   \n 412 637   430   \n 413 657   453   \n 414 174.  115.  \n 415 116.  152.  \n 416 295   334   \n 417 339   396   \n 418  76.2  54   \n 419 239   250   \n 420 704   426   \n 421 176.   65.7 \n 422 251   265   \n 423 239   249   \n 424 327   311   \n 425 127.   59.2 \n 426 159.   54   \n 427 218   225   \n 428 550   378   \n 429 819   285   \n 430 438   396   \n 431 153.   57.9 \n 432 793   348   \n 433 396   451   \n 434 127.  150.  \n 435 272   253   \n 436 159   243   \n 437 729   409   \n 438 556   459   \n 439 258   345   \n 440 355   379   \n 441 415   410   \n 442 282   273   \n 443 128.   29.3 \n 444 168.   90.4 \n 445 739   401   \n 446 174.   70.9 \n 447 233   217   \n 448 458   479   \n 449  51.5 112.  \n 450 757   376   \n 451 417   399   \n 452 360   332   \n 453 681   432   \n 454 463   423   \n 455  58   114.  \n 456 466   475   \n 457 189   204   \n 458 498   417   \n 459 165.  115.  \n 460 252   339   \n 461 589   474   \n 462 170.   60.5 \n 463 605   422   \n 464 362   370   \n 465 535   415   \n 466  63.2 110.  \n 467 226   210   \n 468 165.   81.3 \n 469 554   386   \n 470 754   388   \n 471 614   402   \n 472 141.   51.4 \n 473 334   413   \n 474 369   402   \n 475 124.   56.6 \n 476 416   405   \n 477 223   186   \n 478 154.  119   \n 479 680   442   \n 480 767   375   \n 481 104.  150.  \n 482 152   192   \n 483 176.   98.2 \n 484 267   230   \n 485 292   302   \n 486 305   415   \n 487 597   447   \n 488 247   227   \n 489 416   455   \n 490 460   448   \n 491 324   307   \n 492 793   332   \n 493 775   354   \n 494 804   292   \n 495 369   441   \n 496 176.  103.  \n 497 101.   69.6 \n 498 607   458   \n 499 249   301   \n 500 307   282   \n 501 610   457   \n 502 490   415   \n 503 328   361   \n 504 586   386   \n 505 114.   17.6 \n 506 532   389   \n 507 118.   74.8 \n 508 635   408   \n 509 451   477   \n 510 728   410   \n 511 509   452   \n 512 533   434   \n 513 613   399   \n 514 158.  116.  \n 515 269   295   \n 516 354   311   \n 517 148.   93   \n 518 421   462   \n 519 231   271   \n 520 217   204   \n 521 410   395   \n 522 396   457   \n 523 226   183   \n 524 141.   54   \n 525 247   333   \n 526 270   234   \n 527 808   286   \n 528 255   301   \n 529 266   387   \n 530 192   212   \n 531 251   206   \n 532 314   339   \n 533 725   389   \n 534 380   447   \n 535 110    87.8 \n 536 110    37.1 \n 537 357   334   \n 538  90.5 146.  \n 539 445   475   \n 540 387   362   \n 541 818   308   \n 542 421   416   \n 543 740   387   \n 544 559   432   \n 545 185   161   \n 546 467   480   \n 547 148   183   \n 548 286   257   \n 549 109.   46.2 \n 550 607   430   \n 551 156.  116.  \n 552 635   445   \n 553 365   315   \n 554 361   377   \n 555 271   262   \n 556 347   425   \n 557 324   306   \n 558 418   453   \n 559 111.   21.5 \n 560 792   314   \n 561 182   158   \n 562 111.   37.1 \n 563 305   337   \n 564 261   372   \n 565 186   156   \n 566 299   416   \n 567 484   473   \n 568 787   335   \n 569 762   381   \n 570 332   366   \n 571 596   408   \n 572  76.2 161.  \n 573 786   357   \n 574 273   396   \n 575 389   373   \n 576 788   319   \n 577 518   477   \n 578 495   399   \n 579 463   442   \n 580 119.  145   \n 581 277   271   \n 582 265   262   \n 583  95.7 158   \n 584 703   426   \n 585 153   239   \n 586 180   225   \n 587 334   371   \n 588 461   479   \n 589 253   245   \n 590 594   425   \n 591 276   386   \n 592 120.  105.  \n 593 282   379   \n 594 272   396   \n 595  54.1 129.  \n 596 182.  180.  \n 597 333   395   \n 598 165.   82.6 \n 599 454   457   \n 600 417   446   \n 601 321   302   \n 602 751   364   \n 603 253   367   \n 604 382   376   \n 605 304   286   \n 606 143   199   \n 607  69.7 107.  \n 608 304   380   \n 609 160   177   \n 610 284   361   \n 611 450   472   \n 612 175   181.  \n 613 755   372   \n 614 252   236   \n 615 111.   39.7 \n 616 223   262   \n 617 306   337   \n 618 137.  135.  \n 619 633   446   \n 620 273   383   \n 621 819   286   \n 622 589   386   \n 623 149   177   \n 624 498   419   \n 625 167   144   \n 626 579   463   \n 627 491   446   \n 628 221   236   \n 629 308   328   \n 630 797   344   \n 631 748   393   \n 632 778   334   \n 633 519   395   \n 634 155   210   \n 635 335   320   \n 636 153.  103.  \n 637 109.   89.1 \n 638 295   415   \n 639 357   372   \n 640  89.2 155.  \n 641 141.   55.3 \n 642 492   445   \n 643 356   312   \n 644 366   366   \n 645 674   433   \n 646 783   327   \n 647 577   477   \n 648 747   368   \n 649 361   338   \n 650 757   364   \n 651 109.  122.  \n 652 566   401   \n 653  56.7  91.7 \n 654 124.  109.  \n 655 271   362   \n 656 413   418   \n 657 574   421   \n 658 127.   25.4 \n 659 685   438   \n 660 283   282   \n 661 447   471   \n 662 198   203   \n 663 123   109.  \n 664 293   414   \n 665 338   417   \n 666 337   416   \n 667 372   435   \n 668 314   293   \n 669 422   387   \n 670 110   123.  \n 671 354   431   \n 672 144   185   \n 673 346   333   \n 674  97    76.1 \n 675 488   440   \n 676 266   297   \n 677 152.   29.3 \n 678 171   245   \n 679 265   385   \n 680 273   338   \n 681 476   481   \n 682 246   342   \n 683 132.   78.7 \n 684 373   369   \n 685  89.2 162.  \n 686 264   298   \n 687 212   150   \n 688 281   250   \n 689 105.  111.  \n 690 639   451   \n 691  99.6 162.  \n 692 332   384   \n 693 111.   22.8 \n 694 266   312   \n 695 653   425   \n 696  86.6  50.1 \n 697 410   434   \n 698 385   380   \n 699 150.   52.7 \n 700 330   314   \n 701 118.  102.  \n 702 387   452   \n 703 613   418   \n 704 118.  168.  \n 705 635   402   \n 706 243   235   \n 707 507   398   \n 708 575   478   \n 709 248   298   \n 710 167.  109.  \n 711 344   423   \n 712 235   276   \n 713 284   351   \n 714 498   418   \n 715 104.  144.  \n 716 184   161   \n 717 364   430   \n 718 228   191   \n 719 422   388   \n 720 193   213   \n 721 152   169   \n 722 201   198   \n 723 264   227   \n 724 654   422   \n 725 293   266   \n 726 496   399   \n 727 427   464   \n 728 268   231   \n 729 119.   93   \n 730 289   410   \n 731 109.   29.3 \n 732 236   189   \n 733 130.  109.  \n 734 625   395   \n 735 822   300   \n 736 784   359   \n 737 279   388   \n 738  93.1  77.4 \n 739 106.   44.9 \n 740 602   427   \n 741 815   316   \n 742 276   279   \n 743 566   395   \n 744 128.   59.2 \n 745 782   328   \n 746 105.   64.4 \n 747 265   311   \n 748  60.6  86.5 \n 749 663   431   \n 750 616   468   \n 751 168.  109.  \n 752 184   160   \n 753 162   172   \n 754 297   402   \n 755 761   353   \n 756 523   480   \n 757 407   462   \n 758 546   380   \n 759 136    61.8 \n 760 102.   52.7 \n 761 156.  103.  \n 762 602   389   \n 763 656   414   \n 764 106.  154.  \n 765 634   446   \n 766  93.1  47.5 \n 767 446   476   \n 768 730   385   \n 769 172.  115.  \n 770 242   269   \n 771 353   396   \n 772 287   310   \n 773 652   410   \n 774 265   298   \n 775 753   363   \n 776 489   437   \n 777 146.  131.  \n 778 128.   16.3 \n 779 304   415   \n 780 263   249   \n 781 150.   29.3 \n 782 110    35.8 \n 783 512   407   \n 784 798   343   \n 785 295   416   \n 786 325   390   \n 787 111.  170.  \n 788 212   160   \n 789 621   453   \n 790 130.   95.6 \n 791 696   432   \n 792 216   209   \n 793 412   422   \n 794 617   409   \n 795 328   311   \n 796 567   416   \n 797 658   453   \n 798  77.5 133.  \n 799 262   224   \n 800 715   418   \n 801 487   399   \n 802 819   308   \n 803 576   464   \n 804 541   383   \n 805 174   228   \n 806 326   407   \n 807 580   476   \n 808 361   405   \n 809 809   285   \n 810 130.  162.  \n 811 681   442   \n 812 294   364   \n 813 560   382   \n 814 268   282   \n 815 246   348   \n 816 148.  129.  \n 817 593   438   \n 818 241   261   \n 819 128.   94.3 \n 820 472   413   \n 821 776   344   \n 822 461   401   \n 823 215   212   \n 824 122.    7.20\n 825 577   412   \n 826 357   378   \n 827 304   303   \n 828 787   347   \n 829 247   260   \n 830 702   419   \n 831 140.  135.  \n 832 209   141   \n 833 364   437   \n 834 811   284   \n 835 593   392   \n 836 286   280   \n 837 361   311   \n 838 130.   94.3 \n 839 235   277   \n 840 667   429   \n 841 261   308   \n 842 141.   41   \n 843 464   437   \n 844 241   253   \n 845 216   208   \n 846 420   401   \n 847 179.   44.9 \n 848 148   171   \n 849 551   383   \n 850 464   438   \n 851 273   372   \n 852 157.   31.9 \n 853 820   286   \n 854 271   235   \n 855 359   349   \n 856 191   142   \n 857 220   214   \n 858 568   479   \n 859 502   398   \n 860 370   442   \n 861 196   155   \n 862 243   286   \n 863 558   481   \n 864 165.  107.  \n 865 286   406   \n 866 344   373   \n 867 158   215   \n 868 110    25.4 \n 869 139.   59.2 \n 870 557   428   \n 871  82.7 164.  \n 872 187   135   \n 873 110    50.1 \n 874 171.   20.2 \n 875 195   216   \n 876 630   394   \n 877 154   202   \n 878 609   389   \n 879 249   262   \n 880 819   307   \n 881 329   403   \n 882 135.   29.3 \n 883 251   360   \n 884 540   384   \n 885 116.   85.2 \n 886 553   376   \n 887 547   469   \n 888 794   309   \n 889 269   233   \n 890 149   115.  \n 891 171   138   \n 892 801   339   \n 893 587   475   \n 894 330   323   \n 895  80.1  47.5 \n 896 544   482   \n 897 822   296   \n 898 164   173   \n 899 105.  107.  \n 900 487   442   \n 901 394   450   \n 902 612   420   \n 903  99.6 161.  \n 904 551   396   \n 905 151   175   \n 906 120.  103.  \n 907 106.  159.  \n 908 306   414   \n 909 768   344   \n 910 115.   31.9 \n 911 454   410   \n 912 594   387   \n 913 273   339   \n 914 456   445   \n 915 111.  161.  \n 916 231   215   \n 917 306   326   \n 918 191   196   \n 919 159   145   \n 920 822   291   \n 921 747   395   \n 922 711   421   \n 923 284   382   \n 924 286   354   \n 925 148.  103.  \n 926 443   475   \n 927 289   333   \n 928 341   326   \n 929 165   226   \n 930 113.   72.2 \n 931  99.6  74.8 \n 932 301   416   \n 933  76.2  83.9 \n 934 141.   52.7 \n 935 591   386   \n 936 137.   80   \n 937 436   473   \n 938 221   259   \n 939 763   380   \n 940 292   303   \n 941 148.  149.  \n 942 358   395   \n 943 533   473   \n 944 250   203   \n 945 584   386   \n 946 741   389   \n 947 596   473   \n 948 745   397   \n 949 263   280   \n 950 149    29.3 \n 951  84    38.4 \n 952  97   168.  \n 953 308   300   \n 954 608   394   \n 955 337   322   \n 956 178.   63.1 \n 957 109.   90.4 \n 958 618   454   \n 959 383   360   \n 960 681   422   \n 961 119.   83.9 \n 962 130.  161.  \n 963 800   300   \n 964 250   301   \n 965 474   413   \n 966 383   372   \n 967 203   236   \n 968 133.   86.5 \n 969 407   379   \n 970 273   292   \n 971 592   452   \n 972 341   327   \n 973 263   298   \n 974 124.    4.60\n 975 248   202   \n 976 144.   20.2 \n 977 195   196   \n 978 629   464   \n 979 239   201   \n 980 368   322   \n 981 410   463   \n 982 655   413   \n 983 318   346   \n 984 332   367   \n 985 348   416   \n 986 136   205   \n 987 310   299   \n 988 232   216   \n 989 364   368   \n 990 120.   34.5 \n 991 282   397   \n 992 105.  112.  \n 993  61.9 115.  \n 994 157.   96.9 \n 995 273   329   \n 996 616   409   \n 997 123   175.  \n 998 428   407   \n 999 176.   96.9 \n1000 782   363   \n1001 179.   56.6 \n1002 352   397   \n1003 568   416   \n1004 142.    8.5 \n1005 154.   57.9 \n1006 289   278   \n1007 356   426   \n1008 218   255   \n1009 239   251   \n1010 521   463   \n1011  91.8  41   \n1012 148.  102.  \n1013 300   382   \n1014 446   394   \n1015 163.   85.2 \n1016 548   379   \n1017 260   353   \n1018  56.7 106   \n1019 168.   41   \n1020 402   385   \n1021 327   408   \n1022 226   209   \n1023 361   370   \n1024 703   408   \n1025 358   308   \n1026 370   441   \n1027 802   298   \n1028 149    55.3 \n1029 793   312   \n1030 263   367   \n1031 127.   31.9 \n1032 275   269   \n1033 122.   56.6 \n1034 247   352   \n1035 637   461   \n1036 346   346   \n1037 168.   78.7 \n1038 312   388   \n1039 178   146   \n1040  94.4 175.  \n1041 256   215   \n1042 241   204   \n1043 755   381   \n1044 319   299   \n1045 149   185   \n1046 144   199   \n1047 158   169   \n1048 204   221   \n1049 265   323   \n1050 479   482   \n1051 261   278   \n1052 450   395   \n1053 148.   91.7 \n1054 531   443   \n1055 511   445   \n1056 623   407   \n1057 127.   57.9 \n1058 211   240   \n1059 155   195   \n1060 208   244   \n1061 561   468   \n1062 111.   38.4 \n1063 539   385   \n1064 171   173   \n1065 242   254   \n1066 157   151   \n1067 136    34.5 \n1068 366   438   \n1069 558   434   \n1070 804   335   \n1071 811   322   \n1072 812   322   \n1073 627   465   \n1074 355   431   \n1075 387   381   \n1076 163.   86.5 \n1077  94.4  42.3 \n1078 279   248   \n1079  54.1 112.  \n1080 120.  131.  \n1081 149    91.7 \n1082 329   313   \n1083 407   428   \n1084 272   284   \n1085 291   381   \n1086 366   386   \n1087 209   143   \n1088 637   408   \n1089 255   311   \n1090 172.   21.5 \n1091 543   390   \n1092 787   322   \n1093 176.   95.6 \n1094 728   403   \n1095 371   358   \n1096 106.   67   \n1097 780   365   \n1098 365   393   \n1099 119.  103.  \n1100  65.8 115.  \n1101 176   139   \n1102 216   150   \n1103 463   408   \n1104 170   183   \n1105 109.   28   \n1106 371   408   \n1107 156   153   \n1108 771   342   \n1109 416   465   \n1110 158   175   \n1111 754   381   \n1112 820   304   \n1113 247   238   \n1114 246   337   \n1115 272   293   \n1116 162   179   \n1117 434   431   \n1118 423   388   \n1119 157.   33.2 \n1120 309   405   \n1121 102.   44.9 \n1122 105.  110.  \n1123 164   140   \n1124 109.   31.9 \n1125 595   460   \n1126 822   297   \n1127 629   448   \n1128 269   331   \n1129 647   429   \n1130 136    16.3 \n1131 116.   74.8 \n1132 270   269   \n1133 676   443   \n1134 237   191   \n1135 729   385   \n1136 260   277   \n1137 789   319   \n1138 223   169   \n1139 113.   20.2 \n1140 106.   64.4 \n1141 144.  133.  \n1142 207   139   \n1143 124.  133.  \n1144 185   197   \n1145 165.   99.5 \n1146 774   354   \n1147 270   323   \n1148 153   169   \n1149 154.   91.7 \n1150 109.   69.6 \n1151 355   396   \n1152 266   228   \n1153 320   385   \n1154 542   474   \n1155 380   383   \n1156 618   468   \n1157 488   438   \n1158 292   395   \n1159  77.5 115.  \n1160 148   199   \n1161 326   390   \n1162 152.   37.1 \n1163 274   275   \n1164 740   400   \n1165 448   464   \n1166 275   277   \n1167 545   462   \n1168 104.  166.  \n1169 197   204   \n1170 348   336   \n1171 109.  172.  \n1172 573   479   \n1173 612   421   \n1174 150.  126.  \n1175 258   274   \n1176 525   393   \n1177 433   472   \n1178 559   471   \n1179 263   334   \n1180 283   371   \n1181 576   459   \n1182  90.5  72.2 \n1183 183   238   \n1184 303   321   \n1185 198   219   \n1186 333   370   \n1187 137.  154.  \n1188 462   475   \n1189 489   482   \n1190 443   398   \n1191 501   468   \n1192 142.  152.  \n1193 608   410   \n1194 456   478   \n1195 565   408   \n1196 130.  141.  \n1197 217   201   \n1198 181   203   \n1199 582   386   \n1200 278   247   \n1201 312   290   \n1202 174   211   \n1203 591   441   \n1204 159.  126.  \n1205 386   369   \n1206 698   411   \n1207 813   284   \n1208 120.   77.4 \n1209 130.  148.  \n1210 252   319   \n1211 450   410   \n1212 171.  115.  \n1213 298   338   \n1214 168.   18.9 \n1215 210   245   \n1216 495   466   \n1217 124.   57.9 \n1218 343   347   \n1219 331   365   \n1220 267   246   \n1221 111.  126.  \n1222 127.   93   \n1223 325   355   \n1224 180.   51.4 \n1225 170.   77.4 \n1226 368   430   \n1227 126.  109.  \n1228 226   266   \n1229  58    95.6 \n1230 659   420   \n1231 219   163   \n1232 502   455   \n1233 118.   42.3 \n1234 657   416   \n1235 292   362   \n1236 540   383   \n1237 636   408   \n1238 507   444   \n1239 411   458   \n1240 271   293   \n1241 163.   83.9 \n1242 535   413   \n1243  87.9 150.  \n1244 286   383   \n1245 285   406   \n1246 128.  135.  \n1247 806   331   \n1248 136    60.5 \n1249 149   233   \n1250 500   413   \n1251 574   396   \n1252 175   239   \n1253 253   267   \n1254 102.   63.1 \n1255 676   424   \n1256 730   408   \n1257 719   394   \n1258 131.   38.4 \n1259 520   395   \n1260 152   200   \n1261 340   420   \n1262 612   419   \n1263 627   464   \n1264 445   394   \n1265 601   442   \n1266 765   379   \n1267 237   199   \n1268 642   459   \n1269 805   289   \n1270 782   352   \n1271 254   269   \n1272 201   130   \n1273 693   419   \n1274 407   394   \n1275 106.   93   \n1276 427   433   \n1277 107.   44.9 \n1278 369   358   \n1279 218   228   \n1280 118.   59.2 \n1281 227   175   \n1282 420   385   \n1283 435   417   \n1284 625   391   \n1285  93.1  56.6 \n1286 136   136.  \n1287 330   390   \n1288 244   288   \n1289 738   401   \n1290 786   323   \n1291 320   300   \n1292 433   434   \n1293 780   350   \n1294 376   395   \n1295 308   408   \n1296 772   342   \n1297 270   394   \n1298 222   169   \n1299 109.   68.3 \n1300 174   244   \n1301 531   456   \n1302 283   401   \n1303 373   434   \n1304 342   421   \n1305 397   439   \n1306 768   345   \n1307 263   258   \n1308 296   334   \n1309 118.  174.  \n1310 160   238   \n1311 270   262   \n1312 304   295   \n1313 146.   93   \n1314 150.   83.9 \n1315 337   383   \n1316 122.  155.  \n1317 449   463   \n1318 118.  175.  \n1319 401   392   \n1320 526   453   \n1321 306   281   \n1322 101.  157.  \n1323 753   389   \n1324 333   341   \n1325 240   227   \n1326 158   197   \n1327 107.  120.  \n1328 412   420   \n1329 146.  101.  \n1330 649   416   \n1331 457   443   \n1332 179.   57.9 \n1333 185   205   \n1334 750   391   \n1335 698   431   \n1336 266   247   \n1337 613   402   \n1338 639   460   \n1339 615   415   \n1340 147   199   \n1341 789   327   \n1342 289   411   \n1343 287   271   \n1344 165   174   \n1345 215   251   \n1346 159.  114.  \n1347 491   425   \n1348 360   429   \n1349 306   317   \n1350 817   311   \n1351 764   379   \n1352 284   261   \n1353 118.   93   \n1354  74.9 132   \n1355 105.  109.  \n1356 274   324   \n1357 148.   39.7 \n1358 306   282   \n1359 516   401   \n1360 561   428   \n1361  78.8  99.5 \n1362 283   252   \n1363 213   140   \n1364 256   270   \n1365 560   422   \n1366 136    28   \n1367 513   402   \n1368 387   363   \n1369 349   427   \n1370 418   445   \n1371 394   387   \n1372 722   398   \n1373 566   394   \n1374 200   197   \n1375 122.  176.  \n1376 341   349   \n1377 105.  101.  \n1378 123   146.  \n1379 605   433   \n1380 259   297   \n1381 296   370   \n1382 153.  122.  \n1383 709   403   \n1384 177   239   \n1385 213   240   \n1386 146.   43.6 \n1387 260   307   \n1388 152.  107.  \n1389 149   152.  \n1390 569   479   \n1391 130.  167.  \n1392 551   377   \n1393 743   380   \n1394 231   216   \n1395 325   407   \n1396 146.   48.8 \n1397 217   253   \n1398 644   412   \n1399 153.  133.  \n1400 477   482   \n1401 362   338   \n1402 613   401   \n1403 625   465   \n1404 599   460   \n1405 640   442   \n1406  77.5 145   \n1407 503   455   \n1408 164   245   \n1409 110    48.8 \n1410 344   323   \n1411 469   417   \n1412 366   356   \n1413 647   449   \n1414 271   395   \n1415 480   482   \n1416 485   482   \n1417 274   326   \n1418 688   417   \n1419 641   459   \n1420 163.   99.5 \n1421 104.   44.9 \n1422 167.   80   \n1423 130.  170.  \n1424 170.  115.  \n1425 577   470   \n1426 319   348   \n1427 338   351   \n1428 217   156   \n1429 153.   86.5 \n1430 218   162   \n1431 166   228   \n1432 521   410   \n1433 589   460   \n1434 164   225   \n1435 361   436   \n1436 128.   28   \n1437 267   390   \n1438 405   399   \n1439 144.  114.  \n1440 447   457   \n1441 748   374   \n1442 322   311   \n1443 508   440   \n1444  91.8  72.2 \n1445 363   327   \n1446 349   373   \n1447 292   393   \n1448 686   437   \n1449 340   350   \n1450 265   383   \n1451 647   448   \n1452 455   478   \n1453 640   441   \n1454 279   274   \n1455  95.7 141.  \n1456 584   475   \n1457 130.  135.  \n1458 246   237   \n1459 253   314   \n1460 229   239   \n1461 329   314   \n1462 643   428   \n1463 238   209   \n1464 298   272   \n1465 257   357   \n1466 159.  105.  \n1467 776   347   \n1468 658   424   \n1469 180   151   \n1470 282   377   \n1471 147   172   \n1472 136   209   \n1473 178.   41   \n1474 743   379   \n1475 311   288   \n1476  50.2 115.  \n1477 593   460   \n1478 145   175   \n1479 251   306   \n1480 139.   37.1 \n1481 269   243   \n1482 612   457   \n1483 570   465   \n1484 593   473   \n1485 672   446   \n1486 599   388   \n1487 135.   34.5 \n1488 654   411   \n1489 504   479   \n1490 423   413   \n1491  84   145   \n1492 131.  144.  \n1493 179   202   \n1494 562   442   \n1495 130.    2   \n1496 625   396   \n1497  50.2 118.  \n1498 328   387   \n1499 611   396   \n1500 248   239   \n1501 116.  101.  \n1502 785   334   \n1503 289   331   \n1504 600   471   \n1505 146   172   \n1506 116.   98.2 \n1507 149   128.  \n1508 287   257   \n1509 128.  103.  \n1510 769   344   \n1511 251   235   \n1512 131.  135.  \n1513 115.   85.2 \n1514 324   323   \n1515 266   281   \n1516 315   293   \n1517 616   414   \n1518 153.   34.5 \n1519 176.  101.  \n1520 334   237   \n1521 400   379   \n1522 336   415   \n1523 634   400   \n1524 130.  166.  \n1525 619   389   \n1526 268   392   \n1527 106.   95.6 \n1528 217   203   \n1529 672   440   \n1530 152   219   \n1531 632   409   \n1532 284   338   \n1533 196   154   \n1534 251   205   \n1535 264   378   \n1536 565   393   \n1537 114.   77.4 \n1538 167   204   \n1539 391   385   \n1540 150.   37.1 \n1541 102.  146.  \n1542 255   215   \n1543 326   339   \n1544 173   199   \n1545 295   368   \n1546 691   414   \n1547 323   354   \n1548 178.   61.8 \n1549 289   342   \n1550 245   237   \n1551 423   468   \n1552 296   339   \n1553 470   476   \n1554 210   244   \n1555  93.1 159.  \n1556 137   197   \n1557 294   307   \n1558 169   214   \n1559 144.   18.9 \n1560 447   398   \n1561 161   198   \n1562 270   395   \n1563 341   328   \n1564 167   245   \n1565 646   429   \n1566  71   158   \n1567 150.  127.  \n1568 445   459   \n1569 761   382   \n1570 148   215   \n1571 109.   57.9 \n1572 590   386   \n1573 549   459   \n1574 448   476   \n1575 162    99.5 \n1576 545   398   \n1577 795   346   \n1578 713   415   \n1579 309   406   \n1580 118.   12.4 \n1581 734   381   \n1582 653   410   \n1583 277   387   \n1584 458   441   \n1585  87.9 162.  \n1586 233   218   \n1587 116.   60.5 \n1588 247   296   \n1589 269   268   \n1590 277   272   \n1591 136   207   \n1592 140.   38.4 \n1593 288   289   \n1594 223   178   \n1595 113.   86.5 \n1596 566   398   \n1597 154.  133.  \n1598 198   218   \n1599 465   408   \n1600 787   356   \n1601 107.   93   \n1602 246   343   \n1603 598   388   \n1604  82.7  57.9 \n1605 355   336   \n1606 713   400   \n1607 615   389   \n1608 354   407   \n1609 124.   93   \n1610  68.4 132   \n1611 235   221   \n1612 159.  124.  \n1613 216   170   \n1614 609   428   \n1615 361   310   \n1616 292   394   \n1617 714   419   \n1618 220   258   \n1619 332   325   \n1620 170   179   \n1621 622   467   \n1622 119.   42.3 \n1623 297   339   \n1624 599   414   \n1625 299   273   \n1626 221   175   \n1627 162    18.9 \n1628 613   468   \n1629 299   400   \n1630 467   397   \n1631 560   445   \n1632 787   321   \n1633 213   165   \n1634 468   424   \n1635  93.1  51.4 \n1636 310   386   \n1637 356   341   \n1638 525   405   \n1639 179.   43.6 \n1640 519   410   \n1641 757   375   \n1642 107.   91.7 \n1643 391   443   \n1644 264   377   \n1645 377   432   \n1646 566   444   \n1647 356   432   \n1648 468   426   \n1649 142.  103.  \n1650 174   240   \n1651 771   365   \n1652 462   429   \n1653 312   322   \n1654 160   208   \n1655 580   386   \n1656 697   412   \n1657 806   332   \n1658 164   162   \n1659 368   410   \n1660 720   400   \n1661 311   299   \n1662 459   474   \n1663 166.   46.2 \n1664 545   472   \n1665 603   437   \n1666 266   389   \n1667 459   440   \n1668 157   158   \n1669 128.   39.7 \n1670 133.  158   \n1671 172.   73.5 \n1672 220   257   \n1673 726   388   \n1674 332   397   \n1675 346   359   \n1676 173   143   \n1677 553   462   \n1678 345   331   \n1679 327   358   \n1680 818   284   \n1681 180.   52.7 \n1682 402   459   \n1683 165   227   \n1684 550   466   \n1685 388   369   \n1686 214   240   \n1687 274   276   \n1688 244   235   \n1689 226   243   \n1690 731   407   \n1691 160   165   \n1692 284   290   \n1693 165.   87.8 \n1694 110    24.1 \n1695 459   400   \n1696 133.   35.8 \n1697 449   476   \n1698 139.   57.9 \n1699 192   154   \n1700 812   320   \n1701 174.  114.  \n1702 440   474   \n1703 107.   90.4 \n1704 788   321   \n1705 603   390   \n1706 749   392   \n1707 236   278   \n1708 555   459   \n1709 270   235   \n1710 213   248   \n1711 182   143   \n1712 754   368   \n1713 186   197   \n1714 325   389   \n1715 126.  133.  \n1716 570   429   \n1717 468   401   \n1718 324   322   \n1719  72.3 162.  \n1720 627   401   \n1721 344   316   \n1722 138   196   \n1723 814   316   \n1724 110   163.  \n1725 394   415   \n1726 114.   60.5 \n1727 192   142   \n1728 109.   52.7 \n1729 124.   42.3 \n1730 367   440   \n1731 391   454   \n1732  76.2 154.  \n1733 244   199   \n1734 126.    4.60\n1735 361   435   \n1736 283   380   \n1737 198   134   \n1738 293   275   \n1739 106.  175.  \n1740 115.   60.5 \n1741 302   319   \n1742 174.   90.4 \n1743 328   343   \n1744 462   426   \n1745 674   434   \n1746 266   361   \n1747 175    39.7 \n1748 199   202   \n1749 553   482   \n1750 728   409   \n1751 352   373   \n1752 230   263   \n1753 362   312   \n1754 300   282   \n1755 115.  128.  \n1756  84   148.  \n1757 212   157   \n1758 179.   59.2 \n1759 145   187   \n1760 344   347   \n1761 459   479   \n1762  90.5  39.7 \n1763 417   454   \n1764 417   460   \n1765 796   307   \n1766 220   190   \n1767 122.   43.6 \n1768 533   388   \n1769 192   135   \n1770 226   233   \n1771 364   412   \n1772 176.   99.5 \n1773 156   241   \n1774 305   332   \n1775 272   237   \n1776 326   310   \n1777 451   461   \n1778 265   384   \n1779 382   388   \n1780 642   440   \n1781 356   307   \n1782 334   374   \n1783 238   248   \n1784 141   195   \n1785 288   258   \n1786 155   174   \n1787 797   305   \n1788 253   298   \n1789 141.   46.2 \n1790 253   365   \n1791 286   375   \n1792 345   424   \n1793 344   322   \n1794 544   434   \n1795 361   317   \n1796  77.5  82.6 \n1797 234   276   \n1798 587   444   \n1799 237   279   \n1800  54.1 119   \n1801 766   376   \n1802 148   180   \n1803  55.4  93   \n1804  97    43.6 \n1805 363   323   \n1806 418   392   \n1807 570   377   \n1808 123   132   \n1809 271   283   \n1810 234   219   \n1811 533   400   \n1812 649   408   \n1813 619   468   \n1814 436   395   \n1815 114.  166.  \n1816 275   278   \n1817 293   305   \n1818  85.3 145   \n1819 114.   72.2 \n1820 561   374   \n1821 226   184   \n1822  54.1  94.3 \n1823 732   382   \n1824 247   354   \n1825 159.  122.  \n1826 261   353   \n1827 622   458   \n1828 119.  131.  \n1829 218   172   \n1830 176.   94.3 \n1831 178.  110.  \n1832 668   428   \n1833 154   194   \n1834 388   453   \n1835 359   339   \n1836 178.  106   \n1837 105.   99.5 \n1838 552   377   \n1839 251   209   \n1840 250   322   \n1841 366   439   \n1842 132.  153.  \n1843 172.   90.4 \n1844 167.   78.7 \n1845 290   300   \n1846 275   252   \n1847 180   152   \n1848 255   214   \n1849 269   282   \n1850 227   267   \n1851 763   370   \n1852 478   409   \n1853 329   363   \n1854 266   264   \n1855 164   224   \n1856 244   287   \n1857 350   393   \n1858 777   334   \n1859 196   205   \n1860 502   465   \n1861 317   345   \n1862 292   372   \n1863 409   426   \n1864 146.  102.  \n1865 267   361   \n1866 583   475   \n1867 198   196   \n1868 429   391   \n1869 509   398   \n1870 413   396   \n1871 176.  114.  \n1872 645   459   \n1873 430   395   \n1874 273   274   \n1875 746   396   \n1876 273   384   \n1877 555   482   \n1878 397   457   \n1879 141.   39.7 \n1880 368   440   \n1881 105.   96.9 \n1882 409   462   \n1883 789   318   \n1884  77.5  50.1 \n1885 222   225   \n1886 411   395   \n1887 228   237   \n1888 265   380   \n1889 105.  115.  \n1890 185   154   \n1891 174.   69.6 \n1892 217   170   \n1893 294   306   \n1894 222   224   \n1895 306   292   \n1896 308   399   \n1897 122.   77.4 \n1898 325   384   \n1899 576   383   \n1900 590   454   \n1901 389   420   \n1902 336   416   \n1903 598   397   \n1904  86.6  60.5 \n1905 324   388   \n1906 165   245   \n1907 712   421   \n1908 258   349   \n1909 227   254   \n1910 123    56.6 \n1911 178.  112.  \n1912 652   437   \n1913 382   430   \n1914 546   470   \n1915 561   444   \n1916 153.  120.  \n1917 131.   17.6 \n1918 290   261   \n1919 119.   20.2 \n1920 331   411   \n1921  87.9  90.4 \n1922 624   451   \n1923  81.4  57.9 \n1924 522   394   \n1925 406   461   \n1926 259   256   \n1927 146.   94.3 \n1928 617   389   \n1929 670   427   \n1930 136    30.6 \n1931 115.   73.5 \n1932 693   413   \n1933 214   166   \n1934 107.   54   \n1935 518   467   \n1936 170.   18.9 \n1937 232   184   \n1938 137.   26.7 \n1939 144.  132   \n1940 105.  105.  \n1941 553   442   \n1942 633   408   \n1943 517   406   \n1944 339   418   \n1945 530   446   \n1946 284   291   \n1947 246   346   \n1948 432   391   \n1949 106.   94.3 \n1950 416   406   \n1951 145.   39.7 \n1952 139.   25.4 \n1953 396   439   \n1954 362   319   \n1955 284   282   \n1956 412   450   \n1957 599   431   \n1958 576   471   \n1959 800   342   \n1960 377   395   \n1961 513   397   \n1962 385   367   \n1963 155   205   \n1964 737   384   \n1965 794   347   \n1966 165   145   \n1967 792   341   \n1968 785   325   \n1969 308   409   \n1970 797   306   \n1971 226   202   \n1972 297   270   \n1973 782   362   \n1974 337   334   \n1975 161   153   \n1976 176.   91.7 \n1977 268   232   \n1978 810   285   \n1979 685   425   \n1980 273   239   \n1981 581   386   \n1982 187   142   \n1983 183   159   \n1984 392   385   \n1985 355   432   \n1986 155   169   \n1987 192   130   \n1988 470   397   \n1989 653   411   \n1990 595   450   \n1991 218   163   \n1992 215   144   \n1993 118.  170.  \n1994 115.   42.3 \n1995 427   407   \n1996 818   309   \n1997 192   196   \n1998 485   472   \n1999 162   159   \n2000 257   340   \n2001 453   473   \n2002 461   474   \n2003 146.   25.4 \n2004 613   456   \n2005 466   432   \n2006 436   391   \n2007 250   358   \n2008 566   404   \n2009 608   403   \n2010 413   456   \n2011 237   281   \n2012 157   215   \n2013 376   360   \n2014 467   428   \n2015 478   482   \n2016 286   384   \n2017 383   388   \n2018 380   426   \n2019 265   312   \n2020 126.   93   \n2021 331   323   \n2022 601   440   \n2023 156   196   \n2024 627   450   \n2025 383   395   \n2026 294   266   \n2027 165   175   \n2028 163   140   \n2029 585   475   \n2030 171.  103.  \n2031 153.   35.8 \n2032 171   183   \n2033 184   238   \n2034 154   233   \n2035 140.    3.30\n2036  98.3 164.  \n2037 284   403   \n2038 250   242   \n2039 204   136   \n2040 148   179   \n2041 161.   98.2 \n2042 137.   37.1 \n2043 133.   85.2 \n2044 536   386   \n2045 623   390   \n2046  99.6 178.  \n2047 288   386   \n2048 286   341   \n2049 238   225   \n2050 146.   46.2 \n2051 205   242   \n2052 171.  110.  \n2053 363   322   \n2054 369   329   \n2055 438   391   \n2056 161   216   \n2057  98.3 179.  \n2058 230   240   \n2059 558   448   \n2060 252   244   \n2061 136     7.20\n2062 239   193   \n2063 418   454   \n2064 405   379   \n2065 661   431   \n2066 187   143   \n2067 148.   28   \n2068 707   411   \n2069 461   445   \n2070 309   285   \n2071 554   387   \n2072 123    42.3 \n2073 225   184   \n2074 246   341   \n2075 409   394   \n2076 289   269   \n2077 133.   87.8 \n2078 604   459   \n2079 797   334   \n2080 645   437   \n2081 126.   57.9 \n2082 477   402   \n2083 289   327   \n2084 512   440   \n2085 237   247   \n2086 162   151   \n2087 799   333   \n2088 142   200   \n2089 282   250   \n2090 418   399   \n2091 220   189   \n2092 105.   98.2 \n2093  94.4 172.  \n2094 307   290   \n2095 274   252   \n2096 157   197   \n2097 690   435   \n2098 704   425   \n2099 183   147   \n2100 350   338   \n2101 488   482   \n2102 469   402   \n2103 141.   48.8 \n2104 110    26.7 \n2105 258   358   \n2106 333   318   \n2107 597   387   \n2108 577   464   \n2109 338   364   \n2110 365   438   \n2111 231   241   \n2112 622   452   \n2113 212   240   \n2114 303   333   \n2115 266   329   \n2116 148.   50.1 \n2117 408   452   \n2118 291   412   \n2119 807   287   \n2120 253   315   \n2121 646   446   \n2122 530   476   \n2123  77.5 116.  \n2124 489   434   \n2125 429   465   \n2126 716   418   \n2127 217   160   \n2128 201   236   \n2129 405   430   \n2130 146.   24.1 \n2131 376   439   \n2132 216   211   \n2133 162   167   \n2134 170.   90.4 \n2135 546   379   \n2136 218   198   \n2137 546   482   \n2138 227   202   \n2139 170.   76.1 \n2140 264   354   \n2141 425   447   \n2142 382   378   \n2143 424   463   \n2144  69.7 161.  \n2145 154   216   \n2146 127.   30.6 \n2147 240   269   \n2148 163   148   \n2149 122.   21.5 \n2150 131.  148.  \n2151 469   413   \n2152 101.  171   \n2153 339   351   \n2154 272   332   \n2155 636   444   \n2156 786   358   \n2157 307   317   \n2158 541   479   \n2159 164   240   \n2160 207   238   \n2161 331   316   \n2162 262   374   \n2163 296   310   \n2164 309   322   \n2165 278   254   \n2166 269   356   \n2167 585   445   \n2168 426   401   \n2169 146   173   \n2170 358   333   \n2171 352   353   \n2172 646   447   \n2173 270   261   \n2174 269   314   \n2175 244   290   \n2176 345   322   \n2177 148.   83.9 \n2178 212   246   \n2179 141.   47.5 \n2180 119.   43.6 \n2181 333   319   \n2182 777   348   \n2183 167.   18.9 \n2184 380   400   \n2185 370   372   \n2186 599   446   \n2187 344   339   \n2188 582   476   \n2189  58    89.1 \n2190 790   316   \n2191  73.6 140.  \n2192 311   298   \n2193 794   310   \n2194 375   397   \n2195 126.   42.3 \n2196 622   460   \n2197 150.  103.  \n2198 745   382   \n2199 110    89.1 \n2200  91.8  83.9 \n2201  67.1 146.  \n2202 122.  131.  \n2203 272   338   \n2204 290   269   \n2205 463   420   \n2206 609   427   \n2207 358   433   \n2208  91.8 161.  \n2209 320   349   \n2210 216   151   \n2211 643   439   \n2212 235   220   \n2213 482   473   \n2214 498   416   \n2215 105.  102.  \n2216 218   226   \n2217 216   207   \n2218 150.   38.4 \n2219 210   240   \n2220 150.  112.  \n2221 139.   38.4 \n2222 114.  150.  \n2223 127.   82.6 \n2224 392   454   \n2225 415   455   \n2226 380   448   \n2227 251   320   \n2228 707   405   \n2229 140   204   \n2230 691   415   \n2231 257   328   \n2232 289   336   \n2233 343   422   \n2234 490   428   \n2235 526   392   \n2236 130.   39.7 \n2237 142.    7.20\n2238 493   440   \n2239 216   148   \n2240 427   470   \n2241 318   403   \n2242  56.7 114.  \n2243 453   400   \n2244 264   311   \n2245 615   408   \n2246 302   338   \n2247 820   287   \n2248 598   394   \n2249 511   442   \n2250 590   474   \n2251 263   233   \n2252 161.   52.7 \n2253 210   145   \n2254 775   361   \n2255 317   305   \n2256 701   418   \n2257 762   351   \n2258 452   406   \n2259 265   324   \n2260 264   260   \n2261 799   303   \n2262 327   409   \n2263 176.   93   \n2264 181   223   \n2265 168.   77.4 \n2266 180.  180.  \n2267 336   321   \n2268 523   459   \n2269 293   329   \n2270 196   207   \n2271 193   145   \n2272 140.  106   \n2273 491   419   \n2274 390   444   \n2275 691   434   \n2276 334   353   \n2277 281   389   \n2278 400   452   \n2279 552   435   \n2280 260   372   \n2281 309   286   \n2282 419   400   \n2283 359   316   \n2284 110   124.  \n2285 163.   48.8 \n2286 248   262   \n2287 231   190   \n2288 166.   81.3 \n2289 180.   48.8 \n2290 221   176   \n2291 283   253   \n2292 266   388   \n2293 724   412   \n2294 167   177   \n2295 585   386   \n2296 149   140.  \n2297 613   389   \n2298 283   273   \n2299 425   438   \n2300 660   446   \n2301 221   188   \n2302 241   229   \n2303 220   213   \n2304  71   157.  \n2305 249   326   \n2306  94.4 138.  \n2307 324   389   \n2308 722   392   \n2309 352   310   \n2310 180.   47.5 \n2311 462   414   \n2312 227   236   \n2313 168   214   \n2314 111.   87.8 \n2315 144   183   \n2316 105.  103.  \n2317 153   193   \n2318 202   130   \n2319 110    34.5 \n2320 176   144   \n2321 564   412   \n2322 175    67   \n2323 150   176   \n2324 529   460   \n2325 657   415   \n2326 265   382   \n2327  95.7  65.7 \n2328 567   387   \n2329 251   207   \n2330 493   410   \n2331 300   416   \n2332 175    35.8 \n2333 214   249   \n2334 170.   20.2 \n2335 621   407   \n2336 166   175   \n2337 635   401   \n2338 105.  142.  \n2339 410   425   \n2340 434   407   \n2341  63.2 145   \n2342 325   406   \n2343 168   245   \n2344 283   402   \n2345  94.4  70.9 \n2346 140.   55.3 \n2347 365   392   \n2348 151   227   \n2349 130.   38.4 \n2350 740   388   \n2351 171.   74.8 \n2352 350   337   \n2353  95.7  64.4 \n2354 110   170.  \n2355 211   147   \n2356 183   145   \n2357 374   433   \n2358 377   427   \n2359 179   203   \n2360 185   242   \n2361 389   453   \n2362 300   338   \n2363 804   291   \n2364 362   328   \n2365 601   389   \n2366 711   415   \n2367 296   311   \n2368 235   245   \n2369 175    91.7 \n2370 115.   25.4 \n2371 105.  106   \n2372 128.   60.5 \n2373 602   404   \n2374 330   410   \n2375 756   359   \n2376 316   343   \n2377 154   217   \n2378 105.  114.  \n2379 219   232   \n2380 566   420   \n2381 152.   83.9 \n2382 592   446   \n2383 310   322   \n2384 537   386   \n2385 175   221   \n2386  93.1  41   \n2387 264   335   \n2388 470   409   \n2389 130.  168.  \n2390 270   325   \n2391 198   213   \n2392 166   245   \n2393 180.   50.1 \n2394 246   202   \n2395 576   477   \n2396 476   398   \n2397 667   449   \n2398 821   301   \n2399 370   373   \n2400 362   352   \n2401  82.7 140.  \n2402 807   330   \n2403 581   435   \n2404 139.   90.4 \n2405 239   208   \n2406 193   196   \n2407 105.   65.7 \n2408 295   307   \n2409 666   434   \n2410 803   295   \n2411 266   280   \n2412 295   339   \n2413 207   243   \n2414 265   338   \n2415 119.   74.8 \n2416 233   193   \n2417 161   155   \n2418 651   417   \n2419 502   479   \n2420 230   206   \n2421 603   427   \n2422 771   352   \n2423 367   356   \n2424 348   373   \n2425 219   172   \n2426 326   358   \n2427 800   301   \n2428 245   226   \n2429 735   404   \n2430 163   181   \n2431 811   323   \n2432 177   244   \n2433 163.   82.6 \n2434 148.   26.7 \n2435 420   386   \n2436 440   404   \n2437 641   441   \n2438 783   361   \n2439 205   237   \n2440 200   130   \n2441 723   405   \n2442 105.   44.9 \n2443 468   423   \n2444 191   151   \n2445  81.4  39.7 \n2446 434   432   \n2447 295   268   \n2448 242   262   \n2449 263   260   \n2450 252   274   \n2451 230   182   \n2452 806   289   \n2453 821   302   \n2454 639   454   \n2455 175    37.1 \n2456 369   328   \n2457 339   369   \n2458 137.   35.8 \n2459 163   240   \n2460 274   379   \n2461 285   405   \n2462 156.   94.3 \n2463 259   220   \n2464 796   334   \n2465 229   270   \n2466 537   440   \n2467 658   417   \n2468 381   425   \n2469 273   284   \n2470  74.9 155.  \n2471 463   440   \n2472 303   378   \n2473 231   240   \n2474 578   385   \n2475 579   386   \n2476 548   460   \n2477 115.   24.1 \n2478 534   429   \n2479 178.   64.4 \n2480 154   239   \n2481 107.   63.1 \n2482 725   390   \n2483 791   315   \n2484 429   471   \n2485  94.4 141.  \n2486 420   420   \n2487 360   371   \n2488 346   332   \n2489  77.5  56.6 \n2490 486   472   \n2491  52.8 119   \n2492 247   351   \n2493 176.   41   \n2494 742   399   \n2495  91.8 144.  \n2496 465   397   \n2497 321   387   \n2498 452   459   \n2499 354   307   \n2500 182   238   \n2501 623   394   \n2502 372   389   \n2503 597   393   \n2504 684   439   \n2505 789   330   \n2506 426   446   \n2507 159   204   \n2508 219   239   \n2509 491   410   \n2510 644   428   \n2511 120.   93   \n2512 649   407   \n2513 672   427   \n2514 113.   70.9 \n2515 172.  103.  \n2516  68.4 112.  \n2517 318   297   \n2518 569   412   \n2519 499   461   \n2520 790   344   \n2521 127.  133.  \n2522 451   452   \n2523 272   335   \n2524 743   398   \n2525 196   130   \n2526 752   364   \n2527 758   357   \n2528 145   199   \n2529 625   411   \n2530 137.   59.2 \n2531 180.   55.3 \n2532 107.  141.  \n2533 215   213   \n2534 570   376   \n2535 407   389   \n2536 343   316   \n2537 431   402   \n2538 566   454   \n2539 308   411   \n2540 162    35.8 \n2541 254   268   \n2542 283   370   \n2543 351   373   \n2544 719   400   \n2545 580   449   \n2546 443   470   \n2547 140   195   \n2548 607   390   \n2549 510   402   \n2550 423   412   \n2551 437   473   \n2552 411   400   \n2553 398   437   \n2554 172.   72.2 \n2555 653   420   \n2556 444   405   \n2557 452   460   \n2558 539   384   \n2559 810   324   \n2560 793   311   \n2561 171.   39.7 \n2562 440   392   \n2563 591   453   \n2564 220   166   \n2565 492   399   \n2566 160   144   \n2567 157   159   \n2568 136   159.  \n2569 233   273   \n2570 304   294   \n2571 775   368   \n2572 157   149   \n2573 212   154   \n2574 114.  141.  \n2575 145.   95.6 \n2576 261   373   \n2577 781   329   \n2578 466   397   \n2579 140.   57.9 \n2580 782   329   \n2581 154.  120.  \n2582 253   316"
  },
  {
    "objectID": "slides/30-visualize.html#summary-statistics-might-help-us",
    "href": "slides/30-visualize.html#summary-statistics-might-help-us",
    "title": "Data Visualization",
    "section": "Summary statistics might help us",
    "text": "Summary statistics might help us\nvar: x\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   50.2   167.2   288.0   346.0   499.8   822.0 \n\n\nvar: y\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    2.0   162.2   314.0   283.3   401.0   482.0 \n\n\ncorrelation between x, y\n\n\n[1] 0.7601536"
  },
  {
    "objectID": "slides/30-visualize.html#who-needs-your-dataviz",
    "href": "slides/30-visualize.html#who-needs-your-dataviz",
    "title": "Data Visualization",
    "section": "Who needs your dataviz?",
    "text": "Who needs your dataviz?\nYou generally visualize data for two types of people:\n\n\nYourself.\nOthers.\n\n\n\nWhen you make dataviz for yourself, your aim is explorative and your goal is to generate as many raw graphs as quickly as possible to gain insights on your data.\n\n\nWhen you make dataviz for others, your aim is communicative and you work to be as clear and as understandable as possible."
  },
  {
    "objectID": "slides/30-visualize.html#exercise",
    "href": "slides/30-visualize.html#exercise",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\nWith the penguin dataset:\n\nMake a histogram of the variable bill_length_mm. Repeat the same histogram, but use colors to differentiate species.\nMake a histogram of bill_depth_mm, but only for female penguins.\nMake a scatterplot of flipper_length_mm vs body_mass_g, use colors to differentiate species.\n\n\n\nGet help from ggplot2‚Äôs documentation.\n\nOn ggplot2‚Äôs book.\nOn R4DS book.\nOn ggplot2‚Äôs website."
  },
  {
    "objectID": "slides/30-visualize.html#a-grammar-of-graphics",
    "href": "slides/30-visualize.html#a-grammar-of-graphics",
    "title": "Data Visualization",
    "section": "A grammar of graphics",
    "text": "A grammar of graphics\n\n\n\n\nggplot2 is one of the main tools for declaring graphics in R.\nIt is based on the grammar of graphics.\nIt can be used both for explorative analysis and for publication ready graphs."
  },
  {
    "objectID": "slides/30-visualize.html#the-grammar-of-graphics",
    "href": "slides/30-visualize.html#the-grammar-of-graphics",
    "title": "Data Visualization",
    "section": "The grammar of graphics",
    "text": "The grammar of graphics\nThe grammar of graphics is a unifying framework to conceptualize and program datavisualization.\nIt states that most graphics are composed of:\n\nA default dataset and set of mappings from variables to aesthetics.\nOne or more layers, with each layer having one geometric object, one statistical transformation, one position adjustment, and optionally, one dataset and set of aesthetic mappings,\nOne scale for each aesthetic mapping used.\nA coordinate system.\nThe facet specification.\n\nHadley Wickham - A Layered Grammar of Graphics, 2010"
  },
  {
    "objectID": "slides/30-visualize.html#lets-put-it-in-practice",
    "href": "slides/30-visualize.html#lets-put-it-in-practice",
    "title": "Data Visualization",
    "section": "Let‚Äôs put it in practice",
    "text": "Let‚Äôs put it in practice\nWe take dataset (penguins) and decide that we want to map a set of variables to aesthetics specification‚Ä¶\n\n\nVariables\n\nbill_length_mm\nbill_depth_mm\nisland\nsex\n\n\nAesthetics\n\nx\ny\ncolour\nshape"
  },
  {
    "objectID": "slides/30-visualize.html#lets-put-it-in-practice-1",
    "href": "slides/30-visualize.html#lets-put-it-in-practice-1",
    "title": "Data Visualization",
    "section": "Let‚Äôs put it in practice",
    "text": "Let‚Äôs put it in practice\n\n\n\n\nflowchart LR\n  bill_length_mm --> x\n  bill_depth_mm --> y\n  island --> colour\n  sex --> shape\n  subgraph Variable\n  bill_length_mm\n  bill_depth_mm\n  island\n  sex\n  end\n  subgraph aesthetics\n  x\n  y\n  colour\n  shape\n  end"
  },
  {
    "objectID": "slides/30-visualize.html#section-6",
    "href": "slides/30-visualize.html#section-6",
    "title": "Data Visualization",
    "section": "",
    "text": "A default dataset‚Ä¶\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot()"
  },
  {
    "objectID": "slides/30-visualize.html#section-7",
    "href": "slides/30-visualize.html#section-7",
    "title": "Data Visualization",
    "section": "",
    "text": "A default dataset and set of mappings from variables to aesthetics.\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n    )"
  },
  {
    "objectID": "slides/30-visualize.html#section-8",
    "href": "slides/30-visualize.html#section-8",
    "title": "Data Visualization",
    "section": "",
    "text": "One or more layers, with each layer having one geometric object‚Ä¶\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point()"
  },
  {
    "objectID": "slides/30-visualize.html#section-9",
    "href": "slides/30-visualize.html#section-9",
    "title": "Data Visualization",
    "section": "",
    "text": "‚Ä¶and a statistical transformation.\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth()"
  },
  {
    "objectID": "slides/30-visualize.html#section-10",
    "href": "slides/30-visualize.html#section-10",
    "title": "Data Visualization",
    "section": "",
    "text": "‚Ä¶and a statistical transformation.\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth(method = 'lm')"
  },
  {
    "objectID": "slides/30-visualize.html#section-11",
    "href": "slides/30-visualize.html#section-11",
    "title": "Data Visualization",
    "section": "",
    "text": "The facet specification.\n\n\n\np <- \n  penguins %>%\n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth(method = 'lm') +\n  facet_wrap(facets = 'sex',\n             ncol = 1)"
  },
  {
    "objectID": "slides/30-visualize.html#section-12",
    "href": "slides/30-visualize.html#section-12",
    "title": "Data Visualization",
    "section": "",
    "text": "We can also modify the coordinate system, if needed.\n\n\n\np <- \n  penguins %>%\n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth(method = 'lm') +\n  facet_wrap(facets = 'sex',\n             ncol = 1) +\n  scale_y_log10()"
  },
  {
    "objectID": "slides/30-visualize.html#exercise-1",
    "href": "slides/30-visualize.html#exercise-1",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\nTake the penguins dataset; make a bar chart that counts how many penguins have been recorded for each species.\n\nwhich variable are you mapping to each aesthetic specification?\nWhich geometric object are you using?\nAre you using a statistical transformation?"
  },
  {
    "objectID": "slides/30-visualize.html#graphical-exploration",
    "href": "slides/30-visualize.html#graphical-exploration",
    "title": "Data Visualization",
    "section": "Graphical exploration",
    "text": "Graphical exploration\nYou can use graphics to learn what‚Äôs inside our data.\n\nFirst, asking questions about data then, plotting them with different visual models to highlight and learn about data patterns, we can go through these two steps iteratively (plot, rinse and repeat)."
  },
  {
    "objectID": "slides/30-visualize.html#visual-models",
    "href": "slides/30-visualize.html#visual-models",
    "title": "Data Visualization",
    "section": "Visual models",
    "text": "Visual models\nA visual model is a specific type of graph, designed for a specific purpose.\n\nggplot provides many basic visual models in its set of geom_* functions.\n\nNiche and advanced visual models can be found in its ecosystem of extensions."
  },
  {
    "objectID": "slides/30-visualize.html#visual-models-1",
    "href": "slides/30-visualize.html#visual-models-1",
    "title": "Data Visualization",
    "section": "Visual models",
    "text": "Visual models\nExamples of visual models used in exploratory data analysis are:\n\n\none variable\n\nbarplots.\nhistograms.\nboxplots.\n\n\ntwo variables\n\nscatterplots.\nheatmaps.\n\n\n\nDon‚Äôt feel limited to these visual models, we learn to program because we want flexibility."
  },
  {
    "objectID": "slides/30-visualize.html#histograms",
    "href": "slides/30-visualize.html#histograms",
    "title": "Data Visualization",
    "section": "Histograms",
    "text": "Histograms\n\npenguins %>% ggplot(aes(x = flipper_length_mm, fill = species)) + geom_histogram()"
  },
  {
    "objectID": "slides/30-visualize.html#histograms-1",
    "href": "slides/30-visualize.html#histograms-1",
    "title": "Data Visualization",
    "section": "Histograms",
    "text": "Histograms\n\npenguins %>% ggplot(aes(x = flipper_length_mm, fill = species)) + geom_histogram()"
  },
  {
    "objectID": "slides/30-visualize.html#boxplots",
    "href": "slides/30-visualize.html#boxplots",
    "title": "Data Visualization",
    "section": "Boxplots",
    "text": "Boxplots\n\n\nRobust summary statistics displayed (median, IQR, outliers).\n\n\n\n\n\nImage source: Wikipedia"
  },
  {
    "objectID": "slides/30-visualize.html#boxplots-1",
    "href": "slides/30-visualize.html#boxplots-1",
    "title": "Data Visualization",
    "section": "Boxplots",
    "text": "Boxplots\n\npenguins %>%\n  ggplot(aes(x = species, y = flipper_length_mm, fill = sex)) + geom_boxplot()"
  },
  {
    "objectID": "slides/30-visualize.html#scatterplots",
    "href": "slides/30-visualize.html#scatterplots",
    "title": "Data Visualization",
    "section": "Scatterplots",
    "text": "Scatterplots\n\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, y= body_mass_g, colour = species)) + geom_point()"
  },
  {
    "objectID": "slides/30-visualize.html#heatmaps-1",
    "href": "slides/30-visualize.html#heatmaps-1",
    "title": "Data Visualization",
    "section": "Heatmaps",
    "text": "Heatmaps"
  },
  {
    "objectID": "slides/30-visualize.html#heatmaps-2",
    "href": "slides/30-visualize.html#heatmaps-2",
    "title": "Data Visualization",
    "section": "Heatmaps",
    "text": "Heatmaps\n\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, body_mass_g)) +\n  geom_hex(bins = c(20, 20*0.010)) +\n  scale_fill_gradient(low = 'grey70', high = 'blue')"
  },
  {
    "objectID": "slides/30-visualize.html#exercise-2",
    "href": "slides/30-visualize.html#exercise-2",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\nMake a histogram of the continuous variables in the penguins dataset but compute the bin statistics before making the plot.\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "slides/40-get.html#dataframes-are-rectangular-datasets",
    "href": "slides/40-get.html#dataframes-are-rectangular-datasets",
    "title": "Get Data into R",
    "section": "Dataframes are rectangular datasets",
    "text": "Dataframes are rectangular datasets\nMore often than not when we speak about datasets, we speak about rectangular data, i.e., data in two-dimensional table, made of values organized in rows and columns.\n\n\nEach cell stores a value.\nEach value belongs to one column and one row.\n\n\n\nRectnagular data are the easiest to use, when we get data that are not rectangular, we try to reshape them in that form."
  },
  {
    "objectID": "slides/40-get.html#readr",
    "href": "slides/40-get.html#readr",
    "title": "Get Data into R",
    "section": "Readr",
    "text": "Readr\n\n\n\n\nReadr is a package that loads (reads) Rectangular Text data in R.\nIt‚Äôs fast, it guesses column types explicitly and it‚Äôs pipe friendly\nYou can use it to read both local data and online data from a URL.\nFor example we can use it to read data in CSV and TSV formats and many more."
  },
  {
    "objectID": "slides/40-get.html#read-the-palmer-pengunis-dataset",
    "href": "slides/40-get.html#read-the-palmer-pengunis-dataset",
    "title": "Get Data into R",
    "section": "Read the Palmer Pengunis dataset",
    "text": "Read the Palmer Pengunis dataset\nWe can use again on the Palmer Penguins Dataset\nThe source code of this package, is on github; we can find the tidy CSV data in the inst/exdata folder.\n\n\npenguin_csv_url <- 'https://raw.githubusercontent.com/allisonhorst/palmerpenguins/main/inst/extdata/penguins.csv'\n \nread_csv(penguin_csv_url)\n\nRows: 344 Columns: 8\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (5): bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, year\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 344 √ó 8\n   species island    bill_length_mm bill_depth_mm flipper_‚Ä¶¬π body_‚Ä¶¬≤ sex    year\n   <chr>   <chr>              <dbl>         <dbl>      <dbl>   <dbl> <chr> <dbl>\n 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007\n 2 Adelie  Torgersen           39.5          17.4        186    3800 fema‚Ä¶  2007\n 3 Adelie  Torgersen           40.3          18          195    3250 fema‚Ä¶  2007\n 4 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 5 Adelie  Torgersen           36.7          19.3        193    3450 fema‚Ä¶  2007\n 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007\n 7 Adelie  Torgersen           38.9          17.8        181    3625 fema‚Ä¶  2007\n 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007\n 9 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n10 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n# ‚Ä¶ with 334 more rows, and abbreviated variable names ¬π‚Äãflipper_length_mm,\n#   ¬≤‚Äãbody_mass_g\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/40-get.html#section",
    "href": "slides/40-get.html#section",
    "title": "Get Data into R",
    "section": "",
    "text": "The tibble that we have loaded and generate d from CSV is not identical to the one that comes already loaded with the palmerpenguins package:\n\npenguins_from_csv <- \n  penguin_csv_url %>% \n  read_csv()\n\nidentical(\n  penguins_from_csv,\n  palmerpenguins::penguins\n)\n\n[1] FALSE\n\n\nLet‚Äôs compare them side by side\n\n\n\npalmerpenguins::penguins %>% \n  glimpse(width = 40)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adel‚Ä¶\n$ island            <fct> Torgersen, T‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, ‚Ä¶\n$ flipper_length_mm <int> 181, 186, 19‚Ä¶\n$ body_mass_g       <int> 3750, 3800, ‚Ä¶\n$ sex               <fct> male, female‚Ä¶\n$ year              <int> 2007, 2007, ‚Ä¶\n\n\n\n\npenguins_from_csv %>% \n  glimpse(width = 40)\n\nRows: 344\nColumns: 8\n$ species           <chr> \"Adelie\", \"A‚Ä¶\n$ island            <chr> \"Torgersen\",‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, ‚Ä¶\n$ flipper_length_mm <dbl> 181, 186, 19‚Ä¶\n$ body_mass_g       <dbl> 3750, 3800, ‚Ä¶\n$ sex               <chr> \"male\", \"fem‚Ä¶\n$ year              <dbl> 2007, 2007, ‚Ä¶\n\n\n\n\nCan you spot that column types are different?"
  },
  {
    "objectID": "slides/40-get.html#parsing",
    "href": "slides/40-get.html#parsing",
    "title": "Get Data into R",
    "section": "Parsing",
    "text": "Parsing\nWhen we read data from text encoded ‚Äúdelimited‚Äù files, such as CSV, we use function that parse the file.\nWhen we parse something, we formalize its structure applying a set of grammatical rules.\nNo parsing rule is perfect, thus we must often review the results and ‚Äúfix‚Äù parsing ‚Äúmistakes‚Äù.\n\n# specify column types manually\n\npenguins_from_csv <-\n  penguin_csv_url %>% \n  read_csv(\n    col_types = cols(\n      species = col_factor(),\n      island = col_factor(),\n      flipper_length_mm = col_integer(),\n      body_mass_g = col_integer(),\n      sex = col_factor(),\n      year = col_integer()\n    )\n  )\n\npenguins_from_csv %>% glimpse()\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n$ sex               <fct> male, female, female, NA, female, male, female, male‚Ä¶\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶"
  },
  {
    "objectID": "slides/40-get.html#exercise",
    "href": "slides/40-get.html#exercise",
    "title": "Get Data into R",
    "section": "Exercise",
    "text": "Exercise\nFind the source code of the readr package.\nIn the inst/extdata folder you can find 10 datasets that display different challenges that you might enconter when you have to load data from an external file.\nLoad in R at least 3 of those datasets using functions from readr.\nGet help from readr‚Äôs documentation and the data import chapter of r4ds.\nWhich function did you use? Did you encounter any parsing failure? How did you fix it?"
  },
  {
    "objectID": "slides/40-get.html#read-a-dataset-from-pangaea",
    "href": "slides/40-get.html#read-a-dataset-from-pangaea",
    "title": "Get Data into R",
    "section": "Read a dataset from PANGAEA",
    "text": "Read a dataset from PANGAEA\nPANGAEA, a Data repository for the evironmental sciences.\nFor our exercise we will use this dataset from Wu et al:\n\n\n‚ÄúEffect of barite-bound Sr on detrital Sr isotope systematics in marine sediments with pertinent Mediterranean examples‚Äù.\n\n\nhttps://doi.pangaea.de/10.1594/PANGAEA.946258"
  },
  {
    "objectID": "slides/40-get.html#section-1",
    "href": "slides/40-get.html#section-1",
    "title": "Get Data into R",
    "section": "",
    "text": "pangaea_filename <- 'Dataset_S2_HCl-leaching.tab'\n\npangaea_path <- here('data-int/Wu-etal_2022/datasets', pangaea_filename)\n\nLet‚Äôs try to read the data file Dataset_S2_HCl-leaching.tab.\nIt‚Äôs a .tab file.\n\npangaea_data <- \n  pangaea_path %>% \n  read_delim()\n\nWarning: One or more parsing issues, see `problems()` for details\n\n\nRows: 177 Columns: 3\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \" \"\nchr (3): /*, DATA, DESCRIPTION:\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "slides/40-get.html#section-2",
    "href": "slides/40-get.html#section-2",
    "title": "Get Data into R",
    "section": "",
    "text": "If we call problems() readr tells us what went wrong.\n\npangaea_data\n\n# A tibble: 177 √ó 3\n   `/*`                   DATA           `DESCRIPTION:`                         \n   <chr>                  <chr>          <chr>                                  \n 1 \"Citation:\\tWu,\"       \"Jiawang;\"     \"Liu, Zhifei; Michard, Annie; Tachikaw‚Ä¶\n 2 \"\\tIn:\"                \"Wu,\"          \"J et al. (2022): Effect of barite-bou‚Ä¶\n 3 \"Keyword(s):\\tBarite;\" \"Barium\"       \"(Ba); marine sediments; Mediterranean‚Ä¶\n 4 \"Related\"              \"to:\\tWu,\"     \"Jiawang; Liu, Zhifei; Michard, Annie;‚Ä¶\n 5 \"Funding:\\tChina\"      \"Postdoctoral\" \"Science Foundation (URI: http://res.c‚Ä¶\n 6 \"\\tChina\"              \"Postdoctoral\" \"Science Foundation (URI: http://res.c‚Ä¶\n 7 \"\\tEuropean\"           \"Commission\"   \"(EC), grant/award no. MAS2-CT93-0051:‚Ä¶\n 8 \"\\tEuropean\"           \"Commission\"   \"(EC), grant/award no. MAS3 CT97-0137:‚Ä¶\n 9 \"\\tEuropean\"           \"Commission\"   \"(EC), grant/award no. MAST1-90022C: E‚Ä¶\n10 \"\\tNational\"           \"Natural\"      \"Science Foundation of China (NSFC) (U‚Ä¶\n# ‚Ä¶ with 167 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/40-get.html#section-3",
    "href": "slides/40-get.html#section-3",
    "title": "Get Data into R",
    "section": "",
    "text": "We can use the arguments:\n\n\ndelim = '\\t' to tell read_delim() that we are reading a file delimited by tabulature (\\t).\nskip = 49 to tell it that the first 49 rows must be skipped.\n\n\n\npangaea_data <- \n  pangaea_path %>% \n  read_delim(delim = '\\t',\n             skip = 49)"
  },
  {
    "objectID": "slides/40-get.html#section-4",
    "href": "slides/40-get.html#section-4",
    "title": "Get Data into R",
    "section": "",
    "text": "Now the data that we‚Äôve imported into R looks fine.\n\npangaea_data %>% glimpse()\n\nRows: 128\nColumns: 19\n$ Event                      <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL‚Ä¶\n$ Latitude                   <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617‚Ä¶\n$ Longitude                  <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117‚Ä¶\n$ `Elevation [m]`            <dbl> -339, -339, -339, -339, -339, -339, -339, -‚Ä¶\n$ `Sample label (barite-Sr)` <chr> \"SL73-1\", \"SL73-2\", \"SL73-3\", \"SL73-4\", \"SL‚Ä¶\n$ `Samp type`                <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"S1b\", \"S1b\",‚Ä¶\n$ `Depth [m]`                <dbl> 0.0045, 0.0465, 0.0665, 0.1215, 0.1765, 0.1‚Ä¶\n$ `Age [ka BP]`              <dbl> 1.66, 3.13, 4.13, 5.75, 7.30, 7.78, 8.65, 9‚Ä¶\n$ `CaCO3 [%]`                <dbl> 61.5, 55.1, 53.0, 43.4, 41.8, 42.3, 42.6, 3‚Ä¶\n$ `Ba [¬µg/g] (Leachate)`     <dbl> 72.6, 64.3, 37.4, 63.5, 101.0, 141.0, 75.2,‚Ä¶\n$ `Sr [¬µg/g] (Leachate)`     <dbl> 767, 681, 690, 552, 527, 528, 551, 482, 391‚Ä¶\n$ `Ca [¬µg/g] (Leachate)`     <dbl> 188951.9, 163260.4, 162188.7, 125937.6, 124‚Ä¶\n$ `Al [¬µg/g] (Leachate)`     <dbl> 10612.7, 11428.4, 5463.0, 3261.5, 2121.7, 1‚Ä¶\n$ `Fe [¬µg/g] (Leachate)`     <dbl> 5935.0, 6814.3, 2465.7, 3936.8, 189.6, 7711‚Ä¶\n$ `Ba [¬µg/g] (Residue)`      <dbl> 171.0, 198.0, 251.0, 290.0, 315.0, 259.0, 3‚Ä¶\n$ `Sr [¬µg/g] (Residue)`      <dbl> 66.6, 71.3, 90.3, 99.8, 106.0, 90.7, 108.0,‚Ä¶\n$ `Ca [¬µg/g] (Residue)`      <dbl> 2315.5, 2369.6, 3007.7, 3447.9, 3713.2, 331‚Ä¶\n$ `Al [¬µg/g] (Residue)`      <dbl> 29262.5, 35561.4, 45862.4, 52485.6, 55083.0‚Ä¶\n$ `Fe [¬µg/g] (Residue)`      <dbl> 14834.8, 18301.4, 24534.5, 30745.3, 28532.2‚Ä¶"
  },
  {
    "objectID": "slides/40-get.html#section-5",
    "href": "slides/40-get.html#section-5",
    "title": "Get Data into R",
    "section": "",
    "text": "Now the data that we‚Äôve imported into R looks fine.\n\npangaea_data %>% skimr::skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n128\n\n\nNumber of columns\n19\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n16\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nEvent\n0\n1\n5\n7\n0\n11\n0\n\n\nSample label (barite-Sr)\n0\n1\n5\n7\n0\n128\n0\n\n\nSamp type\n0\n1\n3\n6\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nLatitude\n0\n1\n35.32\n2.24\n33.38\n33.67\n34.55\n35.29\n39.66\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÉ\n\n\nLongitude\n0\n1\n22.79\n8.17\n4.51\n17.86\n24.51\n28.61\n32.67\n‚ñÇ‚ñÅ‚ñÜ‚ñÜ‚ñá\n\n\nElevation [m]\n0\n1\n-1807.65\n829.55\n-3390.00\n-2373.00\n-1587.00\n-1375.00\n-339.00\n‚ñÇ‚ñá‚ñÅ‚ñÖ‚ñÖ\n\n\nDepth [m]\n0\n1\n0.30\n0.25\n0.00\n0.17\n0.26\n0.34\n1.40\n‚ñá‚ñÖ‚ñÅ‚ñÅ‚ñÅ\n\n\nAge [ka BP]\n0\n1\n7.88\n3.49\n0.30\n5.83\n7.86\n9.82\n19.61\n‚ñÉ‚ñá‚ñá‚ñÇ‚ñÅ\n\n\nCaCO3 [%]\n0\n1\n57.94\n8.29\n33.70\n52.58\n57.80\n64.45\n74.60\n‚ñÅ‚ñÉ‚ñá‚ñá‚ñÖ\n\n\nBa [¬µg/g] (Leachate)\n0\n1\n216.49\n223.26\n0.00\n37.15\n122.00\n398.75\n954.00\n‚ñá‚ñÇ‚ñÇ‚ñÅ‚ñÅ\n\n\nSr [¬µg/g] (Leachate)\n0\n1\n784.98\n207.08\n341.00\n635.15\n767.50\n886.25\n1419.00\n‚ñÉ‚ñá‚ñá‚ñÇ‚ñÅ\n\n\nCa [¬µg/g] (Leachate)\n0\n1\n179277.91\n34034.64\n82460.20\n158421.22\n182153.85\n204214.33\n240253.00\n‚ñÅ‚ñÉ‚ñÜ‚ñá‚ñÖ\n\n\nAl [¬µg/g] (Leachate)\n0\n1\n9075.10\n3739.72\n122.20\n6036.95\n9034.50\n11691.80\n21011.90\n‚ñÇ‚ñá‚ñá‚ñÖ‚ñÅ\n\n\nFe [¬µg/g] (Leachate)\n0\n1\n7673.07\n4235.50\n189.60\n4937.08\n6918.25\n9513.88\n21428.70\n‚ñÉ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nBa [¬µg/g] (Residue)\n0\n1\n184.58\n109.97\n54.80\n98.30\n142.00\n251.00\n507.00\n‚ñá‚ñÉ‚ñÇ‚ñÅ‚ñÅ\n\n\nSr [¬µg/g] (Residue)\n0\n1\n46.15\n17.69\n20.50\n33.53\n41.10\n51.85\n120.00\n‚ñá‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\nCa [¬µg/g] (Residue)\n0\n1\n1316.60\n930.42\n475.50\n825.50\n1057.45\n1446.40\n8343.50\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\nAl [¬µg/g] (Residue)\n0\n1\n36668.75\n8937.30\n19227.20\n29424.80\n37297.75\n43806.80\n60033.10\n‚ñÜ‚ñá‚ñá‚ñÜ‚ñÅ\n\n\nFe [¬µg/g] (Residue)\n0\n1\n21446.97\n6866.21\n10823.30\n16197.70\n20393.90\n24408.27\n48057.60\n‚ñá‚ñá‚ñÉ‚ñÅ‚ñÅ"
  },
  {
    "objectID": "slides/40-get.html#always-check-for-missing-values",
    "href": "slides/40-get.html#always-check-for-missing-values",
    "title": "Get Data into R",
    "section": "Always check for missing values",
    "text": "Always check for missing values\nskimr::skim() shows you how many values are missing in your dataset:\n\n\nHow many missing value are there?\nWhere do they occur?"
  },
  {
    "objectID": "slides/40-get.html#section-6",
    "href": "slides/40-get.html#section-6",
    "title": "Get Data into R",
    "section": "",
    "text": "A more formal way to check for missing values.\n\npangaea_data %>% \n  summarise(\n    across(\n      .fns = ~is.na(.) %>% sum()\n    )\n  ) %>% \n  glimpse()\n\nRows: 1\nColumns: 19\n$ Event                      <int> 0\n$ Latitude                   <int> 0\n$ Longitude                  <int> 0\n$ `Elevation [m]`            <int> 0\n$ `Sample label (barite-Sr)` <int> 0\n$ `Samp type`                <int> 0\n$ `Depth [m]`                <int> 0\n$ `Age [ka BP]`              <int> 0\n$ `CaCO3 [%]`                <int> 0\n$ `Ba [¬µg/g] (Leachate)`     <int> 0\n$ `Sr [¬µg/g] (Leachate)`     <int> 0\n$ `Ca [¬µg/g] (Leachate)`     <int> 0\n$ `Al [¬µg/g] (Leachate)`     <int> 0\n$ `Fe [¬µg/g] (Leachate)`     <int> 0\n$ `Ba [¬µg/g] (Residue)`      <int> 0\n$ `Sr [¬µg/g] (Residue)`      <int> 0\n$ `Ca [¬µg/g] (Residue)`      <int> 0\n$ `Al [¬µg/g] (Residue)`      <int> 0\n$ `Fe [¬µg/g] (Residue)`      <int> 0"
  },
  {
    "objectID": "slides/40-get.html#quick-checklist-when-you-read-new-data-into-r",
    "href": "slides/40-get.html#quick-checklist-when-you-read-new-data-into-r",
    "title": "Get Data into R",
    "section": "Quick checklist when you read new data into R",
    "text": "Quick checklist when you read new data into R\n\n\nCheck for missing values.\nCheck the column types, are they what you expect?\nCheck the row number and the column names.\nOptional, check the head() and the tail() of the file.\n\n\nNow let‚Äôs tidy the data."
  },
  {
    "objectID": "slides/40-get.html#exercise-1",
    "href": "slides/40-get.html#exercise-1",
    "title": "Get Data into R",
    "section": "Exercise",
    "text": "Exercise\nTidytuesday is a weekly data project aimed at learning, collaborating and networking the R ecosystem.\nFind this week‚Äôs dataset and read it in R. Run the checklist from the previous slide on the data that you‚Äôve read.\nIf you are donw early, proceed reading data from the previous week or find a colleague to help.\nCheck Tidytuesday submissions on Twitter with the hashtag #TidyTuesday\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "slides/50-clean.html#which-dataset-is-tidy",
    "href": "slides/50-clean.html#which-dataset-is-tidy",
    "title": "Clean and Tidy Data",
    "section": "Which Dataset is Tidy?",
    "text": "Which Dataset is Tidy?\nA common practical way to structure (empirical) data.\n\n\nEvery column is a variable.\nEvery row is an observation.\nEvery cell is a single value.\n(Every observational unit is in its own table).\n\n\nPlus: fixed variables should come first, followed by measured variables.\nReference: An Introduction to Tidy Data"
  },
  {
    "objectID": "slides/50-clean.html#which-dataset-is-tidy-1",
    "href": "slides/50-clean.html#which-dataset-is-tidy-1",
    "title": "Clean and Tidy Data",
    "section": "Which Dataset is Tidy?",
    "text": "Which Dataset is Tidy?\n\nSource: R4DS - Tidy Data"
  },
  {
    "objectID": "slides/50-clean.html#section",
    "href": "slides/50-clean.html#section",
    "title": "Clean and Tidy Data",
    "section": "",
    "text": "Joey\n\n\nMonica\n\n\nRachel\n\n\nPhoebe\n\n\nRoss\n\n\nChandler\n\n\nTribbiani\n\n\nGeller\n\n\nGreen\n\n\nBuffay\n\n\nGeller\n\n\nBing\n\n\n27\n\n\n24\n\n\n23\n\n\n27\n\n\n26\n\n\n26"
  },
  {
    "objectID": "slides/50-clean.html#semantics-of-tidy-data",
    "href": "slides/50-clean.html#semantics-of-tidy-data",
    "title": "Clean and Tidy Data",
    "section": "Semantics of (tidy) Data",
    "text": "Semantics of (tidy) Data\nAlways quoting the Tidy Data article:\n\nA dataset is a collection of values.\nEvery value belongs to a variable and an observation.\nA variable contains all values that measure the same underlying attribute (like height, temperature, duration) across units.\nAn observation contains all values measured on the same unit (like a person, or a day, or a race) across attributes"
  },
  {
    "objectID": "slides/50-clean.html#tools-tidy-data-with-tidyr",
    "href": "slides/50-clean.html#tools-tidy-data-with-tidyr",
    "title": "Clean and Tidy Data",
    "section": "Tools: Tidy data with Tidyr",
    "text": "Tools: Tidy data with Tidyr\n\n\n\n\nTidyr provides functions for:\n\nPivoting data.\nRectangling data.\nNesting data.\nCombining and splitting columns.\nMake missing values explicit."
  },
  {
    "objectID": "slides/50-clean.html#pangea-data",
    "href": "slides/50-clean.html#pangea-data",
    "title": "Clean and Tidy Data",
    "section": "Pangea Data",
    "text": "Pangea Data\nRemember the dataset from Pangaea?\n\npangaea_filename <- 'Dataset_S2_HCl-leaching.tab'\n\npangaea_path <- here('data-int/Wu-etal_2022/datasets', pangaea_filename)\n\npangaea_data <- \n  pangaea_path %>% \n  read_delim(delim = '\\t',\n             skip = 49)\n\n\npangaea_data %>% \n  glimpse()\n\nRows: 128\nColumns: 19\n$ Event                      <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL‚Ä¶\n$ Latitude                   <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617‚Ä¶\n$ Longitude                  <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117‚Ä¶\n$ `Elevation [m]`            <dbl> -339, -339, -339, -339, -339, -339, -339, -‚Ä¶\n$ `Sample label (barite-Sr)` <chr> \"SL73-1\", \"SL73-2\", \"SL73-3\", \"SL73-4\", \"SL‚Ä¶\n$ `Samp type`                <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"S1b\", \"S1b\",‚Ä¶\n$ `Depth [m]`                <dbl> 0.0045, 0.0465, 0.0665, 0.1215, 0.1765, 0.1‚Ä¶\n$ `Age [ka BP]`              <dbl> 1.66, 3.13, 4.13, 5.75, 7.30, 7.78, 8.65, 9‚Ä¶\n$ `CaCO3 [%]`                <dbl> 61.5, 55.1, 53.0, 43.4, 41.8, 42.3, 42.6, 3‚Ä¶\n$ `Ba [¬µg/g] (Leachate)`     <dbl> 72.6, 64.3, 37.4, 63.5, 101.0, 141.0, 75.2,‚Ä¶\n$ `Sr [¬µg/g] (Leachate)`     <dbl> 767, 681, 690, 552, 527, 528, 551, 482, 391‚Ä¶\n$ `Ca [¬µg/g] (Leachate)`     <dbl> 188951.9, 163260.4, 162188.7, 125937.6, 124‚Ä¶\n$ `Al [¬µg/g] (Leachate)`     <dbl> 10612.7, 11428.4, 5463.0, 3261.5, 2121.7, 1‚Ä¶\n$ `Fe [¬µg/g] (Leachate)`     <dbl> 5935.0, 6814.3, 2465.7, 3936.8, 189.6, 7711‚Ä¶\n$ `Ba [¬µg/g] (Residue)`      <dbl> 171.0, 198.0, 251.0, 290.0, 315.0, 259.0, 3‚Ä¶\n$ `Sr [¬µg/g] (Residue)`      <dbl> 66.6, 71.3, 90.3, 99.8, 106.0, 90.7, 108.0,‚Ä¶\n$ `Ca [¬µg/g] (Residue)`      <dbl> 2315.5, 2369.6, 3007.7, 3447.9, 3713.2, 331‚Ä¶\n$ `Al [¬µg/g] (Residue)`      <dbl> 29262.5, 35561.4, 45862.4, 52485.6, 55083.0‚Ä¶\n$ `Fe [¬µg/g] (Residue)`      <dbl> 14834.8, 18301.4, 24534.5, 30745.3, 28532.2‚Ä¶"
  },
  {
    "objectID": "slides/50-clean.html#clean-the-column-names-with-janitor",
    "href": "slides/50-clean.html#clean-the-column-names-with-janitor",
    "title": "Clean and Tidy Data",
    "section": "Clean the column names with Janitor",
    "text": "Clean the column names with Janitor\nwe can remove capitalization, spaces, and strange characters from the column names with the function clean_names() from the Janitor Package.\n\npangaea_data <- \n  pangaea_data %>% \n  janitor::clean_names()\n\npangaea_data %>%\n  glimpse()\n\nRows: 128\nColumns: 19\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-2\", \"SL73-3\", \"SL73-4\", \"SL73-5‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"S1b\", \"S1b\", \"S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0465, 0.0665, 0.1215, 0.1765, 0.1915,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 3.13, 4.13, 5.75, 7.30, 7.78, 8.65, 9.94,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 55.1, 53.0, 43.4, 41.8, 42.3, 42.6, 39.1,‚Ä¶\n$ ba_mg_g_leachate       <dbl> 72.6, 64.3, 37.4, 63.5, 101.0, 141.0, 75.2, 99.‚Ä¶\n$ sr_mg_g_leachate       <dbl> 767, 681, 690, 552, 527, 528, 551, 482, 391, 70‚Ä¶\n$ ca_mg_g_leachate       <dbl> 188951.9, 163260.4, 162188.7, 125937.6, 124733.‚Ä¶\n$ al_mg_g_leachate       <dbl> 10612.7, 11428.4, 5463.0, 3261.5, 2121.7, 12740‚Ä¶\n$ fe_mg_g_leachate       <dbl> 5935.0, 6814.3, 2465.7, 3936.8, 189.6, 7711.3, ‚Ä¶\n$ ba_mg_g_residue        <dbl> 171.0, 198.0, 251.0, 290.0, 315.0, 259.0, 310.0‚Ä¶\n$ sr_mg_g_residue        <dbl> 66.6, 71.3, 90.3, 99.8, 106.0, 90.7, 108.0, 96.‚Ä¶\n$ ca_mg_g_residue        <dbl> 2315.5, 2369.6, 3007.7, 3447.9, 3713.2, 3316.7,‚Ä¶\n$ al_mg_g_residue        <dbl> 29262.5, 35561.4, 45862.4, 52485.6, 55083.0, 44‚Ä¶\n$ fe_mg_g_residue        <dbl> 14834.8, 18301.4, 24534.5, 30745.3, 28532.2, 22‚Ä¶\n\n\nWatch out: Janitor transforms ¬µ into m (so micrograms become milligrams)."
  },
  {
    "objectID": "slides/50-clean.html#place-fixed-variables-in-the-first-columns",
    "href": "slides/50-clean.html#place-fixed-variables-in-the-first-columns",
    "title": "Clean and Tidy Data",
    "section": "Place fixed variables in the first columns",
    "text": "Place fixed variables in the first columns\nWhich column is a fixed variable?\nI‚Äôm not sure if ca_co3_percent is a measured variable, and if it belongs to another informational unit.\nBesides that, the fixed variables are already in front."
  },
  {
    "objectID": "slides/50-clean.html#there-are-values-stored-in-the-column-names",
    "href": "slides/50-clean.html#there-are-values-stored-in-the-column-names",
    "title": "Clean and Tidy Data",
    "section": "There are values stored in the column names",
    "text": "There are values stored in the column names\nLet‚Äôs pivot the measured variables.\n\npangaea_long <- \n  pangaea_data %>% \n  pivot_longer(\n    cols = contains(match = c('leachate', 'residue')),\n    values_to = 'concentration',\n    names_to = 'element'\n  )\n\npangaea_long\n\n# A tibble: 1,280 √ó 11\n   event latit‚Ä¶¬π longi‚Ä¶¬≤ eleva‚Ä¶¬≥ sampl‚Ä¶‚Å¥ samp_‚Ä¶‚Åµ depth_m age_k‚Ä¶‚Å∂ ca_co‚Ä¶‚Å∑ element\n   <chr>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba_mg_‚Ä¶\n 2 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr_mg_‚Ä¶\n 3 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca_mg_‚Ä¶\n 4 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al_mg_‚Ä¶\n 5 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe_mg_‚Ä¶\n 6 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba_mg_‚Ä¶\n 7 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr_mg_‚Ä¶\n 8 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca_mg_‚Ä¶\n 9 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al_mg_‚Ä¶\n10 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe_mg_‚Ä¶\n# ‚Ä¶ with 1,270 more rows, 1 more variable: concentration <dbl>, and abbreviated\n#   variable names ¬π‚Äãlatitude, ¬≤‚Äãlongitude, ¬≥‚Äãelevation_m,\n#   ‚Å¥‚Äãsample_label_barite_sr, ‚Åµ‚Äãsamp_type, ‚Å∂‚Äãage_ka_bp, ‚Å∑‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\npangaea_long %>% glimpse()\n\nRows: 1,280\nColumns: 11\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0045, 0.0045, 0.0045, 0.0045, 0.0045,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5,‚Ä¶\n$ element                <chr> \"ba_mg_g_leachate\", \"sr_mg_g_leachate\", \"ca_mg_‚Ä¶\n$ concentration          <dbl> 72.6, 767.0, 188951.9, 10612.7, 5935.0, 171.0, ‚Ä¶\n\n\nWhen we pivot data we move them from a wide to a long format and vice-versa."
  },
  {
    "objectID": "slides/50-clean.html#pivot-longer",
    "href": "slides/50-clean.html#pivot-longer",
    "title": "Clean and Tidy Data",
    "section": "Pivot Longer",
    "text": "Pivot Longer\n\nSource : R4DS - Tidy Data"
  },
  {
    "objectID": "slides/50-clean.html#pivot-longer-1",
    "href": "slides/50-clean.html#pivot-longer-1",
    "title": "Clean and Tidy Data",
    "section": "Pivot Longer",
    "text": "Pivot Longer\n\n(Image from Alisson Horst, check her other stats illustrations here)"
  },
  {
    "objectID": "slides/50-clean.html#one-cell-contains-multiple-values",
    "href": "slides/50-clean.html#one-cell-contains-multiple-values",
    "title": "Clean and Tidy Data",
    "section": "One cell contains multiple values",
    "text": "One cell contains multiple values\nNow it‚Äôs clear that element contains more than one value.\nFor example: ba_mg_g_leachate is not a single values and could be split into:\n\n\nelement: ba.\nunit: mg_g.\nfraction: leachate.\n\n\nLet‚Äôs split this column at the _ and reconstitute it in a tidy way\n\npangaea_tidy <- \n  pangaea_long %>% \n  separate(element, into = c('element', 'unit_num', 'unit_dem', 'fraction'), sep = '_') %>% \n  unite(col = 'unit', unit_num:unit_dem, sep = '/')\n\npangaea_tidy\n\n# A tibble: 1,280 √ó 13\n   event latit‚Ä¶¬π longi‚Ä¶¬≤ eleva‚Ä¶¬≥ sampl‚Ä¶‚Å¥ samp_‚Ä¶‚Åµ depth_m age_k‚Ä¶‚Å∂ ca_co‚Ä¶‚Å∑ element\n   <chr>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 2 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 3 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 4 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n 5 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n 6 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 7 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 8 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 9 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n10 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n# ‚Ä¶ with 1,270 more rows, 3 more variables: unit <chr>, fraction <chr>,\n#   concentration <dbl>, and abbreviated variable names ¬π‚Äãlatitude, ¬≤‚Äãlongitude,\n#   ¬≥‚Äãelevation_m, ‚Å¥‚Äãsample_label_barite_sr, ‚Åµ‚Äãsamp_type, ‚Å∂‚Äãage_ka_bp,\n#   ‚Å∑‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\npangaea_tidy %>% glimpse()\n\nRows: 1,280\nColumns: 13\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0045, 0.0045, 0.0045, 0.0045, 0.0045,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5,‚Ä¶\n$ element                <chr> \"ba\", \"sr\", \"ca\", \"al\", \"fe\", \"ba\", \"sr\", \"ca\",‚Ä¶\n$ unit                   <chr> \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\",‚Ä¶\n$ fraction               <chr> \"leachate\", \"leachate\", \"leachate\", \"leachate\",‚Ä¶\n$ concentration          <dbl> 72.6, 767.0, 188951.9, 10612.7, 5935.0, 171.0, ‚Ä¶"
  },
  {
    "objectID": "slides/50-clean.html#and-lets-fix-the-measurement-unit",
    "href": "slides/50-clean.html#and-lets-fix-the-measurement-unit",
    "title": "Clean and Tidy Data",
    "section": "And let‚Äôs fix the measurement unit",
    "text": "And let‚Äôs fix the measurement unit\nRemember that janitor transformed ¬µ into m?\n\npangea_tidy <- \n  pangaea_tidy %>% \n  mutate(unit = unit %>% str_replace('m', '¬µ'))\n\npangaea_tidy\n\n# A tibble: 1,280 √ó 13\n   event latit‚Ä¶¬π longi‚Ä¶¬≤ eleva‚Ä¶¬≥ sampl‚Ä¶‚Å¥ samp_‚Ä¶‚Åµ depth_m age_k‚Ä¶‚Å∂ ca_co‚Ä¶‚Å∑ element\n   <chr>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 2 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 3 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 4 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n 5 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n 6 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 7 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 8 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 9 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n10 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n# ‚Ä¶ with 1,270 more rows, 3 more variables: unit <chr>, fraction <chr>,\n#   concentration <dbl>, and abbreviated variable names ¬π‚Äãlatitude, ¬≤‚Äãlongitude,\n#   ¬≥‚Äãelevation_m, ‚Å¥‚Äãsample_label_barite_sr, ‚Åµ‚Äãsamp_type, ‚Å∂‚Äãage_ka_bp,\n#   ‚Å∑‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"
  },
  {
    "objectID": "slides/50-clean.html#data-can-take-many-shapes",
    "href": "slides/50-clean.html#data-can-take-many-shapes",
    "title": "Clean and Tidy Data",
    "section": "Data can take many shapes",
    "text": "Data can take many shapes\n\npangaea_also_tidy <- \n  pangaea_tidy %>% \n  pivot_wider(names_from = 'element', values_from = 'fraction') \n  \npangaea_also_tidy \n\n# A tibble: 1,280 √ó 16\n   event  latitude longi‚Ä¶¬π eleva‚Ä¶¬≤ sampl‚Ä¶¬≥ samp_‚Ä¶‚Å¥ depth_m age_k‚Ä¶‚Åµ ca_co‚Ä¶‚Å∂ unit \n   <chr>     <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>\n 1 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 2 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 3 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 4 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 5 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 6 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 7 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 8 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 9 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n10 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n# ‚Ä¶ with 1,270 more rows, 6 more variables: concentration <dbl>, ba <chr>,\n#   sr <chr>, ca <chr>, al <chr>, fe <chr>, and abbreviated variable names\n#   ¬π‚Äãlongitude, ¬≤‚Äãelevation_m, ¬≥‚Äãsample_label_barite_sr, ‚Å¥‚Äãsamp_type, ‚Åµ‚Äãage_ka_bp,\n#   ‚Å∂‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\npangaea_also_tidy %>% glimpse()\n\nRows: 1,280\nColumns: 16\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0045, 0.0045, 0.0045, 0.0045, 0.0045,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5,‚Ä¶\n$ unit                   <chr> \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\",‚Ä¶\n$ concentration          <dbl> 72.6, 767.0, 188951.9, 10612.7, 5935.0, 171.0, ‚Ä¶\n$ ba                     <chr> \"leachate\", NA, NA, NA, NA, \"residue\", NA, NA, ‚Ä¶\n$ sr                     <chr> NA, \"leachate\", NA, NA, NA, NA, \"residue\", NA, ‚Ä¶\n$ ca                     <chr> NA, NA, \"leachate\", NA, NA, NA, NA, \"residue\", ‚Ä¶\n$ al                     <chr> NA, NA, NA, \"leachate\", NA, NA, NA, NA, \"residu‚Ä¶\n$ fe                     <chr> NA, NA, NA, NA, \"leachate\", NA, NA, NA, NA, \"re‚Ä¶"
  },
  {
    "objectID": "slides/50-clean.html#exercise",
    "href": "slides/50-clean.html#exercise",
    "title": "Clean and Tidy Data",
    "section": "Exercise",
    "text": "Exercise\nTidy last week‚Äôs schedule.\n\n\n\n2022 CBSER Summer School"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Analysis in R",
    "section": "",
    "text": "Hands-on Lessons\n\nMeet R\nManipulate Data\nVisualize Data\nRobust Statistics\nGet Data into R\nClean Data with R\nExplorative Data Analysis"
  }
]