[
  {
    "objectID": "slides/00-intro.html#the-r-project-for-statistical-computing",
    "href": "slides/00-intro.html#the-r-project-for-statistical-computing",
    "title": "About R",
    "section": "The R Project for Statistical Computing",
    "text": "The R Project for Statistical Computing\nhttps://www.r-project.org/\n\nStarted in 1991 by Ross Ihaka and Robert Gentleman at the University of Auckland (NZ).\nMade open source in 1995.\nOfficial ‚Äúpeer reviewed‚Äù packages are hosted on CRAN.\nHas multiple ‚Äúuniverses‚Äù of packages, including Bioconductor dedicated to bioinformatics, and the Tidyverse for Data Science.\nGreat for analyzing data, for statistics, for research and for communicating data to others."
  },
  {
    "objectID": "slides/00-intro.html#a-bit-more-on-r",
    "href": "slides/00-intro.html#a-bit-more-on-r",
    "title": "About R",
    "section": "A bit more on R",
    "text": "A bit more on R\n\nWe are going to use the Tidyverse. But you might have to learn also a bit of the original idiom, now called base R, which sometimes helps if you have to programm your own functions.\nWe are going to use R in visual studio code as you did for Python, but you might want to try out also Rstudio, which is a great open source IDE dedicated to R."
  },
  {
    "objectID": "slides/00-intro.html#as-always-stackoverflow-is-your-friend",
    "href": "slides/00-intro.html#as-always-stackoverflow-is-your-friend",
    "title": "About R",
    "section": "As always, stackoverflow is your friend",
    "text": "As always, stackoverflow is your friend\nIf you need help, as always, Google and Stackoverflow are your friends.\n\nBut sometimes you need to learn on a support that is structured, nuanced and detailed‚Ä¶ üìö"
  },
  {
    "objectID": "slides/00-intro.html#a-helpful-and-welcoming-community",
    "href": "slides/00-intro.html#a-helpful-and-welcoming-community",
    "title": "About R",
    "section": "A helpful and welcoming community üìö",
    "text": "A helpful and welcoming community üìö\nOne of the things that makes R great is its community of users and programmer.\nIt is open source and open access oriented and highly dedicated to lowering the barrier to learning R and data science, and make their tools available and usable to everyone."
  },
  {
    "objectID": "slides/00-intro.html#open-books",
    "href": "slides/00-intro.html#open-books",
    "title": "About R",
    "section": "Open Books",
    "text": "Open Books\n\n\nBookdown: a package and a repository for open access books about R."
  },
  {
    "objectID": "slides/00-intro.html#open-books-1",
    "href": "slides/00-intro.html#open-books-1",
    "title": "About R",
    "section": "Open Books",
    "text": "Open Books\n\n\n\nR for Data Science - A gentle introducion to data science with the Tidyverse.\nIntroduction to Data Science - A detailed introduction to Data science by a biostatistician.\nAdvanced R - All you need to know about programming in R.\nIntroduction to Statistical Learning - A detailed introductio to modern statistical methods, implemented in R.\n\n\n\nText Mining in R Dealing with natural language and written text in R.\nTidy Modeling with R R Machine learning framework.\nDesigning and Building Data Science Solutions how to set up a data science project."
  },
  {
    "objectID": "slides/00-intro.html#more",
    "href": "slides/00-intro.html#more",
    "title": "About R",
    "section": "More ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è",
    "text": "More ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è\n\nSlack Spaces\n\n\nR for Data Science Community a slack chanel for R networking.\n\n\nBlogs\n\nAlison Hill‚Äôs Blog; great for everything Rmarkdown.\nSimply Statistics; modern statistics and R.\nJulia Silge‚Äôs Blog; learn about R machine learning framework from one of its main developer.\nGina Reynolds Flipbooks; for more tidyverse and Rmarkdown mastery.\nFornkonstin; at the interface between math, art and coding.\nData imaginist; more art in R üé®.\n\nCollaborative Challenges\n\nTidytuesday Tidy and visualize a dataset and share your results with the R community every week on Tuesday.\n\n\n\n\nHome | 2022 CBSER Summer School"
  },
  {
    "objectID": "slides/10-meet-r.html#r-understands-you",
    "href": "slides/10-meet-r.html#r-understands-you",
    "title": "Meet R",
    "section": "R understands you",
    "text": "R understands you\nWrite someting at the R console:\n\nA simple number‚Ä¶\n\n2\n\n[1] 2\n\n\n\n\nSome operation‚Ä¶\n\n3 + 7\n\n[1] 10\n\n\n\n\nText must be quoted‚Ä¶\n\n'hello'\n\n[1] \"hello\"\n\n\n\n\nOtherwise it is interpreted as the name of a variable:\n\nmy_var\n\nError in eval(expr, envir, enclos): object 'my_var' not found"
  },
  {
    "objectID": "slides/10-meet-r.html#you-can-define-variables",
    "href": "slides/10-meet-r.html#you-can-define-variables",
    "title": "Meet R",
    "section": "You can define variables",
    "text": "You can define variables\nYou can define a variable with the operator <- .\n\n# a numeric variable\nthis_year <- 2022\n \n# a character variable\nitalian_greetings <- 'ciao'\n\n\nIf you type the name of a variable without quotes, r prints its value:\n\nthis_year\n\n[1] 2022\n\n\n\nitalian_greetings\n\n[1] \"ciao\"\n\n\n\n\nUse the keyboard shortcut alt/option + - to write the assign operator <- more easily."
  },
  {
    "objectID": "slides/10-meet-r.html#data-types",
    "href": "slides/10-meet-r.html#data-types",
    "title": "Meet R",
    "section": "Data Types",
    "text": "Data Types\nWhen you define an object R guesses its type.\n\ntypeof() returns the internal type of an object.\n\ntypeof(this_year)\n\n[1] \"double\"\n\ntypeof(italian_greetings)\n\n[1] \"character\"\n\n\n\n\nclass() returns a the class attribute of an object.\n\nclass(this_year)\n\n[1] \"numeric\"\n\nclass(italian_greetings)\n\n[1] \"character\""
  },
  {
    "objectID": "slides/10-meet-r.html#everything-in-r-is-an-object",
    "href": "slides/10-meet-r.html#everything-in-r-is-an-object",
    "title": "Meet R",
    "section": "Everything in R is an object",
    "text": "Everything in R is an object\nAnd objects have a types.\n\n\nclass(2)\n\n[1] \"numeric\"\n\n\n\n\n\nclass('hello')\n\n[1] \"character\"\n\n\n\n\n\nclass(FALSE)\n\n[1] \"logical\"\n\n\n\n\n\nclass(mean)\n\n[1] \"function\"\n\n\n\n\n\nclass(`<-`)\n\n[1] \"function\"\n\n\n\n\n\nclass(Sys.Date())\n\n[1] \"Date\""
  },
  {
    "objectID": "slides/10-meet-r.html#exercise",
    "href": "slides/10-meet-r.html#exercise",
    "title": "Meet R",
    "section": "Exercise",
    "text": "Exercise\n\nUse the function c(arg_1, arg_2, ..., arg_n) to put together in a vector many objects that you expect to have the same class. Try with different ones.\nNow do the same, but try to put together in a vector data with different types, what happened?\n\n\n\nLearn more about vectors and types at Advanced R."
  },
  {
    "objectID": "slides/10-meet-r.html#vectors-store-one-or-more-data-point-of-the-same-class",
    "href": "slides/10-meet-r.html#vectors-store-one-or-more-data-point-of-the-same-class",
    "title": "Meet R",
    "section": "Vectors store one or more data point of the same class",
    "text": "Vectors store one or more data point of the same class\n\nnum_vector <- c(1, 3, 5, 3, 6)\n\ncharacter_vector <- c('Hi', ',', 'I', 'am', 'a', 'character', 'vector')\n\nlogical_vector <- c(TRUE, FALSE, FALSE, TRUE, FALSE)\n\n\n\n\nclass(num_vector)\n\n[1] \"numeric\"\n\nclass(character_vector)\n\n[1] \"character\"\n\nclass(logical_vector)\n\n[1] \"logical\""
  },
  {
    "objectID": "slides/10-meet-r.html#classes-can-be-coherced",
    "href": "slides/10-meet-r.html#classes-can-be-coherced",
    "title": "Meet R",
    "section": "Classes can be coherced",
    "text": "Classes can be coherced\nTRUE and FALSE can be coerced into numeric zeroes and ones, or also into characters.\n\nc(2, TRUE, 5, FALSE, 4)\n\n[1] 2 1 5 0 4\n\n\n\nNumbers can be coerced into characters.\n\nc('a', TRUE, 5, FALSE, 4)\n\n[1] \"a\"     \"TRUE\"  \"5\"     \"FALSE\" \"4\""
  },
  {
    "objectID": "slides/10-meet-r.html#classes-can-be-coherced-1",
    "href": "slides/10-meet-r.html#classes-can-be-coherced-1",
    "title": "Meet R",
    "section": "Classes can be coherced",
    "text": "Classes can be coherced\nClasses can be coerced explicitly.\n\nlogical_vector <- c(T, F, F, T, T, F)\nlogical_vector\n\n[1]  TRUE FALSE FALSE  TRUE  TRUE FALSE\n\nas.numeric(logical_vector)\n\n[1] 1 0 0 1 1 0\n\nas.character(logical_vector)\n\n[1] \"TRUE\"  \"FALSE\" \"FALSE\" \"TRUE\"  \"TRUE\"  \"FALSE\"\n\n\n\nIf an element can‚Äôt be coerced to the desired class, R returns a missing value (NA).\n\nas.numeric(c('1', 'two', '3'))\n\n[1]  1 NA  3"
  },
  {
    "objectID": "slides/10-meet-r.html#atomic-elements-are-vectors-of-length-1",
    "href": "slides/10-meet-r.html#atomic-elements-are-vectors-of-length-1",
    "title": "Meet R",
    "section": "Atomic elements are vectors of length 1",
    "text": "Atomic elements are vectors of length 1\n\nshort_vector <- 1\nlong_vector <- 1:50\n\n\n\nshort_vector\n\n[1] 1\n\nlong_vector\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n\n\n\n\n\nclass(short_vector)\n\n[1] \"numeric\"\n\nclass(long_vector)\n\n[1] \"integer\"\n\n\n\n\n\nlength(short_vector)\n\n[1] 1\n\nlength(long_vector)\n\n[1] 50"
  },
  {
    "objectID": "slides/10-meet-r.html#most-functions-in-r-are-vectorized",
    "href": "slides/10-meet-r.html#most-functions-in-r-are-vectorized",
    "title": "Meet R",
    "section": "Most functions in R are vectorized",
    "text": "Most functions in R are vectorized\nIf I want to apply an operation over a vector, I can just write it as it is without a for loop. For example:\n\nAdd an integer to every number in a vector:\n\nlong_vector + 100\n\n [1] 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119\n[20] 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138\n[39] 139 140 141 142 143 144 145 146 147 148 149 150\n\n\n\n\nMultiply every number in a vector by an integer:\n\nlong_vector * 2\n\n [1]   2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38\n[20]  40  42  44  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76\n[39]  78  80  82  84  86  88  90  92  94  96  98 100"
  },
  {
    "objectID": "slides/10-meet-r.html#most-functions-in-r-are-vectorized-1",
    "href": "slides/10-meet-r.html#most-functions-in-r-are-vectorized-1",
    "title": "Meet R",
    "section": "Most functions in R are vectorized",
    "text": "Most functions in R are vectorized\nTake the square root of every number in a vector:\n\nsqrt(long_vector)\n\n [1] 1.000000 1.414214 1.732051 2.000000 2.236068 2.449490 2.645751 2.828427\n [9] 3.000000 3.162278 3.316625 3.464102 3.605551 3.741657 3.872983 4.000000\n[17] 4.123106 4.242641 4.358899 4.472136 4.582576 4.690416 4.795832 4.898979\n[25] 5.000000 5.099020 5.196152 5.291503 5.385165 5.477226 5.567764 5.656854\n[33] 5.744563 5.830952 5.916080 6.000000 6.082763 6.164414 6.244998 6.324555\n[41] 6.403124 6.480741 6.557439 6.633250 6.708204 6.782330 6.855655 6.928203\n[49] 7.000000 7.071068"
  },
  {
    "objectID": "slides/10-meet-r.html#exercise-1",
    "href": "slides/10-meet-r.html#exercise-1",
    "title": "Meet R",
    "section": "Exercise",
    "text": "Exercise\n\nGenerate a vector of 100 (semi-) random numbers with a normal distribution.\nUse a for loop (even if you don‚Äôt need one) to multiply eachs number in the vector by 2.\n\n\n\nFor loops in R according to Roger D. Peng."
  },
  {
    "objectID": "slides/10-meet-r.html#extra---lists",
    "href": "slides/10-meet-r.html#extra---lists",
    "title": "Meet R",
    "section": "Extra - Lists",
    "text": "Extra - Lists\nIf you need to collect together and store data of different types, you can use lists.\n\nmy_list <- list(\n  'hello',\n  1,\n  FALSE,\n  1:25\n)\n\nmy_list\n\n[[1]]\n[1] \"hello\"\n\n[[2]]\n[1] 1\n\n[[3]]\n[1] FALSE\n\n[[4]]\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"
  },
  {
    "objectID": "slides/10-meet-r.html#can-we-use-vectors-to-build-a-dataframe",
    "href": "slides/10-meet-r.html#can-we-use-vectors-to-build-a-dataframe",
    "title": "Meet R",
    "section": "Can we use vectors to build a dataframe?",
    "text": "Can we use vectors to build a dataframe?\nWe learned that vector contain elements of the same type, for example, numerics, character, logical.\n\nAccording to the Tidy Data theory, in rectangular dataframes:\n\n\nEach row is an observation.\nEach column is a variable.\n\n\nBy definiton variables of your data, must be made by atomic elements of the same type. So we can use vectors of the same length to build the columns of a dataframe.\nLet‚Äôs try."
  },
  {
    "objectID": "slides/10-meet-r.html#and-we-have-data",
    "href": "slides/10-meet-r.html#and-we-have-data",
    "title": "Meet R",
    "section": "And‚Ä¶ We have data",
    "text": "And‚Ä¶ We have data\nLet‚Äôs prepare three vectors with the first observations of iris and use them to make a dataframe.\n\nsepal_length <- c(5.1, 7.0, 6.3)\n\nsepal_width <- c(3.5, 3.2, 3.3)\n\nspecies <- c('setosa', 'versicolor', 'virginica')\n\niris_simple <- \n  data.frame(\n    species,\n    sepal_length,\n    sepal_width\n  )\n\niris_simple\n\n     species sepal_length sepal_width\n1     setosa          5.1         3.5\n2 versicolor          7.0         3.2\n3  virginica          6.3         3.3"
  },
  {
    "objectID": "slides/10-meet-r.html#and-we-have-data-1",
    "href": "slides/10-meet-r.html#and-we-have-data-1",
    "title": "Meet R",
    "section": "And‚Ä¶ We have data",
    "text": "And‚Ä¶ We have data\nThe variable iris_simple points to a dataframe that stores rectangular data.\n\nclass(iris_simple)\n\n[1] \"data.frame\"\n\n\n\ndim(iris_simple)\n\n[1] 3 3\n\n\n\nWe can access its columns with the operator $. Each column is a vector.\n\niris_simple$sepal_length\n\n[1] 5.1 7.0 6.3\n\n\n\nclass(iris_simple$sepal_length)\n\n[1] \"numeric\"\n\n\n\nis.vector(iris_simple$sepal_length)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/10-meet-r.html#section",
    "href": "slides/10-meet-r.html#section",
    "title": "Meet R",
    "section": "",
    "text": "Now that we have data, let‚Äôs take our first stroll into the Tidyverse."
  },
  {
    "objectID": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes",
    "href": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes",
    "title": "Meet R",
    "section": "Tibbles: a modern take on dataframes",
    "text": "Tibbles: a modern take on dataframes\nLet‚Äôs attach the whole Tidyverse, which includes also the Tibble package‚Ä¶\n\nlibrary(tidyverse)\n\n\n‚Ä¶and convert our dataframe iris_simple into a tibble.\n\niris_simple <- as_tibble(iris_simple)\n\n\n\nThe print method for a tibble, provides a handy and informative output.\n\niris_simple\n\n# A tibble: 3 √ó 3\n  species    sepal_length sepal_width\n  <chr>             <dbl>       <dbl>\n1 setosa              5.1         3.5\n2 versicolor          7           3.2\n3 virginica           6.3         3.3"
  },
  {
    "objectID": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes-1",
    "href": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes-1",
    "title": "Meet R",
    "section": "Tibbles: a modern take on dataframes",
    "text": "Tibbles: a modern take on dataframes\nLet‚Äôs compare the print method for the dataframe iris, before and after we convert it to a tibble.\n\niris\n\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica"
  },
  {
    "objectID": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes-2",
    "href": "slides/10-meet-r.html#tibbles-a-modern-take-on-dataframes-2",
    "title": "Meet R",
    "section": "Tibbles: a modern take on dataframes",
    "text": "Tibbles: a modern take on dataframes\nLet‚Äôs compare the print method for the dataframe iris, before and after we convert it to a tibble.\n\nas_tibble(iris)\n\n# A tibble: 150 √ó 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1          5.1         3.5          1.4         0.2 setosa \n 2          4.9         3            1.4         0.2 setosa \n 3          4.7         3.2          1.3         0.2 setosa \n 4          4.6         3.1          1.5         0.2 setosa \n 5          5           3.6          1.4         0.2 setosa \n 6          5.4         3.9          1.7         0.4 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          5           3.4          1.5         0.2 setosa \n 9          4.4         2.9          1.4         0.2 setosa \n10          4.9         3.1          1.5         0.1 setosa \n# ‚Ä¶ with 140 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/10-meet-r.html#exercise-2",
    "href": "slides/10-meet-r.html#exercise-2",
    "title": "Meet R",
    "section": "Exercise",
    "text": "Exercise\n\n\nCheck the weather forecast for your hometown (or a place of your choice).\nAssign the forecasted temperature in one vector and the corresponding time in another vector for at least 5 data points.\nMake a dataframe with those two variables.\nWhat‚Äôs the average temperature? And what‚Äôs its standard deviation?\nThen, visualize those data with a line-chart in which the x axis represents time and the y axis represents the forecasted temperature.\n\n\n\n\nHome | 2022 CBSER Summer School"
  },
  {
    "objectID": "slides/20-manipulate.html#the-tidyverse-is-an-ecosystem-of-packages-for-data-science",
    "href": "slides/20-manipulate.html#the-tidyverse-is-an-ecosystem-of-packages-for-data-science",
    "title": "Manipulate Data",
    "section": "The Tidyverse is an ecosystem of packages for Data Science",
    "text": "The Tidyverse is an ecosystem of packages for Data Science\nAll the packages share a common design:\n\nOne function does one thing, well.\nDesigned for pipes.\nExtensive user-friendly documentation.\nNon-standard evaluation, to write code quickly and easily.\n\n\nAll packages can be loaded with library(tidyverse), but you can also load single packages one by one."
  },
  {
    "objectID": "slides/20-manipulate.html#we-first-explore-the-palmer-penguins-dataset",
    "href": "slides/20-manipulate.html#we-first-explore-the-palmer-penguins-dataset",
    "title": "Manipulate Data",
    "section": "We first explore the Palmer Penguins Dataset",
    "text": "We first explore the Palmer Penguins Dataset\nThe Penguins Dataset stores real data about palmer penguins. This R data package was developed and is maintained by Allison Horst, Alison Hill and Kirsten Gorman for teaching purposes.\n\nLet‚Äôs install the package‚Ä¶\n\ninstall.packages('palmerpenguins')\n\n\n\n‚Ä¶and load it in R.\n\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "slides/20-manipulate.html#palmerpenguins-exports-two-datasets",
    "href": "slides/20-manipulate.html#palmerpenguins-exports-two-datasets",
    "title": "Manipulate Data",
    "section": "palmerpenguins exports two datasets",
    "text": "palmerpenguins exports two datasets\n\npenguins_raw\n\n# A tibble: 344 √ó 17\n   studyName Sample Num‚Ä¶¬π Species Region Island Stage Indiv‚Ä¶¬≤ Clutc‚Ä¶¬≥ `Date Egg`\n   <chr>            <dbl> <chr>   <chr>  <chr>  <chr> <chr>   <chr>   <date>    \n 1 PAL0708              1 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N1A1    Yes     2007-11-11\n 2 PAL0708              2 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N1A2    Yes     2007-11-11\n 3 PAL0708              3 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N2A1    Yes     2007-11-16\n 4 PAL0708              4 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N2A2    Yes     2007-11-16\n 5 PAL0708              5 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N3A1    Yes     2007-11-16\n 6 PAL0708              6 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N3A2    Yes     2007-11-16\n 7 PAL0708              7 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N4A1    No      2007-11-15\n 8 PAL0708              8 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N4A2    No      2007-11-15\n 9 PAL0708              9 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N5A1    Yes     2007-11-09\n10 PAL0708             10 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N5A2    Yes     2007-11-09\n# ‚Ä¶ with 334 more rows, 8 more variables: `Culmen Length (mm)` <dbl>,\n#   `Culmen Depth (mm)` <dbl>, `Flipper Length (mm)` <dbl>,\n#   `Body Mass (g)` <dbl>, Sex <chr>, `Delta 15 N (o/oo)` <dbl>,\n#   `Delta 13 C (o/oo)` <dbl>, Comments <chr>, and abbreviated variable names\n#   ¬π‚Äã`Sample Number`, ¬≤‚Äã`Individual ID`, ¬≥‚Äã`Clutch Completion`\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"
  },
  {
    "objectID": "slides/20-manipulate.html#palmerpenguins-exports-two-datasets-1",
    "href": "slides/20-manipulate.html#palmerpenguins-exports-two-datasets-1",
    "title": "Manipulate Data",
    "section": "palmerpenguins exports two datasets",
    "text": "palmerpenguins exports two datasets\n\npenguins\n\n# A tibble: 344 √ó 8\n   species island    bill_length_mm bill_depth_mm flipper_‚Ä¶¬π body_‚Ä¶¬≤ sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007\n 2 Adelie  Torgersen           39.5          17.4        186    3800 fema‚Ä¶  2007\n 3 Adelie  Torgersen           40.3          18          195    3250 fema‚Ä¶  2007\n 4 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 5 Adelie  Torgersen           36.7          19.3        193    3450 fema‚Ä¶  2007\n 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007\n 7 Adelie  Torgersen           38.9          17.8        181    3625 fema‚Ä¶  2007\n 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007\n 9 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n10 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n# ‚Ä¶ with 334 more rows, and abbreviated variable names ¬π‚Äãflipper_length_mm,\n#   ¬≤‚Äãbody_mass_g\n# ‚Ñπ Use `print(n = ...)` to see more rows\n\n\nWe will use the first one: penguins, which has already been cleaned."
  },
  {
    "objectID": "slides/20-manipulate.html#exercise",
    "href": "slides/20-manipulate.html#exercise",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nThe print method for a tibble gives you a reasonable overview of the data stored in it.\nCan you get more details with the package skimr?\nCheck its documentation, install it, try it out on the penguins dataset. Comment on the output: is it useful? How?."
  },
  {
    "objectID": "slides/20-manipulate.html#a-grammar-for-data-manipulation",
    "href": "slides/20-manipulate.html#a-grammar-for-data-manipulation",
    "title": "Manipulate Data",
    "section": "A grammar for data manipulation",
    "text": "A grammar for data manipulation\n\n\n\n\nDplyr provides a grammar for manipulating data, with many useful verbs:\n\nmutate() adds new variables that are functions of existing variables\nselect() picks variables based on their names.\nfilter() picks cases based on their values.\nsummarise() reduces multiple values down to a single summary.\ngroup_by() performs operations by group."
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 344 √ó 9\n   species island    bill_length_mm bill_d‚Ä¶¬π flipp‚Ä¶¬≤ body_‚Ä¶¬≥ sex    year bill_‚Ä¶‚Å¥\n   <fct>   <fct>              <dbl>    <dbl>   <int>   <int> <fct> <int>   <dbl>\n 1 Adelie  Torgersen           39.1     18.7     181    3750 male   2007  0.0391\n 2 Adelie  Torgersen           39.5     17.4     186    3800 fema‚Ä¶  2007  0.0395\n 3 Adelie  Torgersen           40.3     18       195    3250 fema‚Ä¶  2007  0.0403\n 4 Adelie  Torgersen           NA       NA        NA      NA <NA>   2007 NA     \n 5 Adelie  Torgersen           36.7     19.3     193    3450 fema‚Ä¶  2007  0.0367\n 6 Adelie  Torgersen           39.3     20.6     190    3650 male   2007  0.0393\n 7 Adelie  Torgersen           38.9     17.8     181    3625 fema‚Ä¶  2007  0.0389\n 8 Adelie  Torgersen           39.2     19.6     195    4675 male   2007  0.0392\n 9 Adelie  Torgersen           34.1     18.1     193    3475 <NA>   2007  0.0341\n10 Adelie  Torgersen           42       20.2     190    4250 <NA>   2007  0.042 \n# ‚Ä¶ with 334 more rows, and abbreviated variable names ¬π‚Äãbill_depth_mm,\n#   ¬≤‚Äãflipper_length_mm, ¬≥‚Äãbody_mass_g, ‚Å¥‚Äãbill_length_meters\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-1",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-1",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(bill_length_mm) %>% \n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 344 √ó 2\n   bill_length_mm bill_length_meters\n            <dbl>              <dbl>\n 1           39.1             0.0391\n 2           39.5             0.0395\n 3           40.3             0.0403\n 4           NA              NA     \n 5           36.7             0.0367\n 6           39.3             0.0393\n 7           38.9             0.0389\n 8           39.2             0.0392\n 9           34.1             0.0341\n10           42               0.042 \n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-2",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-2",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 344 √ó 4\n   species island    bill_length_mm bill_length_meters\n   <fct>   <fct>              <dbl>              <dbl>\n 1 Adelie  Torgersen           39.1             0.0391\n 2 Adelie  Torgersen           39.5             0.0395\n 3 Adelie  Torgersen           40.3             0.0403\n 4 Adelie  Torgersen           NA              NA     \n 5 Adelie  Torgersen           36.7             0.0367\n 6 Adelie  Torgersen           39.3             0.0393\n 7 Adelie  Torgersen           38.9             0.0389\n 8 Adelie  Torgersen           39.2             0.0392\n 9 Adelie  Torgersen           34.1             0.0341\n10 Adelie  Torgersen           42               0.042 \n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-3",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-3",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n count(island)\n\n# A tibble: 3 √ó 2\n  island        n\n  <fct>     <int>\n1 Biscoe      168\n2 Dream       124\n3 Torgersen    52"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-4",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-4",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000)\n\n# A tibble: 124 √ó 4\n   species island bill_length_mm bill_length_meters\n   <fct>   <fct>           <dbl>              <dbl>\n 1 Adelie  Dream            39.5             0.0395\n 2 Adelie  Dream            37.2             0.0372\n 3 Adelie  Dream            39.5             0.0395\n 4 Adelie  Dream            40.9             0.0409\n 5 Adelie  Dream            36.4             0.0364\n 6 Adelie  Dream            39.2             0.0392\n 7 Adelie  Dream            38.8             0.0388\n 8 Adelie  Dream            42.2             0.0422\n 9 Adelie  Dream            37.6             0.0376\n10 Adelie  Dream            39.8             0.0398\n# ‚Ä¶ with 114 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-5",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-5",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000) %>% \n  group_by(species)\n\n# A tibble: 124 √ó 4\n# Groups:   species [2]\n   species island bill_length_mm bill_length_meters\n   <fct>   <fct>           <dbl>              <dbl>\n 1 Adelie  Dream            39.5             0.0395\n 2 Adelie  Dream            37.2             0.0372\n 3 Adelie  Dream            39.5             0.0395\n 4 Adelie  Dream            40.9             0.0409\n 5 Adelie  Dream            36.4             0.0364\n 6 Adelie  Dream            39.2             0.0392\n 7 Adelie  Dream            38.8             0.0388\n 8 Adelie  Dream            42.2             0.0422\n 9 Adelie  Dream            37.6             0.0376\n10 Adelie  Dream            39.8             0.0398\n# ‚Ä¶ with 114 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-6",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-6",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\npenguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000) %>% \n  group_by(species) %>% \n  summarise(mean_bill_length_mm = mean(bill_length_mm),\n            sd_bill_length_mm = sd(bill_length_mm))\n\n# A tibble: 2 √ó 3\n  species   mean_bill_length_mm sd_bill_length_mm\n  <fct>                   <dbl>             <dbl>\n1 Adelie                   38.5              2.47\n2 Chinstrap                48.8              3.34"
  },
  {
    "objectID": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-7",
    "href": "slides/20-manipulate.html#we-can-apply-those-verbs-to-manipulate-data-7",
    "title": "Manipulate Data",
    "section": "We can apply those verbs to manipulate data",
    "text": "We can apply those verbs to manipulate data\n\ndream_summary <- \n  penguins %>%\n  select(species, island, bill_length_mm) %>% \n  filter(island == 'Dream') %>% \n  mutate(bill_length_meters = bill_length_mm/1000) %>% \n  group_by(species) %>% \n  summarise(mean_bill_length_mm = mean(bill_length_mm),\n            sd_bill_length_mm = sd(bill_length_mm))\n\nLet‚Äôs assign the output to a new variable dream_summary."
  },
  {
    "objectID": "slides/20-manipulate.html#section-1",
    "href": "slides/20-manipulate.html#section-1",
    "title": "Manipulate Data",
    "section": "",
    "text": "In the previous code we have seen also two additional aspects that feature heavily in the tidyverse:\n\nThe Pipe %>%.\nNon-Standard Evaluation."
  },
  {
    "objectID": "slides/20-manipulate.html#the-pipe",
    "href": "slides/20-manipulate.html#the-pipe",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n\n\n\n\n\n\nThe pipe is provided by the package magrittr, it‚Äôs a forwarding operator:\n\nIt takes the ouput of what comes before (LHS) and sends it to the first argument of the function that comes after (RHS).\n\nLHS %>% RHS"
  },
  {
    "objectID": "slides/20-manipulate.html#the-pipe-1",
    "href": "slides/20-manipulate.html#the-pipe-1",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\nFor example, you could write:\n\nselect(penguins, species, body_mass_g)\n\n# A tibble: 344 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#the-pipe-2",
    "href": "slides/20-manipulate.html#the-pipe-2",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n‚Ä¶but if you use the pipe, your code is easier to read‚Ä¶\n\npenguins %>% select(species, body_mass_g)\n\n# A tibble: 344 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 334 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#the-pipe-3",
    "href": "slides/20-manipulate.html#the-pipe-3",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n‚Ä¶especially if you have to perform many operations one after the other‚Ä¶\n\npenguins %>%\n  select(species, body_mass_g) %>% \n  filter(species == 'Adelie')\n\n# A tibble: 152 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 142 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#the-pipe-4",
    "href": "slides/20-manipulate.html#the-pipe-4",
    "title": "Manipulate Data",
    "section": "The Pipe %>%",
    "text": "The Pipe %>%\n‚Ä¶that otherwise would force you to nest your code horribly.\n\nfilter(\n  select(\n    penguins,\n    species, body_mass_g\n  ),\n  species == 'Adelie'\n)\n\n# A tibble: 152 √ó 2\n   species body_mass_g\n   <fct>         <int>\n 1 Adelie         3750\n 2 Adelie         3800\n 3 Adelie         3250\n 4 Adelie           NA\n 5 Adelie         3450\n 6 Adelie         3650\n 7 Adelie         3625\n 8 Adelie         4675\n 9 Adelie         3475\n10 Adelie         4250\n# ‚Ä¶ with 142 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/20-manipulate.html#non-standard-evaluation",
    "href": "slides/20-manipulate.html#non-standard-evaluation",
    "title": "Manipulate Data",
    "section": "Non-Standard Evaluation",
    "text": "Non-Standard Evaluation\nThis one is difficult‚Ä¶\n\nWhich argument does the function select() take? Let‚Äôs check it in its help page with ?select.\n\n?select\n\nUnder the Usage section it says:\nselect(.data, ...)\n\n\nAnd then in the section Arguments the help page says:\n.data: A data frame, data frame extension (e.g. a tibble), or a lazy data frame (e.g. from dbplyr or dtplyr). See Methods, below, for more details.\n\n...: <tidy-select> One or more unquoted expressions separated by commas. Variable names can be used as if they were positions in the data frame, so expressions like x:y can be used to select a range of variables."
  },
  {
    "objectID": "slides/20-manipulate.html#non-standard-evaluation-1",
    "href": "slides/20-manipulate.html#non-standard-evaluation-1",
    "title": "Manipulate Data",
    "section": "Non-Standard Evaluation",
    "text": "Non-Standard Evaluation\nSo, what are do we mean if we write:\n\npenguins %>% \n  select(species, island)\n\n\nThe penguins tibble is fills the.data parameter through the pipe %>%.\nThe unquoted names species, island fill the argument ..., they represent the names of the columns to be selected.\n\n\nBut the name of columns in a tibble is a character vector.\n\ncolnames(penguins)\n\n[1] \"species\"           \"island\"            \"bill_length_mm\"   \n[4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n[7] \"sex\"               \"year\""
  },
  {
    "objectID": "slides/20-manipulate.html#non-standard-evaluation-2",
    "href": "slides/20-manipulate.html#non-standard-evaluation-2",
    "title": "Manipulate Data",
    "section": "Non-Standard Evaluation",
    "text": "Non-Standard Evaluation\nThrough non-standard evaluation, in the function select, we can call element of a character vector like if they were variables (without quoting them).\n\npenguins %>% \n  select(species, island)\n\nThe variables species and island don‚Äôt exist outside of the dplyr function select().\n\nspecies\n\nError in eval(expr, envir, enclos): object 'species' not found"
  },
  {
    "objectID": "slides/20-manipulate.html#section-2",
    "href": "slides/20-manipulate.html#section-2",
    "title": "Manipulate Data",
    "section": "",
    "text": "With non-standard evaluation we can write names without quoting them. This makes writing code for iterative data exploration faster.\n\nIf you come from a more strict programming language, it could be hard to get use to this behaviour.\n\n\nMost function of the Tidyverse do non-standard evaluation."
  },
  {
    "objectID": "slides/20-manipulate.html#exercise-1",
    "href": "slides/20-manipulate.html#exercise-1",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nWith the penguin dataset:\n\n\nSelect all numeric variables (columns).\nConvert all variables that are expressed in millimeters into meters, rename them accordingly.\n\n\nGet help from:\n\nDplyr‚Äôs website.\nThe Data Wrangling Chapter of R4DS."
  },
  {
    "objectID": "slides/20-manipulate.html#exercise-2",
    "href": "slides/20-manipulate.html#exercise-2",
    "title": "Manipulate Data",
    "section": "Exercise",
    "text": "Exercise\nHow many penguins have bill_length_mm above average?\nRepeat the analysis for each species.\n\n\nHome | 2022 CBSER Summer School"
  },
  {
    "objectID": "slides/25-missing-values.html#what-is-a-missing-value",
    "href": "slides/25-missing-values.html#what-is-a-missing-value",
    "title": "Missing Values",
    "section": "What is a missing value?",
    "text": "What is a missing value?\nA missing value is a data point that‚Äôs missing, no one knows what the value was, so you can‚Äôt conduct any operation on it.\nIn R missing values are written NA."
  },
  {
    "objectID": "slides/25-missing-values.html#operation-on-missing-values",
    "href": "slides/25-missing-values.html#operation-on-missing-values",
    "title": "Missing Values",
    "section": "Operation on missing values",
    "text": "Operation on missing values\nMost operation on missing values return NAs.\nAsk yourself what is one plus ‚Äúa number that I don‚Äôt know‚Äù (NA). The anwser is ‚ÄúI dont know‚Äù (NA).\n\nNA + 1\n\n[1] NA\n\n\n\nNA / 4\n\n[1] NA\n\n\n\nNA == 1\n\n[1] NA\n\n\n\nNA == NA\n\n[1] NA"
  },
  {
    "objectID": "slides/25-missing-values.html#testing-if-a-value-is-missing",
    "href": "slides/25-missing-values.html#testing-if-a-value-is-missing",
    "title": "Missing Values",
    "section": "Testing if a value is missing",
    "text": "Testing if a value is missing\nTo test if an element is a missing value we must use the function is.na().\n\n1 %>% is.na()\n\n[1] FALSE\n\n\n\n'hello' %>% is.na()\n\n[1] FALSE\n\n\n\nTRUE %>% is.na()\n\n[1] FALSE\n\n\n\nNA %>% is.na()\n\n[1] TRUE"
  },
  {
    "objectID": "slides/25-missing-values.html#missing-values-in-a-vector",
    "href": "slides/25-missing-values.html#missing-values-in-a-vector",
    "title": "Missing Values",
    "section": "Missing values in a vector",
    "text": "Missing values in a vector\nWe can assign missing values to a variable and I can place them in a vector.\n\nmissing_value <- NA\n\n\nmissing_value %>% is.na()\n\n[1] TRUE\n\n\nWhen we use is.na() on a vector, it returns a vector of booleans, with TRUE in the position where the values are missing.\n\nvector_with_na <- c(1,5,NA, 10)\n\n\nvector_with_na %>% is.na()\n\n[1] FALSE FALSE  TRUE FALSE\n\n\nWe can count missing values in a vector with sum().\n\nvector_with_na %>% is.na() %>% sum()\n\n[1] 1"
  },
  {
    "objectID": "slides/25-missing-values.html#operating-on-missing-values",
    "href": "slides/25-missing-values.html#operating-on-missing-values",
    "title": "Missing Values",
    "section": "Operating on missing values",
    "text": "Operating on missing values\nMost functions such as mean(), median(), sd() give you the chance to remove missing values with the argument na.rm = TRUE.\n\nvector_with_na %>% mean()\n\n[1] NA\n\n\n\nvector_with_na %>% mean(na.rm = T)\n\n[1] 5.333333\n\n\nAlso, ggplots functio remove NAs automatically for us, if they would hinder computations."
  },
  {
    "objectID": "slides/25-missing-values.html#data-with-missing-values",
    "href": "slides/25-missing-values.html#data-with-missing-values",
    "title": "Missing Values",
    "section": "Data with missing values",
    "text": "Data with missing values\nOften data have NAs in them, for example the penguins dataset does.\nTo count missing values per each column, use this lines of code:\n\npenguins %>% \n  summarise(\n    across(\n      everything(),\n      ~is.na(.) %>% sum()\n    )\n  )\n\n# A tibble: 1 √ó 8\n  species island bill_length_mm bill_depth_mm flipper_leng‚Ä¶¬π body_‚Ä¶¬≤   sex  year\n    <int>  <int>          <int>         <int>          <int>   <int> <int> <int>\n1       0      0              2             2              2       2    11     0\n# ‚Ä¶ with abbreviated variable names ¬π‚Äãflipper_length_mm, ¬≤‚Äãbody_mass_g"
  },
  {
    "objectID": "slides/25-missing-values.html#data-with-missing-values-1",
    "href": "slides/25-missing-values.html#data-with-missing-values-1",
    "title": "Missing Values",
    "section": "Data with missing values",
    "text": "Data with missing values\nWe can also count them stratified by the fixed variables, for example:\n\npenguins %>% \n  group_by(island) %>% \n  summarise(\n    across(\n      everything(),\n      ~is.na(.) %>% sum()\n    )\n  )\n\n# A tibble: 3 √ó 8\n  island    species bill_length_mm bill_depth_mm flipper_l‚Ä¶¬π body_‚Ä¶¬≤   sex  year\n  <fct>       <int>          <int>         <int>       <int>   <int> <int> <int>\n1 Biscoe          0              1             1           1       1     5     0\n2 Dream           0              0             0           0       0     1     0\n3 Torgersen       0              1             1           1       1     5     0\n# ‚Ä¶ with abbreviated variable names ¬π‚Äãflipper_length_mm, ¬≤‚Äãbody_mass_g"
  },
  {
    "objectID": "slides/25-missing-values.html#strategy-for-missing-values",
    "href": "slides/25-missing-values.html#strategy-for-missing-values",
    "title": "Missing Values",
    "section": "Strategy for missing values",
    "text": "Strategy for missing values\nOften data have missing values.\nThe most important thing, when you get new data is to figure out how many missing values it contains, and where they are.\nAfterward you can decide if you want to remove them, or to impute them.\nLearn more about missing values at R4DS.\n\n\nHome | 2022 CBSER Summer School"
  },
  {
    "objectID": "slides/30-visualize.html#we-are-bad-at-recognizing-pattern-from-raw-data",
    "href": "slides/30-visualize.html#we-are-bad-at-recognizing-pattern-from-raw-data",
    "title": "Data Visualization",
    "section": "We are bad at recognizing pattern from raw data",
    "text": "We are bad at recognizing pattern from raw data\n\n\n# A tibble: 2,582 √ó 2\n         x      y\n     <dbl>  <dbl>\n   1 139.   37.1 \n   2 806   289   \n   3  77.5 116.  \n   4 755   381   \n   5 691   414   \n   6 116.   95.6 \n   7 130.  164.  \n   8 780   330   \n   9 629   448   \n  10 151   226   \n  11 714   419   \n  12 810   324   \n  13 267   391   \n  14 186   205   \n  15  98.3 164.  \n  16 154   202   \n  17 226   243   \n  18 318   297   \n  19 223   262   \n  20 106.  154.  \n  21 651   417   \n  22 180.   51.4 \n  23 565   393   \n  24 627   401   \n  25 387   363   \n  26 330   323   \n  27 704   426   \n  28 632   409   \n  29 109.   90.4 \n  30 127.   25.4 \n  31 504   462   \n  32 118.  102.  \n  33 366   386   \n  34 159.   54   \n  35 321   387   \n  36 266   361   \n  37 361   370   \n  38 128.   59.2 \n  39 114.  150.  \n  40 450   472   \n  41 640   442   \n  42 265   227   \n  43 104.  144.  \n  44 358   308   \n  45 537   440   \n  46 342   421   \n  47 333   319   \n  48 165   145   \n  49 288   386   \n  50 334   371   \n  51 449   463   \n  52 650   416   \n  53 251   360   \n  54 352   353   \n  55 136    61.8 \n  56 343   422   \n  57 270   262   \n  58 256   250   \n  59 410   434   \n  60 262   374   \n  61 204   221   \n  62 139.   90.4 \n  63 110   124.  \n  64 171.  115.  \n  65 413   418   \n  66 273   292   \n  67 232   216   \n  68 488   440   \n  69 781   329   \n  70 722   398   \n  71 175   114.  \n  72 286   384   \n  73 250   242   \n  74 582   476   \n  75 115.   42.3 \n  76 160   208   \n  77 591   453   \n  78 153   239   \n  79  91.8 144.  \n  80 728   410   \n  81 360   332   \n  82 380   426   \n  83 295   368   \n  84 703   408   \n  85 296   339   \n  86 793   311   \n  87 805   332   \n  88 427   470   \n  89 124.   57.9 \n  90 158   175   \n  91  97    76.1 \n  92 128.  135.  \n  93 490   428   \n  94 803   295   \n  95 105.  101.  \n  96 317   305   \n  97 263   334   \n  98 363   430   \n  99 775   361   \n 100 416   465   \n 101 502   455   \n 102 416   405   \n 103 136    34.5 \n 104 295   416   \n 105 268   392   \n 106 385   367   \n 107 437   473   \n 108 546   482   \n 109 152.  110.  \n 110 450   410   \n 111 246   341   \n 112 609   428   \n 113 800   301   \n 114 573   479   \n 115 804   292   \n 116 215   144   \n 117 624   451   \n 118 681   442   \n 119 495   399   \n 120 575   478   \n 121 174   138   \n 122 576   383   \n 123 248   262   \n 124 337   416   \n 125 300   416   \n 126 794   310   \n 127 771   351   \n 128 178.   64.4 \n 129 266   297   \n 130 531   456   \n 131 220   165   \n 132 465   397   \n 133 615   389   \n 134 381   448   \n 135 149    28   \n 136 247   333   \n 137 763   370   \n 138 154   232   \n 139 377   432   \n 140 419   400   \n 141 259   256   \n 142 143   220   \n 143 165.   38.4 \n 144 265   338   \n 145 220   258   \n 146 532   400   \n 147 150   176   \n 148 362   311   \n 149 346   359   \n 150 576   477   \n 151  63.2 110.  \n 152 109.  172.  \n 153 217   156   \n 154 498   417   \n 155 649   416   \n 156 533   388   \n 157 130.  167.  \n 158 811   284   \n 159 424   469   \n 160 420   401   \n 161 238   209   \n 162 426   401   \n 163 392   385   \n 164 757   376   \n 165  82.7 164.  \n 166  86.6  60.5 \n 167 425   438   \n 168 717   417   \n 169 164   240   \n 170 549   383   \n 171 293   329   \n 172 452   406   \n 173 297   380   \n 174 157   149   \n 175 149    51.4 \n 176 180   152   \n 177 324   306   \n 178 480   482   \n 179 111.   22.8 \n 180 363   327   \n 181 603   427   \n 182 322   351   \n 183 232   184   \n 184 251   205   \n 185 782   328   \n 186 732   407   \n 187 383   388   \n 188 644   412   \n 189 261   278   \n 190 111.   87.8 \n 191 306   282   \n 192 438   396   \n 193 196   205   \n 194 754   381   \n 195 295   307   \n 196 150.   83.9 \n 197 344   373   \n 198 585   445   \n 199 106.   44.9 \n 200 462   479   \n 201 456   478   \n 202 462   414   \n 203 110    50.1 \n 204 362   352   \n 205 561   444   \n 206 559   471   \n 207 623   394   \n 208 627   464   \n 209 730   408   \n 210 800   342   \n 211 172.   21.5 \n 212  56.7  91.7 \n 213 804   335   \n 214 111.   38.4 \n 215 359   339   \n 216 314   339   \n 217 757   379   \n 218 425   407   \n 219 792   314   \n 220 556   459   \n 221 152.  107.  \n 222 236   189   \n 223 109.   68.3 \n 224 190   237   \n 225 223   186   \n 226 248   298   \n 227 159.  114.  \n 228 574   379   \n 229 760   382   \n 230 163.   83.9 \n 231 183   145   \n 232 264   377   \n 233 219   232   \n 234 152   169   \n 235 220   189   \n 236 240   269   \n 237 366   356   \n 238 281   389   \n 239 258   346   \n 240 365   315   \n 241 219   163   \n 242 438   473   \n 243 300   400   \n 244 147   172   \n 245 286   383   \n 246 370   373   \n 247 212   157   \n 248 153.  133.  \n 249 449   455   \n 250  77.5 115.  \n 251 273   329   \n 252 492   399   \n 253 174   240   \n 254 363   322   \n 255 579   386   \n 256 551   444   \n 257 343   316   \n 258 771   365   \n 259 338   417   \n 260 426   469   \n 261 200   202   \n 262 286   256   \n 263 246   237   \n 264 158   197   \n 265 207   139   \n 266 296   311   \n 267 171.   20.2 \n 268 185   153   \n 269 368   357   \n 270 216   150   \n 271 118.  168.  \n 272 615   468   \n 273 332   406   \n 274 726   388   \n 275 217   201   \n 276 105.  110.  \n 277 553   462   \n 278 163.   82.6 \n 279 344   347   \n 280 357   335   \n 281 289   410   \n 282 409   395   \n 283 150.  103.  \n 284 273   339   \n 285 146.  131.  \n 286 105.  111.  \n 287 601   440   \n 288 577   412   \n 289 166.  101.  \n 290 140   195   \n 291 160   177   \n 292 639   454   \n 293 446   394   \n 294 172.   72.2 \n 295 521   395   \n 296 822   296   \n 297 546   380   \n 298 180.   52.7 \n 299 128.  103.  \n 300 615   415   \n 301 141.   52.7 \n 302 118.  170.  \n 303 154   216   \n 304 155   203   \n 305 485   472   \n 306 561   480   \n 307 622   467   \n 308 244   199   \n 309 518   406   \n 310 217   224   \n 311 289   342   \n 312 629   464   \n 313 812   322   \n 314 149   128.  \n 315 179.   43.6 \n 316 526   392   \n 317  94.4  70.9 \n 318 430   395   \n 319 251   265   \n 320 110    35.8 \n 321 315   294   \n 322 272   338   \n 323 118.   59.2 \n 324 758   357   \n 325 109.  122.  \n 326 637   461   \n 327 512   407   \n 328  76.2  83.9 \n 329 213   140   \n 330 362   370   \n 331 525   393   \n 332 368   322   \n 333 165.  115.  \n 334 553   482   \n 335 436   395   \n 336 111.  170.  \n 337 681   432   \n 338 142.    7.20\n 339 295   415   \n 340 118.  174.  \n 341 140.   57.9 \n 342 542   473   \n 343 820   287   \n 344 219   197   \n 345 228   253   \n 346 175    67   \n 347 159.  105.  \n 348 337   334   \n 349  77.5 133.  \n 350 196   155   \n 351 535   413   \n 352 443   470   \n 353 127.   29.3 \n 354 159.  120.  \n 355  55.4 129.  \n 356 237   281   \n 357 110   123.  \n 358 216   209   \n 359 789   319   \n 360 822   297   \n 361 355   396   \n 362 307   290   \n 363 299   400   \n 364 322   311   \n 365 323   354   \n 366 748   393   \n 367  85.3 145   \n 368 109.   31.9 \n 369 133.   35.8 \n 370 712   421   \n 371 488   482   \n 372 275   252   \n 373 122.  176.  \n 374 411   395   \n 375 264   335   \n 376 166   175   \n 377 266   388   \n 378 447   398   \n 379 425   447   \n 380 101.  157.  \n 381 346   346   \n 382  84    38.4 \n 383 468   423   \n 384 400   452   \n 385 369   358   \n 386 272   396   \n 387 241   261   \n 388 653   435   \n 389 488   438   \n 390 273   372   \n 391 566   394   \n 392 762   381   \n 393 536   386   \n 394 270   234   \n 395 507   444   \n 396 113.   86.5 \n 397 105.  107.  \n 398 221   259   \n 399 187   135   \n 400 507   398   \n 401 577   414   \n 402 741   389   \n 403 660   446   \n 404 570   429   \n 405 295   269   \n 406 252   244   \n 407 245   258   \n 408 463   423   \n 409 334   237   \n 410 799   333   \n 411 452   460   \n 412 553   376   \n 413 124.   93   \n 414 168   204   \n 415 639   451   \n 416 356   426   \n 417 243   263   \n 418  93.1  77.4 \n 419 283   273   \n 420 621   407   \n 421 241   253   \n 422 331   323   \n 423 289   411   \n 424 148.  129.  \n 425 783   328   \n 426 217   155   \n 427 130.   39.7 \n 428 266   281   \n 429 785   325   \n 430 248   239   \n 431  91.8  41   \n 432 612   457   \n 433 246   343   \n 434 688   417   \n 435 137.   26.7 \n 436 612   420   \n 437  98.3 179.  \n 438 110    48.8 \n 439 408   427   \n 440 457   443   \n 441 149    91.7 \n 442 326   407   \n 443 423   412   \n 444 148.   83.9 \n 445 142.  152.  \n 446 141.   55.3 \n 447 176.  101.  \n 448 423   413   \n 449 181   223   \n 450 462   475   \n 451 657   415   \n 452 550   378   \n 453 586   386   \n 454 500   413   \n 455 344   322   \n 456 545   462   \n 457 172.   73.5 \n 458 599   460   \n 459 750   391   \n 460 282   273   \n 461 806   331   \n 462 319   393   \n 463 123   132   \n 464  99.6 161.  \n 465 396   439   \n 466 458   479   \n 467 222   169   \n 468 263   258   \n 469 547   469   \n 470 305   337   \n 471 174.   90.4 \n 472 292   395   \n 473 107.   93   \n 474 193   135   \n 475 670   447   \n 476 269   233   \n 477 166   228   \n 478 123   109.  \n 479 391   443   \n 480 811   322   \n 481 331   411   \n 482 174   244   \n 483 221   236   \n 484 167   177   \n 485 490   410   \n 486 273   239   \n 487 469   417   \n 488 269   243   \n 489 730   385   \n 490 272   335   \n 491 405   379   \n 492 529   460   \n 493 702   426   \n 494 502   465   \n 495 436   391   \n 496 635   402   \n 497 161   153   \n 498 198   219   \n 499 784   326   \n 500 221   188   \n 501 343   347   \n 502  69.7 107.  \n 503 369   402   \n 504  56.7 106   \n 505 155   196   \n 506 178   174   \n 507 659   420   \n 508 105.   99.5 \n 509 209   141   \n 510 370   442   \n 511 136    30.6 \n 512 211   147   \n 513 237   191   \n 514 176.  114.  \n 515 405   399   \n 516 703   426   \n 517 691   415   \n 518 518   467   \n 519 763   380   \n 520 184   238   \n 521 241   229   \n 522 276   378   \n 523 120.   93   \n 524  93.1  90.4 \n 525 368   323   \n 526 445   394   \n 527 120.   56.6 \n 528 110    34.5 \n 529 168.  109.  \n 530 332   366   \n 531 169   229   \n 532 797   334   \n 533 368   430   \n 534 757   364   \n 535 284   291   \n 536 429   471   \n 537 479   482   \n 538 308   408   \n 539 398   437   \n 540 255   301   \n 541 160   165   \n 542 148   215   \n 543 818   309   \n 544 162   167   \n 545 466   397   \n 546 170.   76.1 \n 547 115.   60.5 \n 548 173   143   \n 549 558   434   \n 550 226   210   \n 551  95.7  65.7 \n 552 168.   18.9 \n 553 263   367   \n 554 139.   25.4 \n 555 217   223   \n 556 819   286   \n 557 156.  116.  \n 558 118.   93   \n 559 482   473   \n 560 278   247   \n 561 220   257   \n 562 392   454   \n 563 729   385   \n 564 122.  106   \n 565 596   408   \n 566 372   435   \n 567 762   351   \n 568 318   346   \n 569 570   465   \n 570 325   355   \n 571 569   412   \n 572 557   428   \n 573 522   394   \n 574 151   227   \n 575 193   145   \n 576 608   394   \n 577 372   389   \n 578 164   224   \n 579 769   344   \n 580 362   312   \n 581 400   379   \n 582 225   232   \n 583 334   413   \n 584 364   412   \n 585 153.   34.5 \n 586 551   383   \n 587 427   407   \n 588 116.  162.  \n 589 163   181   \n 590 380   400   \n 591 797   305   \n 592 245   237   \n 593 391   454   \n 594 364   437   \n 595 163   148   \n 596 165   174   \n 597 154.  119   \n 598 344   323   \n 599 148.   91.7 \n 600 136   205   \n 601 567   435   \n 602 293   266   \n 603 541   383   \n 604 236   278   \n 605 625   391   \n 606 237   279   \n 607 175   221   \n 608 325   384   \n 609 271   293   \n 610 115.   73.5 \n 611 283   371   \n 612 262   298   \n 613 486   472   \n 614 273   396   \n 615 698   431   \n 616 548   477   \n 617 148   183   \n 618 581   435   \n 619 647   449   \n 620 149    55.3 \n 621 366   366   \n 622 768   345   \n 623 476   398   \n 624 561   374   \n 625 267   361   \n 626 312   289   \n 627 265   280   \n 628 171   183   \n 629 266   312   \n 630 154.  120.  \n 631 735   404   \n 632 531   442   \n 633 595   460   \n 634 817   311   \n 635 276   386   \n 636 821   301   \n 637 584   386   \n 638 110    24.1 \n 639 297   402   \n 640 512   440   \n 641 592   446   \n 642 493   410   \n 643 171.  110.  \n 644 819   285   \n 645 107.  141.  \n 646 306   281   \n 647 606   390   \n 648 187   142   \n 649 376   360   \n 650 418   445   \n 651 141.   48.8 \n 652 612   421   \n 653 352   373   \n 654 511   442   \n 655 574   478   \n 656 116.   74.8 \n 657 279   247   \n 658 696   432   \n 659 564   412   \n 660 273   284   \n 661 111.   21.5 \n 662 484   473   \n 663 212   160   \n 664 257   272   \n 665 709   403   \n 666 319   299   \n 667 179   203   \n 668 341   326   \n 669 172.  103.  \n 670 434   421   \n 671 227   254   \n 672 142.   11.1 \n 673 589   386   \n 674 794   309   \n 675 140.  135.  \n 676 153.  103.  \n 677 335   414   \n 678 299   416   \n 679 164   140   \n 680 143   199   \n 681 757   375   \n 682 655   413   \n 683 308   400   \n 684 783   327   \n 685 476   481   \n 686 417   399   \n 687 521   463   \n 688 284   282   \n 689 327   311   \n 690 119.   93   \n 691 165.  107.  \n 692 591   386   \n 693 738   402   \n 694 160   198   \n 695 308   411   \n 696 740   387   \n 697 169   214   \n 698 459   407   \n 699 156.   94.3 \n 700 114.   17.6 \n 701 149   140.  \n 702 295   366   \n 703 233   273   \n 704 796   306   \n 705 495   466   \n 706 115.   25.4 \n 707 218   254   \n 708 502   398   \n 709 358   433   \n 710 114.   77.4 \n 711 127.   57.9 \n 712 105.   98.2 \n 713 371   408   \n 714 818   308   \n 715 544   434   \n 716 647   448   \n 717 289   336   \n 718 133.  158   \n 719 279   248   \n 720 690   435   \n 721 288   289   \n 722 127.    9.80\n 723 338   351   \n 724 167.  109.  \n 725 337   322   \n 726 250   263   \n 727 636   444   \n 728 302   296   \n 729 105.  127.  \n 730 543   388   \n 731 184   161   \n 732 171.   73.5 \n 733 122.   77.4 \n 734 226   266   \n 735 257   357   \n 736 777   334   \n 737 177   172   \n 738 176.   95.6 \n 739 187   134   \n 740 602   389   \n 741 753   363   \n 742 778   334   \n 743 571   436   \n 744 376   439   \n 745 123   146.  \n 746 641   415   \n 747 253   315   \n 748 652   410   \n 749 589   460   \n 750 603   390   \n 751 128.   60.5 \n 752 290   300   \n 753  94.4 141.  \n 754 277   292   \n 755 191   142   \n 756 348   373   \n 757 294   306   \n 758 231   241   \n 759 789   330   \n 760 645   459   \n 761 293   275   \n 762 587   444   \n 763 401   392   \n 764 144   199   \n 765 500   468   \n 766  76.2 161.  \n 767 140.    3.30\n 768 141.   47.5 \n 769 448   476   \n 770 468   401   \n 771 136     7.20\n 772 394   387   \n 773 119.   42.3 \n 774 345   347   \n 775 792   341   \n 776 149    29.3 \n 777 249   301   \n 778 566   420   \n 779 128.   29.3 \n 780 157.   95.6 \n 781 440   392   \n 782 183   159   \n 783 266   389   \n 784 403   433   \n 785 327   409   \n 786 144.  133.  \n 787 615   408   \n 788 637   408   \n 789 163   140   \n 790 291   381   \n 791 258   345   \n 792 462   426   \n 793 229   239   \n 794 140.   39.7 \n 795 257   251   \n 796 822   300   \n 797  60.6  86.5 \n 798 318   403   \n 799  78.8  47.5 \n 800 264   227   \n 801 487   442   \n 802 362   328   \n 803 545   391   \n 804 563   393   \n 805  81.4  93   \n 806 372   428   \n 807 420   386   \n 808 116.   22.8 \n 809 288   258   \n 810 593   451   \n 811 284   361   \n 812 519   395   \n 813 498   416   \n 814 698   430   \n 815 454   410   \n 816 164   245   \n 817 141.   39.7 \n 818 307   317   \n 819 175    69.6 \n 820 644   428   \n 821 208   239   \n 822 728   403   \n 823 274   275   \n 824 180.   46.2 \n 825 331   316   \n 826 566   395   \n 827 592   452   \n 828 336   415   \n 829 422   401   \n 830  91.8  72.2 \n 831 180   225   \n 832 312   290   \n 833 283   370   \n 834 357   334   \n 835 279   274   \n 836 613   418   \n 837 344   339   \n 838 771   352   \n 839 420   385   \n 840 284   261   \n 841 775   368   \n 842 489   434   \n 843 137.    2   \n 844 209   143   \n 845 136   159.  \n 846 153   169   \n 847 167.   44.9 \n 848 271   262   \n 849 707   405   \n 850 583   391   \n 851 367   356   \n 852 254   269   \n 853 155   205   \n 854 128.   39.7 \n 855 110    89.1 \n 856 566   444   \n 857 389   373   \n 858 152   219   \n 859 145.   22.8 \n 860 242   254   \n 861 676   424   \n 862 132.   61.8 \n 863 185   205   \n 864 135.   34.5 \n 865 468   424   \n 866  86.6  78.7 \n 867 145.   95.6 \n 868 697   412   \n 869 145   187   \n 870 220   250   \n 871 260   372   \n 872 768   344   \n 873 272   253   \n 874  95.7 158   \n 875 590   386   \n 876 213   165   \n 877 793   332   \n 878 707   411   \n 879 295   268   \n 880 747   395   \n 881 217   253   \n 882 137.   35.8 \n 883 433   472   \n 884 230   182   \n 885 168.   77.4 \n 886 154   217   \n 887 283   352   \n 888 607   415   \n 889 447   471   \n 890 170.  116.  \n 891 191   151   \n 892 639   460   \n 893 105.  112.  \n 894 195   147   \n 895 562   385   \n 896 284   290   \n 897 145.   20.2 \n 898 305   326   \n 899 238   225   \n 900 380   447   \n 901 614   403   \n 902 130.  168.  \n 903 460   448   \n 904 152.   37.1 \n 905 123   107.  \n 906 130.  162.  \n 907 149   185   \n 908 310   299   \n 909 180   151   \n 910 674   433   \n 911 167.   80   \n 912  91.8 161.  \n 913 174   211   \n 914 402   385   \n 915 130.   38.4 \n 916 122.   20.2 \n 917 175   239   \n 918 248   357   \n 919 180.   50.1 \n 920 330   314   \n 921 153   193   \n 922 290   261   \n 923 724   406   \n 924 109.   57.9 \n 925 411   396   \n 926 350   337   \n 927 560   422   \n 928 174.  114.  \n 929 165   175   \n 930 257   333   \n 931 304   286   \n 932 265   383   \n 933 110    77.4 \n 934 634   408   \n 935 267   312   \n 936 106.   95.6 \n 937 459   400   \n 938 625   395   \n 939 165.   87.8 \n 940  76.2 111.  \n 941 648   430   \n 942  93.1  56.6 \n 943 241   204   \n 944 252   319   \n 945 280   249   \n 946 635   401   \n 947 249   326   \n 948 115.  150.  \n 949 146.   93   \n 950 306   292   \n 951 130.  135.  \n 952 335   415   \n 953 283   253   \n 954  93.1  47.5 \n 955 351   373   \n 956  94.4 172.  \n 957 415   397   \n 958 424   463   \n 959 412   420   \n 960 421   462   \n 961 376   395   \n 962 311   298   \n 963 433   422   \n 964 139.   26.7 \n 965 766   376   \n 966 158.  116.  \n 967  76.2  51.4 \n 968 561   428   \n 969 195   196   \n 970 201   198   \n 971 178.  106   \n 972 247   238   \n 973 580   476   \n 974  55.4  93   \n 975 820   286   \n 976 131.  144.  \n 977 163   240   \n 978 580   386   \n 979 137.  154.  \n 980 320   300   \n 981 371   358   \n 982 382   449   \n 983 596   448   \n 984 359   349   \n 985 324   323   \n 986 330   410   \n 987 127.  133.  \n 988 407   428   \n 989 356   341   \n 990 222   224   \n 991 266   228   \n 992 251   264   \n 993 562   442   \n 994 562   374   \n 995 215   251   \n 996 119.   74.8 \n 997 511   445   \n 998 471   481   \n 999 179.   56.6 \n1000 327   408   \n1001 250   322   \n1002 196   154   \n1003 150.  126.  \n1004 314   293   \n1005 124.   42.3 \n1006 282   389   \n1007 410   425   \n1008 139.   38.4 \n1009 216   208   \n1010 597   387   \n1011 180.   47.5 \n1012 382   430   \n1013 160   144   \n1014 148.   93   \n1015 346   333   \n1016 271   283   \n1017 271   395   \n1018 247   352   \n1019 420   420   \n1020 200   130   \n1021 797   306   \n1022 661   431   \n1023 292   303   \n1024 219   191   \n1025 211   240   \n1026 467   397   \n1027 220   214   \n1028 375   397   \n1029 358   395   \n1030 247   296   \n1031 130.   95.6 \n1032 641   459   \n1033 352   397   \n1034 167.   18.9 \n1035 167.   78.7 \n1036 155   195   \n1037 165.   48.8 \n1038  78.8 167.  \n1039 167   144   \n1040 271   294   \n1041  74.9 132   \n1042 157   158   \n1043 532   389   \n1044 105.  103.  \n1045 585   386   \n1046 175    37.1 \n1047 175    91.7 \n1048 308   300   \n1049 212   150   \n1050 250   301   \n1051 418   454   \n1052 649   408   \n1053 268   232   \n1054 412   450   \n1055 139.   57.9 \n1056 258   274   \n1057 634   400   \n1058 275   278   \n1059 463   408   \n1060 450   395   \n1061 583   475   \n1062 719   400   \n1063  80.1  46.2 \n1064 434   431   \n1065 355   431   \n1066 380   383   \n1067 219   172   \n1068 270   394   \n1069 123   175.  \n1070 289   327   \n1071 336   416   \n1072 218   172   \n1073 309   405   \n1074 316   343   \n1075 350   338   \n1076 310   322   \n1077 252   339   \n1078 270   325   \n1079 503   455   \n1080 801   339   \n1081 734   381   \n1082 324   389   \n1083 163.   99.5 \n1084 269   268   \n1085 216   170   \n1086 275   269   \n1087 156   153   \n1088 178.   41   \n1089 245   226   \n1090 214   240   \n1091 474   413   \n1092 491   446   \n1093 140.   55.3 \n1094 672   427   \n1095 427   464   \n1096 568   479   \n1097 149   103.  \n1098 111.  126.  \n1099 130.    2   \n1100 617   409   \n1101 309   285   \n1102 253   298   \n1103 756   359   \n1104 454   457   \n1105 551   377   \n1106 263   249   \n1107 128.   94.3 \n1108 787   347   \n1109 540   383   \n1110 508   440   \n1111 197   196   \n1112 102.   44.9 \n1113 268   267   \n1114 164   173   \n1115 446   476   \n1116 176   144   \n1117 359   308   \n1118 731   407   \n1119 153.   86.5 \n1120 164   199   \n1121 283   252   \n1122 146   172   \n1123 790   344   \n1124 584   475   \n1125 302   303   \n1126 800   300   \n1127 327   358   \n1128 241   285   \n1129 587   475   \n1130 237   190   \n1131 365   438   \n1132 654   411   \n1133 150.   29.3 \n1134 602   427   \n1135 563   480   \n1136 282   250   \n1137 127.   30.6 \n1138 333   370   \n1139 300   282   \n1140 221   175   \n1141 411   458   \n1142  81.4  57.9 \n1143 770   351   \n1144 550   466   \n1145 748   392   \n1146 165.   82.6 \n1147 105.  105.  \n1148 499   461   \n1149 179   202   \n1150 107.   63.1 \n1151 266   280   \n1152 265   312   \n1153 234   257   \n1154 309   336   \n1155 355   379   \n1156 819   308   \n1157 306   317   \n1158 354   307   \n1159 711   415   \n1160 144   185   \n1161 270   395   \n1162 527   451   \n1163 702   419   \n1164 116.   99.5 \n1165 747   368   \n1166 577   470   \n1167 122.  131.  \n1168 230   263   \n1169 704   425   \n1170 366   362   \n1171 102.   63.1 \n1172 146.   48.8 \n1173 149   233   \n1174  51.5 112.  \n1175 106.   67   \n1176 116.  152.  \n1177 312   322   \n1178 744   380   \n1179 131.  135.  \n1180 767   375   \n1181 155   169   \n1182  86.6 163.  \n1183 701   418   \n1184 255   311   \n1185 157   197   \n1186 642   440   \n1187 230   240   \n1188 153.   57.9 \n1189 796   334   \n1190 176.   93   \n1191 560   374   \n1192 723   405   \n1193 304   295   \n1194  95.7  64.4 \n1195 658   424   \n1196 146.   94.3 \n1197 142.  103.  \n1198 174.  115.  \n1199 157.  129.  \n1200 161   198   \n1201 350   428   \n1202 349   427   \n1203 192   130   \n1204 282   379   \n1205 296   370   \n1206 349   373   \n1207 167   204   \n1208  97   166.  \n1209  54.1  94.3 \n1210 622   452   \n1211 170.   77.4 \n1212 349   337   \n1213 111.  161.  \n1214 740   388   \n1215 345   322   \n1216  87.9  90.4 \n1217  93.1 159.  \n1218 124.  109.  \n1219 808   286   \n1220 565   408   \n1221 165   200   \n1222 332   397   \n1223 274   326   \n1224 180.  180.  \n1225 198   196   \n1226 462   397   \n1227 161.   52.7 \n1228 429   391   \n1229 332   367   \n1230 247   260   \n1231 119.   20.2 \n1232 332   325   \n1233 796   307   \n1234 795   346   \n1235 159   243   \n1236 296   334   \n1237 218   255   \n1238 382   378   \n1239 119.  131.  \n1240 436   473   \n1241 752   364   \n1242 328   387   \n1243 160   238   \n1244 150.   37.1 \n1245 495   482   \n1246 267   246   \n1247 464   437   \n1248  64.5 120.  \n1249 102.  146.  \n1250 265   323   \n1251 122.  155.  \n1252 743   398   \n1253 154.   57.9 \n1254 618   468   \n1255 264   298   \n1256 445   459   \n1257 798   304   \n1258 150.   38.4 \n1259 361   317   \n1260 220   190   \n1261 163.   48.8 \n1262 560   382   \n1263 350   393   \n1264 185   154   \n1265 585   475   \n1266 251   306   \n1267 252   232   \n1268 599   446   \n1269 319   348   \n1270 273   338   \n1271 667   449   \n1272 579   421   \n1273 765   379   \n1274 306   337   \n1275 146.  102.  \n1276 146.   46.2 \n1277 546   470   \n1278 334   353   \n1279 132.  153.  \n1280 123    56.6 \n1281 326   339   \n1282  77.5  48.8 \n1283 149   170   \n1284 196   207   \n1285 131.   38.4 \n1286 502   479   \n1287 128.   16.3 \n1288 653   427   \n1289 396   457   \n1290 130.  170.  \n1291 150   188   \n1292 120.   77.4 \n1293 242   262   \n1294 491   419   \n1295 123    35.8 \n1296 136    16.3 \n1297 355   336   \n1298 366   438   \n1299 307   327   \n1300 397   457   \n1301 111.   39.7 \n1302 613   389   \n1303 153.  105.  \n1304 776   344   \n1305  80.1  47.5 \n1306 468   426   \n1307  81.4  39.7 \n1308 139.   94.3 \n1309 152   200   \n1310 470   409   \n1311 798   343   \n1312 309   286   \n1313 289   278   \n1314 238   192   \n1315 148   199   \n1316 786   323   \n1317 152.   35.8 \n1318 109.   29.3 \n1319 102.  178.  \n1320 581   386   \n1321 364   368   \n1322 271   362   \n1323 774   354   \n1324 573   425   \n1325 101.  178.  \n1326 383   360   \n1327 303   321   \n1328 163.   86.5 \n1329 754   388   \n1330 727   410   \n1331  58    89.1 \n1332 133.   85.2 \n1333 593   392   \n1334 348   336   \n1335 466   432   \n1336 302   338   \n1337 749   392   \n1338 385   380   \n1339 198   218   \n1340 411   463   \n1341 253   314   \n1342 416   406   \n1343 429   465   \n1344 292   302   \n1345 516   401   \n1346 422   387   \n1347 162    18.9 \n1348 653   425   \n1349 105.   64.4 \n1350 195   216   \n1351 109.   28   \n1352 148.   28   \n1353 253   367   \n1354 116.  128.  \n1355 182.  180.  \n1356  94.4 138.  \n1357 162    35.8 \n1358 119.   59.2 \n1359 755   372   \n1360 136    60.5 \n1361 627   450   \n1362 628   410   \n1363 184   197   \n1364 235   276   \n1365 184   160   \n1366  76.2 154.  \n1367 106.   93   \n1368 120.  105.  \n1369  63.2 145   \n1370 263   233   \n1371 210   245   \n1372 542   482   \n1373 170   179   \n1374 440   474   \n1375 580   449   \n1376 340   379   \n1377 180.   55.3 \n1378 149   115.  \n1379 116.   59.2 \n1380 503   402   \n1381 566   404   \n1382 552   435   \n1383 192   142   \n1384 423   468   \n1385 811   323   \n1386 635   408   \n1387 265   298   \n1388 642   459   \n1389 329   314   \n1390 110    25.4 \n1391 286   375   \n1392 443   475   \n1393 260   307   \n1394 771   342   \n1395 176.   65.7 \n1396 219   256   \n1397 340   420   \n1398 170   183   \n1399 128.   28   \n1400  71   158   \n1401 566   454   \n1402 320   385   \n1403 261   372   \n1404 361   310   \n1405 171.   39.7 \n1406 297   339   \n1407 340   350   \n1408 151   175   \n1409 292   393   \n1410 814   316   \n1411 115.   85.2 \n1412 440   404   \n1413 478   409   \n1414 119.   43.6 \n1415 105.  102.  \n1416 614   402   \n1417 451   452   \n1418 819   307   \n1419 172.  115.  \n1420 341   328   \n1421 672   446   \n1422 105.  142.  \n1423 266   387   \n1424 619   468   \n1425 361   311   \n1426 295   339   \n1427 286   341   \n1428 716   418   \n1429 367   331   \n1430 246   337   \n1431 140   204   \n1432 145   199   \n1433 146.  101.  \n1434 591   441   \n1435 297   270   \n1436 253   267   \n1437 171   245   \n1438 187   143   \n1439 122.   43.6 \n1440 252   236   \n1441 407   379   \n1442 246   342   \n1443 415   455   \n1444 136   136.  \n1445 127.   93   \n1446 342   362   \n1447 105.  106   \n1448 373   369   \n1449 282   397   \n1450 693   419   \n1451 337   383   \n1452 265   384   \n1453 229   270   \n1454 287   310   \n1455  82.7 140.  \n1456 567   416   \n1457  54.1 129.  \n1458 618   454   \n1459  86.6  65.7 \n1460 226   209   \n1461 149   177   \n1462 487   399   \n1463 105.  114.  \n1464 207   238   \n1465 517   406   \n1466  65.8 141.  \n1467 782   352   \n1468 389   420   \n1469 122.    7.20\n1470 167   245   \n1471 136    35.8 \n1472  74.9 155.  \n1473 301   416   \n1474 545   398   \n1475 259   297   \n1476 130.  141.  \n1477 387   452   \n1478 277   272   \n1479 251   209   \n1480 353   396   \n1481 178   146   \n1482 274   379   \n1483 361   436   \n1484 607   390   \n1485 124.   56.6 \n1486 566   401   \n1487 275   277   \n1488 382   376   \n1489 782   363   \n1490 782   329   \n1491 761   353   \n1492 518   477   \n1493 407   389   \n1494 753   383   \n1495 213   240   \n1496 154   211   \n1497 173   199   \n1498 739   401   \n1499 570   376   \n1500 141.   46.2 \n1501 406   461   \n1502 154.   91.7 \n1503 523   459   \n1504  77.5 154.  \n1505 141   195   \n1506 788   319   \n1507 157.   33.2 \n1508 459   474   \n1509 124.  132   \n1510 462   412   \n1511  54.1 112.  \n1512 175   143   \n1513 304   294   \n1514 394   415   \n1515 470   397   \n1516 205   242   \n1517 563   414   \n1518 266   329   \n1519 282   377   \n1520 537   437   \n1521 127.   82.6 \n1522 157   159   \n1523 608   403   \n1524 743   379   \n1525 153.  123.  \n1526 394   450   \n1527 169   178   \n1528 137.  135.  \n1529 681   422   \n1530 599   431   \n1531 270   261   \n1532 110   163.  \n1533 601   389   \n1534 239   201   \n1535 619   389   \n1536  77.5  56.6 \n1537 646   429   \n1538 463   440   \n1539 258   349   \n1540 385   366   \n1541 231   216   \n1542 370   372   \n1543 435   417   \n1544 169   240   \n1545 137.   37.1 \n1546 679   423   \n1547 397   439   \n1548 693   428   \n1549 250   358   \n1550 680   442   \n1551 110   141.  \n1552 554   384   \n1553  69.7 161.  \n1554  68.4 112.  \n1555 326   310   \n1556 144.   20.2 \n1557 239   249   \n1558 256   215   \n1559 709   409   \n1560 426   446   \n1561 600   471   \n1562 416   455   \n1563 292   362   \n1564 331   365   \n1565 235   221   \n1566 786   357   \n1567 793   312   \n1568 156   241   \n1569 273   383   \n1570 177   239   \n1571 345   331   \n1572 804   291   \n1573 168   214   \n1574 558   481   \n1575 182   143   \n1576 304   303   \n1577 186   156   \n1578 178.  105.  \n1579 743   380   \n1580 291   412   \n1581 239   251   \n1582 119.  145   \n1583 212   154   \n1584 609   427   \n1585 218   226   \n1586 577   477   \n1587 122.   21.5 \n1588 783   361   \n1589 410   463   \n1590 520   395   \n1591 616   414   \n1592 555   459   \n1593 116.   60.5 \n1594 451   461   \n1595 519   410   \n1596 598   388   \n1597 369   329   \n1598 116.   98.2 \n1599 146   173   \n1600  65.8 115.  \n1601  97    43.6 \n1602 228   191   \n1603 285   405   \n1604 328   311   \n1605 293   305   \n1606 221   176   \n1607 153   218   \n1608 530   476   \n1609 101.   69.6 \n1610 268   282   \n1611 142   200   \n1612  84   145   \n1613 157.   96.9 \n1614 797   344   \n1615 407   462   \n1616  86.6  50.1 \n1617 670   427   \n1618 751   364   \n1619 270   269   \n1620 218   228   \n1621 722   392   \n1622 386   364   \n1623 636   408   \n1624 525   405   \n1625 698   411   \n1626 304   415   \n1627 449   476   \n1628 176.   41   \n1629 582   386   \n1630 724   412   \n1631 159   145   \n1632 713   400   \n1633 646   446   \n1634 726   405   \n1635 126.  133.  \n1636  78.8 166.  \n1637 510   402   \n1638 159   176   \n1639 368   440   \n1640 613   401   \n1641 472   413   \n1642 286   280   \n1643 310   286   \n1644 725   390   \n1645 436   415   \n1646 162   159   \n1647 653   410   \n1648 427   433   \n1649 111.   37.1 \n1650 141.   54   \n1651 251   206   \n1652 168.   41   \n1653 137.   59.2 \n1654 549   459   \n1655 389   453   \n1656  94.4  86.5 \n1657 269   314   \n1658 653   420   \n1659 124.   33.2 \n1660 723   413   \n1661 256   270   \n1662 570   377   \n1663 116.   85.2 \n1664 367   440   \n1665 462   429   \n1666 345   424   \n1667 649   407   \n1668 266   230   \n1669 627   465   \n1670 293   265   \n1671 807   287   \n1672 201   236   \n1673 244   235   \n1674 793   348   \n1675 290   269   \n1676 127.  150.  \n1677 286   354   \n1678 728   409   \n1679  61.9 115.  \n1680 299   387   \n1681 317   345   \n1682 150.   52.7 \n1683 761   382   \n1684 653   411   \n1685 192   135   \n1686 178.  112.  \n1687 588   443   \n1688 408   452   \n1689 126.   93   \n1690 166.   80   \n1691 190   158   \n1692 376   377   \n1693 176.   91.7 \n1694 154   239   \n1695 566   398   \n1696 283   402   \n1697 623   407   \n1698 693   413   \n1699 382   388   \n1700 402   459   \n1701 465   408   \n1702  54.1 119   \n1703 119.  103.  \n1704 244   287   \n1705 583   386   \n1706 281   257   \n1707 509   398   \n1708 132.   78.7 \n1709 362   338   \n1710 192   196   \n1711 137.   80   \n1712 272   284   \n1713  82.7  81.3 \n1714 227   195   \n1715 225   184   \n1716 470   476   \n1717 110    87.8 \n1718 349   408   \n1719 548   379   \n1720 227   202   \n1721 807   330   \n1722 181   203   \n1723 115.   31.9 \n1724 109.   46.2 \n1725 210   244   \n1726 106.   94.3 \n1727 395   387   \n1728 148   180   \n1729 136   209   \n1730 289   333   \n1731 104.  150.  \n1732 218   162   \n1733 344   316   \n1734 140   216   \n1735 122.  132   \n1736 598   397   \n1737 380   448   \n1738 576   471   \n1739 176   139   \n1740 105.   65.7 \n1741 152.   29.3 \n1742 685   438   \n1743 641   441   \n1744 467   428   \n1745  94.4 175.  \n1746 504   479   \n1747 578   385   \n1748 794   347   \n1749 176.   99.5 \n1750 260   353   \n1751 157   151   \n1752  63.2 131.  \n1753 215   213   \n1754 613   402   \n1755 404   439   \n1756 213   248   \n1757 176.   94.3 \n1758 263   280   \n1759  99.6 162.  \n1760 249   262   \n1761 466   475   \n1762 325   406   \n1763 633   446   \n1764 365   393   \n1765 273   384   \n1766 289   322   \n1767 625   411   \n1768 300   338   \n1769 231   215   \n1770 193   213   \n1771 595   450   \n1772 753   389   \n1773 106.  175.  \n1774  58    95.6 \n1775 623   390   \n1776 156   196   \n1777 126.   42.3 \n1778 185   161   \n1779 455   478   \n1780 467   480   \n1781 157.   31.9 \n1782 171   138   \n1783 292   372   \n1784 198   134   \n1785 243   286   \n1786 554   386   \n1787 278   254   \n1788 339   369   \n1789 261   364   \n1790 498   419   \n1791 172   179   \n1792 222   225   \n1793 607   458   \n1794 306   414   \n1795 124.  133.  \n1796 493   440   \n1797 431   402   \n1798 537   386   \n1799 356   312   \n1800 252   274   \n1801 126.   57.9 \n1802 196   130   \n1803 249   279   \n1804 388   453   \n1805 274   324   \n1806 552   463   \n1807 787   322   \n1808 552   377   \n1809 567   479   \n1810 114.   60.5 \n1811 286   257   \n1812 717   412   \n1813 175    35.8 \n1814 107.   54   \n1815 461   479   \n1816 700   410   \n1817 410   395   \n1818 165   227   \n1819 533   473   \n1820 787   335   \n1821 496   399   \n1822 212   246   \n1823 445   475   \n1824 789   337   \n1825 417   460   \n1826 164   162   \n1827 339   338   \n1828 815   316   \n1829 274   252   \n1830 264   378   \n1831 378   401   \n1832  97   168.  \n1833 148.  103.  \n1834 501   468   \n1835 818   284   \n1836 715   418   \n1837 164   225   \n1838 130.   94.3 \n1839 120.  131.  \n1840 265   382   \n1841 558   448   \n1842 787   356   \n1843 176.   98.2 \n1844 504   461   \n1845 298   313   \n1846 593   460   \n1847 286   406   \n1848 269   331   \n1849 165   245   \n1850 359   434   \n1851 415   410   \n1852 308   409   \n1853 365   392   \n1854 477   482   \n1855 423   388   \n1856 555   482   \n1857 553   442   \n1858 334   374   \n1859  67.1 146.  \n1860 188   163   \n1861 609   457   \n1862 784   359   \n1863 613   399   \n1864 127.   59.2 \n1865 144.  132   \n1866 131.  148.  \n1867 171   168   \n1868  76.2  54   \n1869 574   396   \n1870 540   384   \n1871 613   456   \n1872 742   399   \n1873 369   328   \n1874 239   250   \n1875 293   396   \n1876 686   437   \n1877 244   288   \n1878 272   332   \n1879 608   410   \n1880 560   445   \n1881  82.7  57.9 \n1882 333   395   \n1883 596   473   \n1884 246   346   \n1885 183   238   \n1886 259   220   \n1887 252   361   \n1888 159.  122.  \n1889 253   365   \n1890 806   332   \n1891 539   482   \n1892 175   181.  \n1893 551   396   \n1894 295   334   \n1895 119.  144.  \n1896 233   193   \n1897 133.  135.  \n1898 107.   91.7 \n1899 127.   15   \n1900 708   404   \n1901 171.   74.8 \n1902 185   242   \n1903 118.   94.3 \n1904 233   218   \n1905 803   335   \n1906 605   433   \n1907 162   151   \n1908 656   414   \n1909 258   358   \n1910 374   433   \n1911 253   245   \n1912 266   247   \n1913 257   340   \n1914 195   236   \n1915 325   389   \n1916  50.2 115.  \n1917 161   155   \n1918 521   394   \n1919 701   428   \n1920 789   327   \n1921 235   245   \n1922 521   410   \n1923 172.   90.4 \n1924 139   195   \n1925 456   445   \n1926 546   379   \n1927 359   316   \n1928 161   216   \n1929 239   193   \n1930 611   396   \n1931 738   377   \n1932 626   396   \n1933 302   319   \n1934 609   389   \n1935 568   416   \n1936 283   380   \n1937 166.   46.2 \n1938 109.   89.1 \n1939 596   435   \n1940 168.   78.7 \n1941 152   192   \n1942  95.7 152.  \n1943 113.   20.2 \n1944  89.2 162.  \n1945 305   415   \n1946 418   399   \n1947 422   388   \n1948 684   439   \n1949 109.   52.7 \n1950 183   147   \n1951 140.   38.4 \n1952 329   313   \n1953 110   170.  \n1954 289   335   \n1955 333   341   \n1956 407   394   \n1957 235   220   \n1958 324   388   \n1959 554   387   \n1960 254   247   \n1961 201   130   \n1962 646   448   \n1963 251   320   \n1964 119.   83.9 \n1965 220   166   \n1966 114.  141.  \n1967 489   482   \n1968 711   421   \n1969 175    68.3 \n1970 387   362   \n1971 220   215   \n1972 569   479   \n1973 205   237   \n1974 597   393   \n1975 335   320   \n1976 458   441   \n1977  99.6  74.8 \n1978 257   328   \n1979 321   302   \n1980 413   396   \n1981 106.  159.  \n1982 254   268   \n1983 594   387   \n1984 265   311   \n1985  56.7 114.  \n1986 237   199   \n1987 162   152   \n1988 231   271   \n1989 315   293   \n1990 421   416   \n1991 685   425   \n1992  58   114.  \n1993 597   447   \n1994 226   202   \n1995 159.   98.2 \n1996 513   397   \n1997 634   446   \n1998 207   243   \n1999 139.   59.2 \n2000 150.  112.  \n2001 130.  109.  \n2002 719   394   \n2003 176.  103.  \n2004 217   203   \n2005 652   437   \n2006 463   442   \n2007 305   332   \n2008 590   454   \n2009 370   441   \n2010 212   240   \n2011 274   276   \n2012 202   135   \n2013 559   432   \n2014 162    99.5 \n2015 216   207   \n2016 311   288   \n2017 354   311   \n2018 287   271   \n2019 625   465   \n2020 427   401   \n2021 691   434   \n2022 802   298   \n2023 190   163   \n2024 265   324   \n2025 461   474   \n2026 106.   64.4 \n2027 610   457   \n2028 123    42.3 \n2029 178.  110.  \n2030 325   390   \n2031 157   215   \n2032 602   404   \n2033 239   208   \n2034 633   408   \n2035 193   196   \n2036 285   406   \n2037 142.    8.5 \n2038 208   244   \n2039 269   295   \n2040 217   204   \n2041 118.   12.4 \n2042  72.3 162.  \n2043 113.   70.9 \n2044 539   384   \n2045 412   422   \n2046 294   345   \n2047 417   454   \n2048 729   409   \n2049 352   310   \n2050  64.5  86.5 \n2051 641   412   \n2052 294   364   \n2053 674   434   \n2054 174   228   \n2055 576   459   \n2056 187   141   \n2057 162   179   \n2058 113.   72.2 \n2059 335   407   \n2060 737   384   \n2061 148   179   \n2062 309   322   \n2063 785   334   \n2064 738   401   \n2065 821   302   \n2066 110    26.7 \n2067 153.  120.  \n2068 170.  115.  \n2069 289   367   \n2070 270   255   \n2071 299   273   \n2072 141.   51.4 \n2073 339   418   \n2074 120.   34.5 \n2075 308   397   \n2076 126.    4.60\n2077 438   391   \n2078  78.8  99.5 \n2079 271   235   \n2080 230   206   \n2081 283   282   \n2082 598   398   \n2083 272   379   \n2084 663   431   \n2085 289   269   \n2086 272   293   \n2087 308   328   \n2088 542   474   \n2089 165.   99.5 \n2090 268   231   \n2091 216   211   \n2092 135.   29.3 \n2093 418   392   \n2094 175    39.7 \n2095 118.  175.  \n2096 289   331   \n2097 153.   35.8 \n2098 104.   44.9 \n2099 359   355   \n2100 530   446   \n2101 588   426   \n2102 284   382   \n2103 490   427   \n2104 131.  146.  \n2105 643   439   \n2106 234   219   \n2107  90.5  39.7 \n2108 171.  103.  \n2109 233   184   \n2110 152.   83.9 \n2111 281   250   \n2112 357   372   \n2113 109.  164.  \n2114 791   315   \n2115 812   320   \n2116 283   401   \n2117 287   257   \n2118 163.   85.2 \n2119 383   395   \n2120 448   464   \n2121 247   351   \n2122 787   321   \n2123 409   394   \n2124 725   389   \n2125 396   451   \n2126 368   410   \n2127 569   461   \n2128  71   157.  \n2129 225   172   \n2130 279   388   \n2131 105.  115.  \n2132 234   276   \n2133 165.   81.3 \n2134 227   236   \n2135 772   342   \n2136 386   365   \n2137 217   240   \n2138 625   396   \n2139 107.   90.4 \n2140 259   352   \n2141 813   284   \n2142 358   333   \n2143 154   194   \n2144 227   267   \n2145 170.   18.9 \n2146 307   282   \n2147 492   445   \n2148 159.  126.  \n2149 589   474   \n2150 364   430   \n2151 304   380   \n2152 252   349   \n2153 294   307   \n2154 325   407   \n2155 115.   24.1 \n2156  87.9 162.  \n2157 554   482   \n2158 640   441   \n2159 531   443   \n2160 148   171   \n2161 545   472   \n2162 168.   90.4 \n2163 294   266   \n2164 459   479   \n2165 463   420   \n2166 654   422   \n2167 657   416   \n2168 324   322   \n2169 144.   18.9 \n2170 116.  101.  \n2171 265   385   \n2172 284   403   \n2173 622   458   \n2174 146   199   \n2175 292   394   \n2176  89.2 155.  \n2177 244   290   \n2178 185   197   \n2179 387   381   \n2180 170.   60.5 \n2181 361   435   \n2182 223   169   \n2183 713   415   \n2184 179   243   \n2185 491   425   \n2186  77.5  50.1 \n2187 357   378   \n2188 593   438   \n2189 166.   81.3 \n2190  90.5 146.  \n2191 574   421   \n2192 333   318   \n2193 296   310   \n2194  87.9  74.8 \n2195 541   479   \n2196 548   482   \n2197 434   432   \n2198 200   197   \n2199 518   476   \n2200 170.   20.2 \n2201 166   245   \n2202 344   423   \n2203 777   348   \n2204 204   136   \n2205 622   460   \n2206 432   391   \n2207 261   308   \n2208 391   385   \n2209 145.   39.7 \n2210  52.8 119   \n2211 114.  166.  \n2212 260   277   \n2213 513   402   \n2214 199   214   \n2215 203   241   \n2216 457   453   \n2217  97    70.9 \n2218 776   347   \n2219 218   198   \n2220 226   233   \n2221 143   214   \n2222 356   307   \n2223 526   453   \n2224 523   480   \n2225 219   239   \n2226 265   262   \n2227 411   400   \n2228 381   425   \n2229 155   174   \n2230 469   402   \n2231 621   453   \n2232 383   372   \n2233 141.   41   \n2234 270   323   \n2235 148.   39.7 \n2236 180.   48.8 \n2237 533   434   \n2238 267   230   \n2239  99.6 178.  \n2240 247   353   \n2241  87.9 150.  \n2242 539   385   \n2243 362   319   \n2244 612   419   \n2245 263   298   \n2246 228   237   \n2247 114.   72.2 \n2248  68.4 132   \n2249 266   264   \n2250 453   473   \n2251  90.5  72.2 \n2252 182   238   \n2253 732   382   \n2254 156.  103.  \n2255 799   303   \n2256 159.   44.9 \n2257 265   380   \n2258 159   204   \n2259 360   371   \n2260 330   390   \n2261 150.  136.  \n2262 221   221   \n2263 163   149   \n2264 604   459   \n2265 136    28   \n2266 202   130   \n2267 159.  124.  \n2268  68.4 146.  \n2269 658   453   \n2270 496   433   \n2271 170.   90.4 \n2272 136   207   \n2273 637   430   \n2274 418   453   \n2275 215   212   \n2276 174.   70.9 \n2277  93.1  41   \n2278 780   365   \n2279 110    37.1 \n2280  93.1  51.4 \n2281 548   460   \n2282 453   400   \n2283 270   235   \n2284 181   204   \n2285 535   415   \n2286 469   413   \n2287 148.   26.7 \n2288 354   407   \n2289 178.   63.1 \n2290 376   368   \n2291 247   354   \n2292 212   137   \n2293 599   388   \n2294 355   432   \n2295 444   405   \n2296 672   440   \n2297 536   387   \n2298 140.  106   \n2299 464   438   \n2300 478   482   \n2301 161.   98.2 \n2302 347   425   \n2303 461   445   \n2304  77.5  82.6 \n2305 197   204   \n2306 216   151   \n2307 186   197   \n2308 158   215   \n2309  85.3 146.  \n2310 326   358   \n2311 300   382   \n2312 746   396   \n2313 646   447   \n2314 237   247   \n2315  91.8  83.9 \n2316 246   272   \n2317 146.   25.4 \n2318 179.   57.9 \n2319 616   409   \n2320 138   196   \n2321 217   170   \n2322 150.  127.  \n2323 217   160   \n2324 178.   61.8 \n2325 630   394   \n2326 276   278   \n2327 533   400   \n2328 667   429   \n2329 226   184   \n2330 601   442   \n2331 676   443   \n2332 267   390   \n2333 246   202   \n2334 332   384   \n2335 360   429   \n2336 198   130   \n2337 354   431   \n2338 250   203   \n2339 255   215   \n2340 210   145   \n2341 281   349   \n2342 220   213   \n2343 366   439   \n2344 174.   69.6 \n2345 477   402   \n2346 485   482   \n2347 790   316   \n2348 127.  142.  \n2349  73.6 140.  \n2350 310   386   \n2351 405   430   \n2352 668   428   \n2353 120.  103.  \n2354 666   434   \n2355 227   175   \n2356 628   393   \n2357 272   237   \n2358 145   175   \n2359 489   437   \n2360 277   387   \n2361 146.   24.1 \n2362 434   407   \n2363 599   414   \n2364 146.   43.6 \n2365 269   356   \n2366 732   406   \n2367 137   197   \n2368 277   271   \n2369 235   277   \n2370 506   458   \n2371 198   213   \n2372 598   394   \n2373 643   428   \n2374 492   482   \n2375 107.   44.9 \n2376 284   351   \n2377 388   369   \n2378 130.  161.  \n2379 361   377   \n2380 101.  171   \n2381 409   462   \n2382 223   178   \n2383 124.    4.60\n2384 233   217   \n2385 102.   52.7 \n2386 748   374   \n2387 308   399   \n2388 534   429   \n2389 253   316   \n2390 350   309   \n2391 577   464   \n2392 469   412   \n2393 115.  128.  \n2394 603   437   \n2395 782   362   \n2396 461   401   \n2397 635   445   \n2398 433   434   \n2399 338   364   \n2400 246   348   \n2401 764   379   \n2402 616   468   \n2403 805   289   \n2404 543   390   \n2405 576   464   \n2406 118.   42.3 \n2407 786   358   \n2408 107.  120.  \n2409  90.5 155.  \n2410 272   334   \n2411 148.   50.1 \n2412 788   321   \n2413 266   339   \n2414 130.  148.  \n2415 284   338   \n2416 789   318   \n2417 240   227   \n2418 218   225   \n2419 775   354   \n2420 658   417   \n2421 361   338   \n2422 645   416   \n2423 498   418   \n2424 724   390   \n2425 341   327   \n2426 192   154   \n2427 740   400   \n2428 363   323   \n2429 148.  102.  \n2430 118.   74.8 \n2431 158   169   \n2432 329   363   \n2433 336   321   \n2434 298   272   \n2435 329   403   \n2436 409   426   \n2437 657   453   \n2438 251   207   \n2439  95.7 141.  \n2440 199   202   \n2441 148.  149.  \n2442 144.   17.6 \n2443 386   369   \n2444 613   468   \n2445 293   414   \n2446 109.   69.6 \n2447 263   260   \n2448 509   452   \n2449 133.   87.8 \n2450 144   183   \n2451 105.  109.  \n2452 339   351   \n2453 176.   39.7 \n2454 312   388   \n2455 264   260   \n2456 328   343   \n2457  84   148.  \n2458 255   214   \n2459 189   204   \n2460 544   482   \n2461 590   474   \n2462 377   427   \n2463  94.4  42.3 \n2464 820   304   \n2465 490   415   \n2466 127.   31.9 \n2467 361   405   \n2468 809   285   \n2469 298   338   \n2470 176.   96.9 \n2471 182.  181.  \n2472 246   295   \n2473 264   311   \n2474 428   407   \n2475 149   152.  \n2476 191   196   \n2477 155   210   \n2478 567   387   \n2479 561   468   \n2480 218   163   \n2481 210   240   \n2482 377   395   \n2483 810   285   \n2484 311   299   \n2485 224   180   \n2486 105.   44.9 \n2487 417   446   \n2488 569   376   \n2489 167   220   \n2490 324   307   \n2491 341   349   \n2492 436   465   \n2493 243   235   \n2494 328   361   \n2495 248   202   \n2496 356   432   \n2497 214   249   \n2498 611   469   \n2499 339   396   \n2500 131.   17.6 \n2501 299   333   \n2502 303   333   \n2503 182   158   \n2504 273   274   \n2505 203   236   \n2506 130.  166.  \n2507 459   440   \n2508 198   203   \n2509 645   437   \n2510 238   248   \n2511 153.  122.  \n2512 346   332   \n2513 720   400   \n2514 214   166   \n2515 424   401   \n2516 104.  166.  \n2517 390   444   \n2518 745   397   \n2519 593   473   \n2520 242   269   \n2521  77.5 145   \n2522 168   245   \n2523 822   291   \n2524 451   477   \n2525 276   279   \n2526 122.   56.6 \n2527 171   224   \n2528 269   282   \n2529 223   228   \n2530 226   183   \n2531 320   349   \n2532 165   226   \n2533 261   373   \n2534 261   353   \n2535 373   434   \n2536 216   148   \n2537 326   390   \n2538 133.   86.5 \n2539 594   425   \n2540 567   461   \n2541 105.   96.9 \n2542 179.   44.9 \n2543 179.   59.2 \n2544 647   429   \n2545 617   389   \n2546 154.  133.  \n2547 369   441   \n2548 231   240   \n2549 443   398   \n2550 604   390   \n2551 452   459   \n2552 306   326   \n2553 264   354   \n2554 162   172   \n2555 579   463   \n2556 147   199   \n2557 491   410   \n2558 247   227   \n2559 144.  114.  \n2560  50.2 118.  \n2561 447   457   \n2562 309   406   \n2563 177   244   \n2564 126.  109.  \n2565 819   306   \n2566 348   416   \n2567 780   350   \n2568 263   311   \n2569 192   212   \n2570 754   368   \n2571 605   422   \n2572 262   224   \n2573 242   222   \n2574 154   233   \n2575 303   378   \n2576 413   456   \n2577 231   190   \n2578 745   382   \n2579 607   430   \n2580 251   235   \n2581 189   196   \n2582 171   173"
  },
  {
    "objectID": "slides/30-visualize.html#summary-statistics-might-help-us",
    "href": "slides/30-visualize.html#summary-statistics-might-help-us",
    "title": "Data Visualization",
    "section": "Summary statistics might help us",
    "text": "Summary statistics might help us\nvar: x\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   50.2   167.2   288.0   346.0   499.8   822.0 \n\n\nvar: y\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    2.0   162.2   314.0   283.3   401.0   482.0 \n\n\ncorrelation between x, y\n\n\n[1] 0.7601536"
  },
  {
    "objectID": "slides/30-visualize.html#who-needs-your-dataviz",
    "href": "slides/30-visualize.html#who-needs-your-dataviz",
    "title": "Data Visualization",
    "section": "Who needs your dataviz?",
    "text": "Who needs your dataviz?\nYou generally visualize data for two types of people:\n\n\nYourself.\nOthers.\n\n\n\nWhen you make dataviz for yourself, your aim is explorative and your goal is to generate as many raw graphs as quickly as possible to gain insights on your data.\n\n\nWhen you make dataviz for others, your aim is communicative and you work to be as clear and as understandable as possible."
  },
  {
    "objectID": "slides/30-visualize.html#exercise",
    "href": "slides/30-visualize.html#exercise",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\nWith the penguin dataset:\n\nMake a histogram of the variable bill_length_mm. Repeat the same histogram, but use colors to differentiate species.\nMake a histogram of bill_depth_mm, but only for female penguins.\nMake a scatterplot of flipper_length_mm vs body_mass_g, use colors to differentiate species.\n\n\n\nGet help from ggplot2‚Äôs documentation.\n\nOn ggplot2‚Äôs book.\nOn R4DS book.\nOn ggplot2‚Äôs website."
  },
  {
    "objectID": "slides/30-visualize.html#a-grammar-of-graphics",
    "href": "slides/30-visualize.html#a-grammar-of-graphics",
    "title": "Data Visualization",
    "section": "A grammar of graphics",
    "text": "A grammar of graphics\n\n\n\n\nggplot2 is one of the main tools for declaring graphics in R.\nIt is based on the grammar of graphics.\nIt can be used both for explorative analysis and for publication ready graphs."
  },
  {
    "objectID": "slides/30-visualize.html#the-grammar-of-graphics",
    "href": "slides/30-visualize.html#the-grammar-of-graphics",
    "title": "Data Visualization",
    "section": "The grammar of graphics",
    "text": "The grammar of graphics\nThe grammar of graphics is a unifying framework to conceptualize and program datavisualization.\nIt states that most graphics are composed of:\n\nA default dataset and set of mappings from variables to aesthetics.\nOne or more layers, with each layer having one geometric object, one statistical transformation, one position adjustment, and optionally, one dataset and set of aesthetic mappings,\nOne scale for each aesthetic mapping used.\nA coordinate system.\nThe facet specification.\n\nHadley Wickham - A Layered Grammar of Graphics, 2010"
  },
  {
    "objectID": "slides/30-visualize.html#lets-put-it-in-practice",
    "href": "slides/30-visualize.html#lets-put-it-in-practice",
    "title": "Data Visualization",
    "section": "Let‚Äôs put it in practice",
    "text": "Let‚Äôs put it in practice\nWe take dataset (penguins) and decide that we want to map a set of variables to aesthetics specification‚Ä¶\n\n\nVariables\n\nbill_length_mm\nbill_depth_mm\nisland\nsex\n\n\nAesthetics\n\nx\ny\ncolour\nshape"
  },
  {
    "objectID": "slides/30-visualize.html#section-6",
    "href": "slides/30-visualize.html#section-6",
    "title": "Data Visualization",
    "section": "",
    "text": "A default dataset‚Ä¶\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot()"
  },
  {
    "objectID": "slides/30-visualize.html#section-7",
    "href": "slides/30-visualize.html#section-7",
    "title": "Data Visualization",
    "section": "",
    "text": "A default dataset and set of mappings from variables to aesthetics.\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n    )"
  },
  {
    "objectID": "slides/30-visualize.html#section-8",
    "href": "slides/30-visualize.html#section-8",
    "title": "Data Visualization",
    "section": "",
    "text": "One or more layers, with each layer having one geometric object‚Ä¶\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point()"
  },
  {
    "objectID": "slides/30-visualize.html#section-9",
    "href": "slides/30-visualize.html#section-9",
    "title": "Data Visualization",
    "section": "",
    "text": "‚Ä¶and a statistical transformation.\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth()"
  },
  {
    "objectID": "slides/30-visualize.html#section-10",
    "href": "slides/30-visualize.html#section-10",
    "title": "Data Visualization",
    "section": "",
    "text": "‚Ä¶and a statistical transformation.\n\n\n\np <- \n  penguins %>% \n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth(method = 'lm')"
  },
  {
    "objectID": "slides/30-visualize.html#section-11",
    "href": "slides/30-visualize.html#section-11",
    "title": "Data Visualization",
    "section": "",
    "text": "The facet specification.\n\n\n\np <- \n  penguins %>%\n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth(method = 'lm') +\n  facet_wrap(facets = 'sex',\n             ncol = 1)"
  },
  {
    "objectID": "slides/30-visualize.html#section-12",
    "href": "slides/30-visualize.html#section-12",
    "title": "Data Visualization",
    "section": "",
    "text": "We can also modify the coordinate system, if needed.\n\n\n\np <- \n  penguins %>%\n  drop_na(species, sex) %>% \n  ggplot(\n    aes(x = bill_length_mm,\n        y = bill_depth_mm,\n        colour = species,\n        shape = sex)\n  ) + \n  geom_point() +\n  geom_smooth(method = 'lm') +\n  facet_wrap(facets = 'sex',\n             ncol = 1) +\n  scale_y_log10()"
  },
  {
    "objectID": "slides/30-visualize.html#exercise-1",
    "href": "slides/30-visualize.html#exercise-1",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\nTake the penguins dataset; make a bar chart that counts how many penguins have been recorded for each species.\n\nwhich variable are you mapping to each aesthetic specification?\nWhich geometric object are you using?\nAre you using a statistical transformation?"
  },
  {
    "objectID": "slides/30-visualize.html#graphical-exploration",
    "href": "slides/30-visualize.html#graphical-exploration",
    "title": "Data Visualization",
    "section": "Graphical exploration",
    "text": "Graphical exploration\nYou can use graphics to learn what‚Äôs inside our data.\n\nFirst, asking questions about data then, plotting them with different visual models to highlight and learn about data patterns, we can go through these two steps iteratively (plot, rinse and repeat)."
  },
  {
    "objectID": "slides/30-visualize.html#visual-models",
    "href": "slides/30-visualize.html#visual-models",
    "title": "Data Visualization",
    "section": "Visual models",
    "text": "Visual models\nA visual model is a specific type of graph, designed for a specific purpose.\n\nggplot provides many basic visual models in its set of geom_* functions.\n\nNiche and advanced visual models can be found in its ecosystem of extensions."
  },
  {
    "objectID": "slides/30-visualize.html#visual-models-1",
    "href": "slides/30-visualize.html#visual-models-1",
    "title": "Data Visualization",
    "section": "Visual models",
    "text": "Visual models\nExamples of visual models used in exploratory data analysis are:\n\n\none variable\n\nbarplots.\nhistograms.\nboxplots.\n\n\ntwo variables\n\nscatterplots.\nheatmaps.\n\n\n\nDon‚Äôt feel limited to these visual models, we learn to program because we want flexibility."
  },
  {
    "objectID": "slides/30-visualize.html#histograms",
    "href": "slides/30-visualize.html#histograms",
    "title": "Data Visualization",
    "section": "Histograms",
    "text": "Histograms\n\npenguins %>% ggplot(aes(x = flipper_length_mm, fill = species)) + geom_histogram()"
  },
  {
    "objectID": "slides/30-visualize.html#histograms-1",
    "href": "slides/30-visualize.html#histograms-1",
    "title": "Data Visualization",
    "section": "Histograms",
    "text": "Histograms\n\npenguins %>% ggplot(aes(x = flipper_length_mm, fill = species)) + geom_histogram()"
  },
  {
    "objectID": "slides/30-visualize.html#boxplots",
    "href": "slides/30-visualize.html#boxplots",
    "title": "Data Visualization",
    "section": "Boxplots",
    "text": "Boxplots\n\n\nRobust summary statistics displayed (median, IQR, outliers).\n\n\n\n\n\nImage source: Wikipedia"
  },
  {
    "objectID": "slides/30-visualize.html#boxplots-1",
    "href": "slides/30-visualize.html#boxplots-1",
    "title": "Data Visualization",
    "section": "Boxplots",
    "text": "Boxplots\n\npenguins %>%\n  ggplot(aes(x = species, y = flipper_length_mm, fill = sex)) + geom_boxplot()"
  },
  {
    "objectID": "slides/30-visualize.html#scatterplots",
    "href": "slides/30-visualize.html#scatterplots",
    "title": "Data Visualization",
    "section": "Scatterplots",
    "text": "Scatterplots\n\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, y= body_mass_g, colour = species)) + geom_point()"
  },
  {
    "objectID": "slides/30-visualize.html#heatmaps",
    "href": "slides/30-visualize.html#heatmaps",
    "title": "Data Visualization",
    "section": "Heatmaps",
    "text": "Heatmaps\n\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, body_mass_g)) +\n  geom_hex(bins = c(20, 20*0.010))"
  },
  {
    "objectID": "slides/30-visualize.html#heatmaps-1",
    "href": "slides/30-visualize.html#heatmaps-1",
    "title": "Data Visualization",
    "section": "Heatmaps",
    "text": "Heatmaps"
  },
  {
    "objectID": "slides/30-visualize.html#heatmaps-2",
    "href": "slides/30-visualize.html#heatmaps-2",
    "title": "Data Visualization",
    "section": "Heatmaps",
    "text": "Heatmaps\n\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, body_mass_g)) +\n  geom_hex(bins = c(20, 20*0.010)) +\n  scale_fill_gradient(low = 'grey70', high = 'blue')"
  },
  {
    "objectID": "slides/30-visualize.html#exercise-2",
    "href": "slides/30-visualize.html#exercise-2",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\nMake a histogram of the continuous variables in the penguins dataset but compute the bin statistics before making the plot.\n\n\nHome | 2022 CBSER Summer School"
  },
  {
    "objectID": "slides/31-correlation.html",
    "href": "slides/31-correlation.html",
    "title": "Notes on Correlation",
    "section": "",
    "text": "For a generic intro to correlation check the links below:\n\nMaking Sense of Data With R - Correlation\nToward Data Science - Pearson vs Spearman Correlation Coefficient"
  },
  {
    "objectID": "slides/31-correlation.html#visualize-first",
    "href": "slides/31-correlation.html#visualize-first",
    "title": "Notes on Correlation",
    "section": "3.1 Visualize first",
    "text": "3.1 Visualize first\nLet‚Äôs say that i would like to measure the correlation between the two variables flipper_length_mm and body_mass_g.\nLet‚Äôs visualize them in a scatterplot first:\n\npenguins %>% \n  ggplot() +\n  aes(x = flipper_length_mm,\n      y = body_mass_g,\n      colour = species) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values (geom_point).\n\n\n\n\n\nIl looks like there‚Äôs strong overall correlation between the two variables, which might be weaker in the Adelie species."
  },
  {
    "objectID": "slides/31-correlation.html#estimate-the-correlation-coefficient",
    "href": "slides/31-correlation.html#estimate-the-correlation-coefficient",
    "title": "Notes on Correlation",
    "section": "3.2 Estimate the correlation coefficient",
    "text": "3.2 Estimate the correlation coefficient\nLet‚Äôs estimate the Pearson correlation coefficient with the function cor().\n\ncor(\n  x = penguins$flipper_length_mm,\n  y = penguins$body_mass_g,\n  use = 'pairwise.complete.obs',\n  method = 'pearson'\n)\n\n[1] 0.8712018\n\n\nWe use the argument use = 'pairwise.complete.obs' to remove observation that have missing values in x or y.\nThe two variables are highly correlated, with a score of 0.87."
  },
  {
    "objectID": "slides/31-correlation.html#stratify-by-species",
    "href": "slides/31-correlation.html#stratify-by-species",
    "title": "Notes on Correlation",
    "section": "3.3 Stratify by species",
    "text": "3.3 Stratify by species\nWe can also use the group_by-summarize paradigm to estimate the same Pearson correlation coefficient, together with the Spearman correlation coefficient, stratified by species.\n\npenguins %>% \n  group_by(species) %>% \n  summarise(\n    pearson_corr = cor(\n      x = flipper_length_mm,\n      y = body_mass_g,\n      use = 'pairwise.complete.obs',\n      method = 'pearson'\n    ),\n    spearman_corr = cor(\n      x = flipper_length_mm,\n      y = body_mass_g,\n      use = 'pairwise.complete.obs',\n      method = 'spearman'\n    )\n  )\n\n# A tibble: 3 √ó 3\n  species   pearson_corr spearman_corr\n  <fct>            <dbl>         <dbl>\n1 Adelie           0.468         0.475\n2 Chinstrap        0.642         0.670\n3 Gentoo           0.703         0.717\n\n\nThe coefficient separated by species are smaller than the one taking all the penguins together. Probably because the trend between body mass and flipper length is conserved across species on a wide range of body mass."
  },
  {
    "objectID": "slides/31-correlation.html#correlation-matrices",
    "href": "slides/31-correlation.html#correlation-matrices",
    "title": "Notes on Correlation",
    "section": "3.4 Correlation matrices",
    "text": "3.4 Correlation matrices\nYou can use the function cor() to measure the correlation of multiple variable at once, producing a correlation matrix.\nFor example, if we want to check how each continuous variable in the Palmer Penguins dataset correlates with each other:\n\ncor_mat <- \n  penguins %>%\n  select_if(is.numeric) %>% \n  # let's remove the 'year' variable\n  select(-year) %>% \n  cor(use = 'pairwise.complete.obs')\n\ncor_mat\n\n                  bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\nbill_length_mm         1.0000000    -0.2350529         0.6561813   0.5951098\nbill_depth_mm         -0.2350529     1.0000000        -0.5838512  -0.4719156\nflipper_length_mm      0.6561813    -0.5838512         1.0000000   0.8712018\nbody_mass_g            0.5951098    -0.4719156         0.8712018   1.0000000"
  },
  {
    "objectID": "slides/31-correlation.html#corrplot",
    "href": "slides/31-correlation.html#corrplot",
    "title": "Notes on Correlation",
    "section": "4.1 corrplot",
    "text": "4.1 corrplot\ncorrplot let‚Äôs you explore visually correlation matrices.\nFor example, let‚Äôs visualize the correlation matrix that we have stored in the variable cor_mat in the section above.\n\ncor_mat %>% corrplot(diag = FALSE)\n\n\n\n\n\ncor_mat %>% corrplot(method = 'number', diag = FALSE)\n\n\n\n\nDon‚Äôt take all these correlation values for granted. As we learn in the section caveats on correlation, they might hide some spurious correlation value."
  },
  {
    "objectID": "slides/31-correlation.html#pair-plot-with-ggally",
    "href": "slides/31-correlation.html#pair-plot-with-ggally",
    "title": "Notes on Correlation",
    "section": "4.2 Pair Plot with GGally",
    "text": "4.2 Pair Plot with GGally\nLet‚Äôs use the ggpairs() function from the package GGally to explore at the same time the scatterplots and the correlation coefficient.\n\npenguins %>%\n  select_if(is.numeric) %>% \n  # let's remove the 'year' variable\n  select(-year) %>% \n  # let's drop na's\n  drop_na() %>% \n  ggpairs()\n\n\n\n\nFind more examples on the R Graph Gallery."
  },
  {
    "objectID": "slides/31-robust-stat.html#concise-summaries",
    "href": "slides/31-robust-stat.html#concise-summaries",
    "title": "Robust Summary Statistics",
    "section": "Concise summaries",
    "text": "Concise summaries\nWhen we mentioned the boxplot, we talked about robust summary statistics. First of all, what is a summary statistic?\nA Summary statistic describes a property of a distribution in one single number.\nFor example:\n\nThe mean represents the central tendency of a distribution.\nThe standard deviation represents its dispersion.\n\nNone of these statistics is robust toward outliers."
  },
  {
    "objectID": "slides/31-robust-stat.html#mean-and-standard-deviation",
    "href": "slides/31-robust-stat.html#mean-and-standard-deviation",
    "title": "Robust Summary Statistics",
    "section": "Mean and Standard Deviation",
    "text": "Mean and Standard Deviation\n- Mean\n\n\n\n\n\\(mean(x) = \\frac{1}{n} \\sum_{i=i}^{n} x_{i}\\)\n\n\n\n\n\n\n\n\n- Standatrd Deviation\n\n\\(SD = \\sqrt{\\frac{1}{N-1} \\sum_{i=1}^N \\left(x_i - \\bar{x}\\right)^2}\\)"
  },
  {
    "objectID": "slides/31-robust-stat.html#mean-and-sd-are-not-robust-to-outlier",
    "href": "slides/31-robust-stat.html#mean-and-sd-are-not-robust-to-outlier",
    "title": "Robust Summary Statistics",
    "section": "Mean and SD are not robust to outlier",
    "text": "Mean and SD are not robust to outlier\nWhat if I‚Äôm distracted and forget to write a comma when I collect the data.\n\npenguins$bill_depth_mm %>% range(na.rm = T)\n\n[1] 13.1 21.5\n\n\nWith this snipped we multiply the max value of bill_depth_mm by 10.\n\npenguins_bad <- \n  penguins %>% \n    mutate(\n      bill_depth_mm = bill_depth_mm %>% \n        {\n          if_else(. == max(., na.rm = T),\n                    true = .*10,\n                    false = .)\n        }\n    )\n\nWith this chunk of code I‚Äôve added an outlier at in the variable bill_depth_mm at 215 mm. Let‚Äôs see what happens."
  },
  {
    "objectID": "slides/31-robust-stat.html#mean-and-sd-with-an-outlier-at-215-mm",
    "href": "slides/31-robust-stat.html#mean-and-sd-with-an-outlier-at-215-mm",
    "title": "Robust Summary Statistics",
    "section": "Mean and SD with an outlier at 215 mm",
    "text": "Mean and SD with an outlier at 215 mm\nI‚Äôve added an outlier to the Adelie species, let‚Äôs see what happens graphically\n\n\n\n\n\n\n\nIn the next plots I will not represent the outlier graphically because it stretches the x axis too much.\nMean and SD are heavily influenced by the outlier.\nThe mean of Adelie is influenced by the outlier at 215 mm\n\n\n\n\n\n\n\nThe SD of Adelie is influenced by the outlier 215 mm"
  },
  {
    "objectID": "slides/31-robust-stat.html#median-and-interquartile-range-iqr",
    "href": "slides/31-robust-stat.html#median-and-interquartile-range-iqr",
    "title": "Robust Summary Statistics",
    "section": "Median and Interquartile Range (IQR)",
    "text": "Median and Interquartile Range (IQR)\nMedian\nThe median represents a the central tendency of a distribution, it is the value that splits the bigger 50% (half) of the data from the smaller half.\nInterquartile Range (IQR)\nThe IQR range represents how a distribution is dispersed, it is the range between the 1st and the 3rd quartile.\n\nThe 1st quartile splits the smaller 25% of a distribution from the rest.\nThe 3rd quartile splits the bigger 75% of a distribution from the rest."
  },
  {
    "objectID": "slides/31-robust-stat.html#median-and-iqr-without-outlier",
    "href": "slides/31-robust-stat.html#median-and-iqr-without-outlier",
    "title": "Robust Summary Statistics",
    "section": "Median and IQR without outlier",
    "text": "Median and IQR without outlier\n- Median\n\n\n\n\n\n\n\n- IQR"
  },
  {
    "objectID": "slides/31-robust-stat.html#median-and-iqr-with-an-outlier-at-215-mm",
    "href": "slides/31-robust-stat.html#median-and-iqr-with-an-outlier-at-215-mm",
    "title": "Robust Summary Statistics",
    "section": "Median and IQR with an outlier at 215 mm",
    "text": "Median and IQR with an outlier at 215 mm\nThe median is not influenced by the outlier at 215 mm\n\n\n\n\n\n\n\nThe median is not influenced by the outlier at 215 mm"
  },
  {
    "objectID": "slides/31-robust-stat.html#referece---summaries",
    "href": "slides/31-robust-stat.html#referece---summaries",
    "title": "Robust Summary Statistics",
    "section": "Referece - Summaries",
    "text": "Referece - Summaries\nSummary statistic without outlier.\n\npenguins_summarized\n\n# A tibble: 3 √ó 8\n  species       m    sd   med    q1    q3   iqr   mad\n  <fct>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 Adelie     18.3 1.22   18.4  17.5  19    1.5   1.19\n2 Chinstrap  18.4 1.14   18.4  17.5  19.4  1.90  1.41\n3 Gentoo     15.0 0.981  15    14.2  15.7  1.5   1.19\n\n\nSummary statistic with an outlier at 215 mm.\n\npenguins_bad_summarized\n\n# A tibble: 3 √ó 8\n  species       m     sd   med    q1    q3   iqr   mad\n  <fct>     <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 Adelie     19.6 16.0    18.4  17.5  19    1.5   1.19\n2 Chinstrap  18.4  1.14   18.4  17.5  19.4  1.90  1.41\n3 Gentoo     15.0  0.981  15    14.2  15.7  1.5   1.19"
  },
  {
    "objectID": "slides/31-robust-stat.html#reference---functions",
    "href": "slides/31-robust-stat.html#reference---functions",
    "title": "Robust Summary Statistics",
    "section": "Reference - Functions",
    "text": "Reference - Functions\n\nMean: mean()\nStandard Deviation: sd()\nMedian: median() or quantile()['50%']\n1st quartile: quantile()['25%']\n3rd quartile: quantile()['75%']\nIQR: iqr()\n\nUse na.rm = TRUE with all those function to ignore missing values."
  },
  {
    "objectID": "slides/31-robust-stat.html#take-home",
    "href": "slides/31-robust-stat.html#take-home",
    "title": "Robust Summary Statistics",
    "section": "Take home",
    "text": "Take home\n\n\nWhen we have many data, we often have to reduce them to simple indicators with summary statistics.\nNo statisitic is perfect, some, such as mean and standard deviation are more precise, but they ‚Äúbreak‚Äù easilt if the data with ‚Äúnon-ideal‚Äù data.\nOthers are such as median and IQR are simpler and less sophisticated, but are better at capturing the essence of the data in ‚Äúnon-ideal‚Äù situation, i.e.¬†robust.\nThe word robust is often use to describe statistical methods. It means that the method is unlikely to break when the data are not perfect and the condition are worse than ideal.\n\nRead: Introduction to data science | Chapter 12 - Robust Summaries"
  },
  {
    "objectID": "slides/31-robust-stat.html#exercise",
    "href": "slides/31-robust-stat.html#exercise",
    "title": "Robust Summary Statistics",
    "section": "Exercise",
    "text": "Exercise\nThe storm dataset is loaded in R with the tidyverse. It stores attributes from hurricanes in the US over the years 1975-2020.\n\nWhat are the mean and the median wind speed?\nWhat are the mean and the median air pressure in the storm center?\n\nInvestigate the wind and pressure variables with histograms and boxplots, how are the data distributed? are there any outlier?\nWhat if you stratify those two variables by status, do you see some interesting pattern?\nStratify the data by name, extract the 5 hurricanes with the highest mean wind speed the 5 hurricanes with highest median wind speed. Are they the same?\n\n\n\n\n\nHome | 2022 CBSER Summer School"
  },
  {
    "objectID": "slides/40-get.html#dataframes-are-rectangular-datasets",
    "href": "slides/40-get.html#dataframes-are-rectangular-datasets",
    "title": "Get Data into R",
    "section": "Dataframes are rectangular datasets",
    "text": "Dataframes are rectangular datasets\nMore often than not when we speak about datasets, we speak about rectangular data, i.e., data in two-dimensional table, made of values organized in rows and columns.\n\n\nEach cell stores a value.\nEach value belongs to one column and one row.\n\n\n\nRectnagular data are the easiest to use, when we get data that are not rectangular, we try to reshape them in that form."
  },
  {
    "objectID": "slides/40-get.html#readr",
    "href": "slides/40-get.html#readr",
    "title": "Get Data into R",
    "section": "Readr",
    "text": "Readr\n\n\n\n\nReadr is a package that loads (reads) Rectangular Text data in R.\nIt‚Äôs fast, it guesses column types explicitly and it‚Äôs pipe friendly\nYou can use it to read both local data and online data from a URL.\nFor example we can use it to read data in CSV and TSV formats and many more."
  },
  {
    "objectID": "slides/40-get.html#read-the-palmer-pengunis-dataset",
    "href": "slides/40-get.html#read-the-palmer-pengunis-dataset",
    "title": "Get Data into R",
    "section": "Read the Palmer Pengunis dataset",
    "text": "Read the Palmer Pengunis dataset\nWe can use again on the Palmer Penguins Dataset\nThe source code of this package, is on github; we can find the tidy CSV data in the inst/exdata folder.\n\n\npenguin_csv_url <- 'https://raw.githubusercontent.com/allisonhorst/palmerpenguins/main/inst/extdata/penguins.csv'\n \nread_csv(penguin_csv_url)\n\nRows: 344 Columns: 8\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (5): bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, year\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 344 √ó 8\n   species island    bill_length_mm bill_depth_mm flipper_‚Ä¶¬π body_‚Ä¶¬≤ sex    year\n   <chr>   <chr>              <dbl>         <dbl>      <dbl>   <dbl> <chr> <dbl>\n 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007\n 2 Adelie  Torgersen           39.5          17.4        186    3800 fema‚Ä¶  2007\n 3 Adelie  Torgersen           40.3          18          195    3250 fema‚Ä¶  2007\n 4 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 5 Adelie  Torgersen           36.7          19.3        193    3450 fema‚Ä¶  2007\n 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007\n 7 Adelie  Torgersen           38.9          17.8        181    3625 fema‚Ä¶  2007\n 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007\n 9 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n10 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n# ‚Ä¶ with 334 more rows, and abbreviated variable names ¬π‚Äãflipper_length_mm,\n#   ¬≤‚Äãbody_mass_g\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/40-get.html#section",
    "href": "slides/40-get.html#section",
    "title": "Get Data into R",
    "section": "",
    "text": "The tibble that we have loaded and generate d from CSV is not identical to the one that comes already loaded with the palmerpenguins package:\n\npenguins_from_csv <- \n  penguin_csv_url %>% \n  read_csv()\n\nidentical(\n  penguins_from_csv,\n  palmerpenguins::penguins\n)\n\n[1] FALSE\n\n\nLet‚Äôs compare them side by side\n\n\n\npalmerpenguins::penguins %>% \n  glimpse(width = 40)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adel‚Ä¶\n$ island            <fct> Torgersen, T‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, ‚Ä¶\n$ flipper_length_mm <int> 181, 186, 19‚Ä¶\n$ body_mass_g       <int> 3750, 3800, ‚Ä¶\n$ sex               <fct> male, female‚Ä¶\n$ year              <int> 2007, 2007, ‚Ä¶\n\n\n\n\npenguins_from_csv %>% \n  glimpse(width = 40)\n\nRows: 344\nColumns: 8\n$ species           <chr> \"Adelie\", \"A‚Ä¶\n$ island            <chr> \"Torgersen\",‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, ‚Ä¶\n$ flipper_length_mm <dbl> 181, 186, 19‚Ä¶\n$ body_mass_g       <dbl> 3750, 3800, ‚Ä¶\n$ sex               <chr> \"male\", \"fem‚Ä¶\n$ year              <dbl> 2007, 2007, ‚Ä¶\n\n\n\n\nCan you spot that column types are different?"
  },
  {
    "objectID": "slides/40-get.html#parsing",
    "href": "slides/40-get.html#parsing",
    "title": "Get Data into R",
    "section": "Parsing",
    "text": "Parsing\nWhen we read data from text encoded ‚Äúdelimited‚Äù files, such as CSV, we use function that parse the file.\nWhen we parse something, we formalize its structure applying a set of grammatical rules.\nNo parsing rule is perfect, thus we must often review the results and ‚Äúfix‚Äù parsing ‚Äúmistakes‚Äù.\n\n# specify column types manually\n\npenguins_from_csv <-\n  penguin_csv_url %>% \n  read_csv(\n    col_types = cols(\n      species = col_factor(),\n      island = col_factor(),\n      flipper_length_mm = col_integer(),\n      body_mass_g = col_integer(),\n      sex = col_factor(),\n      year = col_integer()\n    )\n  )\n\npenguins_from_csv %>% glimpse()\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel‚Ä¶\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse‚Ä¶\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ‚Ä¶\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ‚Ä¶\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186‚Ä¶\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ‚Ä¶\n$ sex               <fct> male, female, female, NA, female, male, female, male‚Ä¶\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007‚Ä¶"
  },
  {
    "objectID": "slides/40-get.html#exercise",
    "href": "slides/40-get.html#exercise",
    "title": "Get Data into R",
    "section": "Exercise",
    "text": "Exercise\nFind the source code of the readr package.\nIn the inst/extdata folder you can find 10 datasets that display different challenges that you might enconter when you have to load data from an external file.\nLoad in R at least 3 of those datasets using functions from readr.\nGet help from readr‚Äôs documentation and the data import chapter of r4ds.\nWhich function did you use? Did you encounter any parsing failure? How did you fix it?"
  },
  {
    "objectID": "slides/40-get.html#read-a-dataset-from-pangaea",
    "href": "slides/40-get.html#read-a-dataset-from-pangaea",
    "title": "Get Data into R",
    "section": "Read a dataset from PANGAEA",
    "text": "Read a dataset from PANGAEA\nPANGAEA, a Data repository for the evironmental sciences.\nFor our exercise we will use this dataset from Wu et al:\n\n\n‚ÄúEffect of barite-bound Sr on detrital Sr isotope systematics in marine sediments with pertinent Mediterranean examples‚Äù.\n\n\nhttps://doi.pangaea.de/10.1594/PANGAEA.946258"
  },
  {
    "objectID": "slides/40-get.html#section-1",
    "href": "slides/40-get.html#section-1",
    "title": "Get Data into R",
    "section": "",
    "text": "pangaea_filename <- 'Dataset_S2_HCl-leaching.tab'\n\npangaea_path <- here('data-int/Wu-etal_2022/datasets', pangaea_filename)\n\nLet‚Äôs try to read the data file Dataset_S2_HCl-leaching.tab.\nIt‚Äôs a .tab file.\n\npangaea_data <- \n  pangaea_path %>% \n  read_delim()\n\nWarning: One or more parsing issues, see `problems()` for details\n\n\nRows: 177 Columns: 3\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \" \"\nchr (3): /*, DATA, DESCRIPTION:\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "slides/40-get.html#section-2",
    "href": "slides/40-get.html#section-2",
    "title": "Get Data into R",
    "section": "",
    "text": "If we call problems() readr tells us what went wrong.\n\npangaea_data\n\n# A tibble: 177 √ó 3\n   `/*`                   DATA           `DESCRIPTION:`                         \n   <chr>                  <chr>          <chr>                                  \n 1 \"Citation:\\tWu,\"       \"Jiawang;\"     \"Liu, Zhifei; Michard, Annie; Tachikaw‚Ä¶\n 2 \"\\tIn:\"                \"Wu,\"          \"J et al. (2022): Effect of barite-bou‚Ä¶\n 3 \"Keyword(s):\\tBarite;\" \"Barium\"       \"(Ba); marine sediments; Mediterranean‚Ä¶\n 4 \"Related\"              \"to:\\tWu,\"     \"Jiawang; Liu, Zhifei; Michard, Annie;‚Ä¶\n 5 \"Funding:\\tChina\"      \"Postdoctoral\" \"Science Foundation (URI: http://res.c‚Ä¶\n 6 \"\\tChina\"              \"Postdoctoral\" \"Science Foundation (URI: http://res.c‚Ä¶\n 7 \"\\tEuropean\"           \"Commission\"   \"(EC), grant/award no. MAS2-CT93-0051:‚Ä¶\n 8 \"\\tEuropean\"           \"Commission\"   \"(EC), grant/award no. MAS3 CT97-0137:‚Ä¶\n 9 \"\\tEuropean\"           \"Commission\"   \"(EC), grant/award no. MAST1-90022C: E‚Ä¶\n10 \"\\tNational\"           \"Natural\"      \"Science Foundation of China (NSFC) (U‚Ä¶\n# ‚Ä¶ with 167 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/40-get.html#section-3",
    "href": "slides/40-get.html#section-3",
    "title": "Get Data into R",
    "section": "",
    "text": "We can use the arguments:\n\n\ndelim = '\\t' to tell read_delim() that we are reading a file delimited by tabulature (\\t).\nskip = 49 to tell it that the first 49 rows must be skipped.\n\n\n\npangaea_data <- \n  pangaea_path %>% \n  read_delim(delim = '\\t',\n             skip = 49)"
  },
  {
    "objectID": "slides/40-get.html#section-4",
    "href": "slides/40-get.html#section-4",
    "title": "Get Data into R",
    "section": "",
    "text": "Now the data that we‚Äôve imported into R looks fine.\n\npangaea_data %>% glimpse()\n\nRows: 128\nColumns: 19\n$ Event                      <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL‚Ä¶\n$ Latitude                   <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617‚Ä¶\n$ Longitude                  <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117‚Ä¶\n$ `Elevation [m]`            <dbl> -339, -339, -339, -339, -339, -339, -339, -‚Ä¶\n$ `Sample label (barite-Sr)` <chr> \"SL73-1\", \"SL73-2\", \"SL73-3\", \"SL73-4\", \"SL‚Ä¶\n$ `Samp type`                <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"S1b\", \"S1b\",‚Ä¶\n$ `Depth [m]`                <dbl> 0.0045, 0.0465, 0.0665, 0.1215, 0.1765, 0.1‚Ä¶\n$ `Age [ka BP]`              <dbl> 1.66, 3.13, 4.13, 5.75, 7.30, 7.78, 8.65, 9‚Ä¶\n$ `CaCO3 [%]`                <dbl> 61.5, 55.1, 53.0, 43.4, 41.8, 42.3, 42.6, 3‚Ä¶\n$ `Ba [¬µg/g] (Leachate)`     <dbl> 72.6, 64.3, 37.4, 63.5, 101.0, 141.0, 75.2,‚Ä¶\n$ `Sr [¬µg/g] (Leachate)`     <dbl> 767, 681, 690, 552, 527, 528, 551, 482, 391‚Ä¶\n$ `Ca [¬µg/g] (Leachate)`     <dbl> 188951.9, 163260.4, 162188.7, 125937.6, 124‚Ä¶\n$ `Al [¬µg/g] (Leachate)`     <dbl> 10612.7, 11428.4, 5463.0, 3261.5, 2121.7, 1‚Ä¶\n$ `Fe [¬µg/g] (Leachate)`     <dbl> 5935.0, 6814.3, 2465.7, 3936.8, 189.6, 7711‚Ä¶\n$ `Ba [¬µg/g] (Residue)`      <dbl> 171.0, 198.0, 251.0, 290.0, 315.0, 259.0, 3‚Ä¶\n$ `Sr [¬µg/g] (Residue)`      <dbl> 66.6, 71.3, 90.3, 99.8, 106.0, 90.7, 108.0,‚Ä¶\n$ `Ca [¬µg/g] (Residue)`      <dbl> 2315.5, 2369.6, 3007.7, 3447.9, 3713.2, 331‚Ä¶\n$ `Al [¬µg/g] (Residue)`      <dbl> 29262.5, 35561.4, 45862.4, 52485.6, 55083.0‚Ä¶\n$ `Fe [¬µg/g] (Residue)`      <dbl> 14834.8, 18301.4, 24534.5, 30745.3, 28532.2‚Ä¶"
  },
  {
    "objectID": "slides/40-get.html#section-5",
    "href": "slides/40-get.html#section-5",
    "title": "Get Data into R",
    "section": "",
    "text": "Now the data that we‚Äôve imported into R looks fine.\n\npangaea_data %>% skimr::skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n128\n\n\nNumber of columns\n19\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n16\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nEvent\n0\n1\n5\n7\n0\n11\n0\n\n\nSample label (barite-Sr)\n0\n1\n5\n7\n0\n128\n0\n\n\nSamp type\n0\n1\n3\n6\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nLatitude\n0\n1\n35.32\n2.24\n33.38\n33.67\n34.55\n35.29\n39.66\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÉ\n\n\nLongitude\n0\n1\n22.79\n8.17\n4.51\n17.86\n24.51\n28.61\n32.67\n‚ñÇ‚ñÅ‚ñÜ‚ñÜ‚ñá\n\n\nElevation [m]\n0\n1\n-1807.65\n829.55\n-3390.00\n-2373.00\n-1587.00\n-1375.00\n-339.00\n‚ñÇ‚ñá‚ñÅ‚ñÖ‚ñÖ\n\n\nDepth [m]\n0\n1\n0.30\n0.25\n0.00\n0.17\n0.26\n0.34\n1.40\n‚ñá‚ñÖ‚ñÅ‚ñÅ‚ñÅ\n\n\nAge [ka BP]\n0\n1\n7.88\n3.49\n0.30\n5.83\n7.86\n9.82\n19.61\n‚ñÉ‚ñá‚ñá‚ñÇ‚ñÅ\n\n\nCaCO3 [%]\n0\n1\n57.94\n8.29\n33.70\n52.58\n57.80\n64.45\n74.60\n‚ñÅ‚ñÉ‚ñá‚ñá‚ñÖ\n\n\nBa [¬µg/g] (Leachate)\n0\n1\n216.49\n223.26\n0.00\n37.15\n122.00\n398.75\n954.00\n‚ñá‚ñÇ‚ñÇ‚ñÅ‚ñÅ\n\n\nSr [¬µg/g] (Leachate)\n0\n1\n784.98\n207.08\n341.00\n635.15\n767.50\n886.25\n1419.00\n‚ñÉ‚ñá‚ñá‚ñÇ‚ñÅ\n\n\nCa [¬µg/g] (Leachate)\n0\n1\n179277.91\n34034.64\n82460.20\n158421.22\n182153.85\n204214.33\n240253.00\n‚ñÅ‚ñÉ‚ñÜ‚ñá‚ñÖ\n\n\nAl [¬µg/g] (Leachate)\n0\n1\n9075.10\n3739.72\n122.20\n6036.95\n9034.50\n11691.80\n21011.90\n‚ñÇ‚ñá‚ñá‚ñÖ‚ñÅ\n\n\nFe [¬µg/g] (Leachate)\n0\n1\n7673.07\n4235.50\n189.60\n4937.08\n6918.25\n9513.88\n21428.70\n‚ñÉ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nBa [¬µg/g] (Residue)\n0\n1\n184.58\n109.97\n54.80\n98.30\n142.00\n251.00\n507.00\n‚ñá‚ñÉ‚ñÇ‚ñÅ‚ñÅ\n\n\nSr [¬µg/g] (Residue)\n0\n1\n46.15\n17.69\n20.50\n33.53\n41.10\n51.85\n120.00\n‚ñá‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\nCa [¬µg/g] (Residue)\n0\n1\n1316.60\n930.42\n475.50\n825.50\n1057.45\n1446.40\n8343.50\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\nAl [¬µg/g] (Residue)\n0\n1\n36668.75\n8937.30\n19227.20\n29424.80\n37297.75\n43806.80\n60033.10\n‚ñÜ‚ñá‚ñá‚ñÜ‚ñÅ\n\n\nFe [¬µg/g] (Residue)\n0\n1\n21446.97\n6866.21\n10823.30\n16197.70\n20393.90\n24408.27\n48057.60\n‚ñá‚ñá‚ñÉ‚ñÅ‚ñÅ"
  },
  {
    "objectID": "slides/40-get.html#always-check-for-missing-values",
    "href": "slides/40-get.html#always-check-for-missing-values",
    "title": "Get Data into R",
    "section": "Always check for missing values",
    "text": "Always check for missing values\nskimr::skim() shows you how many values are missing in your dataset:\n\n\nHow many missing value are there?\nWhere do they occur?"
  },
  {
    "objectID": "slides/40-get.html#section-6",
    "href": "slides/40-get.html#section-6",
    "title": "Get Data into R",
    "section": "",
    "text": "A more formal way to check for missing values.\n\npangaea_data %>% \n  summarise(\n    across(\n      .fns = ~is.na(.) %>% sum()\n    )\n  ) %>% \n  glimpse()\n\nRows: 1\nColumns: 19\n$ Event                      <int> 0\n$ Latitude                   <int> 0\n$ Longitude                  <int> 0\n$ `Elevation [m]`            <int> 0\n$ `Sample label (barite-Sr)` <int> 0\n$ `Samp type`                <int> 0\n$ `Depth [m]`                <int> 0\n$ `Age [ka BP]`              <int> 0\n$ `CaCO3 [%]`                <int> 0\n$ `Ba [¬µg/g] (Leachate)`     <int> 0\n$ `Sr [¬µg/g] (Leachate)`     <int> 0\n$ `Ca [¬µg/g] (Leachate)`     <int> 0\n$ `Al [¬µg/g] (Leachate)`     <int> 0\n$ `Fe [¬µg/g] (Leachate)`     <int> 0\n$ `Ba [¬µg/g] (Residue)`      <int> 0\n$ `Sr [¬µg/g] (Residue)`      <int> 0\n$ `Ca [¬µg/g] (Residue)`      <int> 0\n$ `Al [¬µg/g] (Residue)`      <int> 0\n$ `Fe [¬µg/g] (Residue)`      <int> 0"
  },
  {
    "objectID": "slides/40-get.html#quick-checklist-when-you-read-new-data-into-r",
    "href": "slides/40-get.html#quick-checklist-when-you-read-new-data-into-r",
    "title": "Get Data into R",
    "section": "Quick checklist when you read new data into R",
    "text": "Quick checklist when you read new data into R\n\n\nCheck for missing values.\nCheck the column types, are they what you expect?\nCheck the row number and the column names.\nOptional, check the head() and the tail() of the file.\n\n\nNow let‚Äôs tidy the data."
  },
  {
    "objectID": "slides/40-get.html#exercise-1",
    "href": "slides/40-get.html#exercise-1",
    "title": "Get Data into R",
    "section": "Exercise",
    "text": "Exercise\nTidytuesday is a weekly data project aimed at learning, collaborating and networking the R ecosystem.\nFind this week‚Äôs dataset and read it in R. Run the checklist from the previous slide on the data that you‚Äôve read.\nIf you are donw early, proceed reading data from the previous week or find a colleague to help.\nCheck Tidytuesday submissions on Twitter with the hashtag #TidyTuesday\n\n\nHome | 2022 CBSER Summer School"
  },
  {
    "objectID": "slides/50-clean.html#which-dataset-is-tidy",
    "href": "slides/50-clean.html#which-dataset-is-tidy",
    "title": "Clean and Tidy Data",
    "section": "Which Dataset is Tidy?",
    "text": "Which Dataset is Tidy?\nA common practical way to structure (empirical) data.\n\n\nEvery column is a variable.\nEvery row is an observation.\nEvery cell is a single value.\n(Every observational unit is in its own table).\n\n\nPlus: fixed variables should come first, followed by measured variables.\nReference: An Introduction to Tidy Data"
  },
  {
    "objectID": "slides/50-clean.html#which-dataset-is-tidy-1",
    "href": "slides/50-clean.html#which-dataset-is-tidy-1",
    "title": "Clean and Tidy Data",
    "section": "Which Dataset is Tidy?",
    "text": "Which Dataset is Tidy?\n\nSource: R4DS - Tidy Data"
  },
  {
    "objectID": "slides/50-clean.html#section",
    "href": "slides/50-clean.html#section",
    "title": "Clean and Tidy Data",
    "section": "",
    "text": "Joey\n\n\nMonica\n\n\nRachel\n\n\nPhoebe\n\n\nRoss\n\n\nChandler\n\n\nTribbiani\n\n\nGeller\n\n\nGreen\n\n\nBuffay\n\n\nGeller\n\n\nBing\n\n\n27\n\n\n24\n\n\n23\n\n\n27\n\n\n26\n\n\n26"
  },
  {
    "objectID": "slides/50-clean.html#semantics-of-tidy-data",
    "href": "slides/50-clean.html#semantics-of-tidy-data",
    "title": "Clean and Tidy Data",
    "section": "Semantics of (tidy) Data",
    "text": "Semantics of (tidy) Data\nAlways quoting the Tidy Data article:\n\nA dataset is a collection of values.\nEvery value belongs to a variable and an observation.\nA variable contains all values that measure the same underlying attribute (like height, temperature, duration) across units.\nAn observation contains all values measured on the same unit (like a person, or a day, or a race) across attributes"
  },
  {
    "objectID": "slides/50-clean.html#tools-tidy-data-with-tidyr",
    "href": "slides/50-clean.html#tools-tidy-data-with-tidyr",
    "title": "Clean and Tidy Data",
    "section": "Tools: Tidy data with Tidyr",
    "text": "Tools: Tidy data with Tidyr\n\n\n\n\nTidyr provides functions for:\n\nPivoting data.\nRectangling data.\nNesting data.\nCombining and splitting columns.\nMake missing values explicit."
  },
  {
    "objectID": "slides/50-clean.html#pangea-data",
    "href": "slides/50-clean.html#pangea-data",
    "title": "Clean and Tidy Data",
    "section": "Pangea Data",
    "text": "Pangea Data\nRemember the dataset from Pangaea?\n\npangaea_filename <- 'Dataset_S2_HCl-leaching.tab'\n\npangaea_path <- here('data-int/Wu-etal_2022/datasets', pangaea_filename)\n\npangaea_data <- \n  pangaea_path %>% \n  read_delim(delim = '\\t',\n             skip = 49)\n\n\npangaea_data %>% \n  glimpse()\n\nRows: 128\nColumns: 19\n$ Event                      <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL‚Ä¶\n$ Latitude                   <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617‚Ä¶\n$ Longitude                  <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117‚Ä¶\n$ `Elevation [m]`            <dbl> -339, -339, -339, -339, -339, -339, -339, -‚Ä¶\n$ `Sample label (barite-Sr)` <chr> \"SL73-1\", \"SL73-2\", \"SL73-3\", \"SL73-4\", \"SL‚Ä¶\n$ `Samp type`                <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"S1b\", \"S1b\",‚Ä¶\n$ `Depth [m]`                <dbl> 0.0045, 0.0465, 0.0665, 0.1215, 0.1765, 0.1‚Ä¶\n$ `Age [ka BP]`              <dbl> 1.66, 3.13, 4.13, 5.75, 7.30, 7.78, 8.65, 9‚Ä¶\n$ `CaCO3 [%]`                <dbl> 61.5, 55.1, 53.0, 43.4, 41.8, 42.3, 42.6, 3‚Ä¶\n$ `Ba [¬µg/g] (Leachate)`     <dbl> 72.6, 64.3, 37.4, 63.5, 101.0, 141.0, 75.2,‚Ä¶\n$ `Sr [¬µg/g] (Leachate)`     <dbl> 767, 681, 690, 552, 527, 528, 551, 482, 391‚Ä¶\n$ `Ca [¬µg/g] (Leachate)`     <dbl> 188951.9, 163260.4, 162188.7, 125937.6, 124‚Ä¶\n$ `Al [¬µg/g] (Leachate)`     <dbl> 10612.7, 11428.4, 5463.0, 3261.5, 2121.7, 1‚Ä¶\n$ `Fe [¬µg/g] (Leachate)`     <dbl> 5935.0, 6814.3, 2465.7, 3936.8, 189.6, 7711‚Ä¶\n$ `Ba [¬µg/g] (Residue)`      <dbl> 171.0, 198.0, 251.0, 290.0, 315.0, 259.0, 3‚Ä¶\n$ `Sr [¬µg/g] (Residue)`      <dbl> 66.6, 71.3, 90.3, 99.8, 106.0, 90.7, 108.0,‚Ä¶\n$ `Ca [¬µg/g] (Residue)`      <dbl> 2315.5, 2369.6, 3007.7, 3447.9, 3713.2, 331‚Ä¶\n$ `Al [¬µg/g] (Residue)`      <dbl> 29262.5, 35561.4, 45862.4, 52485.6, 55083.0‚Ä¶\n$ `Fe [¬µg/g] (Residue)`      <dbl> 14834.8, 18301.4, 24534.5, 30745.3, 28532.2‚Ä¶"
  },
  {
    "objectID": "slides/50-clean.html#clean-the-column-names-with-janitor",
    "href": "slides/50-clean.html#clean-the-column-names-with-janitor",
    "title": "Clean and Tidy Data",
    "section": "Clean the column names with Janitor",
    "text": "Clean the column names with Janitor\nwe can remove capitalization, spaces, and strange characters from the column names with the function clean_names() from the Janitor Package.\n\npangaea_data <- \n  pangaea_data %>% \n  janitor::clean_names()\n\npangaea_data %>%\n  glimpse()\n\nRows: 128\nColumns: 19\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-2\", \"SL73-3\", \"SL73-4\", \"SL73-5‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"S1b\", \"S1b\", \"S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0465, 0.0665, 0.1215, 0.1765, 0.1915,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 3.13, 4.13, 5.75, 7.30, 7.78, 8.65, 9.94,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 55.1, 53.0, 43.4, 41.8, 42.3, 42.6, 39.1,‚Ä¶\n$ ba_mg_g_leachate       <dbl> 72.6, 64.3, 37.4, 63.5, 101.0, 141.0, 75.2, 99.‚Ä¶\n$ sr_mg_g_leachate       <dbl> 767, 681, 690, 552, 527, 528, 551, 482, 391, 70‚Ä¶\n$ ca_mg_g_leachate       <dbl> 188951.9, 163260.4, 162188.7, 125937.6, 124733.‚Ä¶\n$ al_mg_g_leachate       <dbl> 10612.7, 11428.4, 5463.0, 3261.5, 2121.7, 12740‚Ä¶\n$ fe_mg_g_leachate       <dbl> 5935.0, 6814.3, 2465.7, 3936.8, 189.6, 7711.3, ‚Ä¶\n$ ba_mg_g_residue        <dbl> 171.0, 198.0, 251.0, 290.0, 315.0, 259.0, 310.0‚Ä¶\n$ sr_mg_g_residue        <dbl> 66.6, 71.3, 90.3, 99.8, 106.0, 90.7, 108.0, 96.‚Ä¶\n$ ca_mg_g_residue        <dbl> 2315.5, 2369.6, 3007.7, 3447.9, 3713.2, 3316.7,‚Ä¶\n$ al_mg_g_residue        <dbl> 29262.5, 35561.4, 45862.4, 52485.6, 55083.0, 44‚Ä¶\n$ fe_mg_g_residue        <dbl> 14834.8, 18301.4, 24534.5, 30745.3, 28532.2, 22‚Ä¶\n\n\nWatch out: Janitor transforms ¬µ into m (so micrograms become milligrams)."
  },
  {
    "objectID": "slides/50-clean.html#place-fixed-variables-in-the-first-columns",
    "href": "slides/50-clean.html#place-fixed-variables-in-the-first-columns",
    "title": "Clean and Tidy Data",
    "section": "Place fixed variables in the first columns",
    "text": "Place fixed variables in the first columns\nWhich column is a fixed variable?\nI‚Äôm not sure if ca_co3_percent is a measured variable, and if it belongs to another informational unit.\nBesides that, the fixed variables are already in front."
  },
  {
    "objectID": "slides/50-clean.html#there-are-values-stored-in-the-column-names",
    "href": "slides/50-clean.html#there-are-values-stored-in-the-column-names",
    "title": "Clean and Tidy Data",
    "section": "There are values stored in the column names",
    "text": "There are values stored in the column names\nLet‚Äôs pivot the measured variables.\n\npangaea_long <- \n  pangaea_data %>% \n  pivot_longer(\n    cols = contains(match = c('leachate', 'residue')),\n    values_to = 'concentration',\n    names_to = 'element'\n  )\n\npangaea_long\n\n# A tibble: 1,280 √ó 11\n   event latit‚Ä¶¬π longi‚Ä¶¬≤ eleva‚Ä¶¬≥ sampl‚Ä¶‚Å¥ samp_‚Ä¶‚Åµ depth_m age_k‚Ä¶‚Å∂ ca_co‚Ä¶‚Å∑ element\n   <chr>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba_mg_‚Ä¶\n 2 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr_mg_‚Ä¶\n 3 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca_mg_‚Ä¶\n 4 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al_mg_‚Ä¶\n 5 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe_mg_‚Ä¶\n 6 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba_mg_‚Ä¶\n 7 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr_mg_‚Ä¶\n 8 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca_mg_‚Ä¶\n 9 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al_mg_‚Ä¶\n10 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe_mg_‚Ä¶\n# ‚Ä¶ with 1,270 more rows, 1 more variable: concentration <dbl>, and abbreviated\n#   variable names ¬π‚Äãlatitude, ¬≤‚Äãlongitude, ¬≥‚Äãelevation_m,\n#   ‚Å¥‚Äãsample_label_barite_sr, ‚Åµ‚Äãsamp_type, ‚Å∂‚Äãage_ka_bp, ‚Å∑‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\npangaea_long %>% glimpse()\n\nRows: 1,280\nColumns: 11\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0045, 0.0045, 0.0045, 0.0045, 0.0045,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5,‚Ä¶\n$ element                <chr> \"ba_mg_g_leachate\", \"sr_mg_g_leachate\", \"ca_mg_‚Ä¶\n$ concentration          <dbl> 72.6, 767.0, 188951.9, 10612.7, 5935.0, 171.0, ‚Ä¶\n\n\nWhen we pivot data we move them from a wide to a long format and vice-versa."
  },
  {
    "objectID": "slides/50-clean.html#pivot-longer",
    "href": "slides/50-clean.html#pivot-longer",
    "title": "Clean and Tidy Data",
    "section": "Pivot Longer",
    "text": "Pivot Longer\n\nSource : R4DS - Tidy Data"
  },
  {
    "objectID": "slides/50-clean.html#pivot-longer-1",
    "href": "slides/50-clean.html#pivot-longer-1",
    "title": "Clean and Tidy Data",
    "section": "Pivot Longer",
    "text": "Pivot Longer\n\n(Image from Alisson Horst, check her other stats illustrations here)"
  },
  {
    "objectID": "slides/50-clean.html#one-cell-contains-multiple-values",
    "href": "slides/50-clean.html#one-cell-contains-multiple-values",
    "title": "Clean and Tidy Data",
    "section": "One cell contains multiple values",
    "text": "One cell contains multiple values\nNow it‚Äôs clear that element contains more than one value.\nFor example: ba_mg_g_leachate is not a single values and could be split into:\n\n\nelement: ba.\nunit: mg_g.\nfraction: leachate.\n\n\nLet‚Äôs split this column at the _ and reconstitute it in a tidy way\n\npangaea_tidy <- \n  pangaea_long %>% \n  separate(element, into = c('element', 'unit_num', 'unit_dem', 'fraction'), sep = '_') %>% \n  unite(col = 'unit', unit_num:unit_dem, sep = '/')\n\npangaea_tidy\n\n# A tibble: 1,280 √ó 13\n   event latit‚Ä¶¬π longi‚Ä¶¬≤ eleva‚Ä¶¬≥ sampl‚Ä¶‚Å¥ samp_‚Ä¶‚Åµ depth_m age_k‚Ä¶‚Å∂ ca_co‚Ä¶‚Å∑ element\n   <chr>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 2 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 3 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 4 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n 5 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n 6 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 7 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 8 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 9 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n10 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n# ‚Ä¶ with 1,270 more rows, 3 more variables: unit <chr>, fraction <chr>,\n#   concentration <dbl>, and abbreviated variable names ¬π‚Äãlatitude, ¬≤‚Äãlongitude,\n#   ¬≥‚Äãelevation_m, ‚Å¥‚Äãsample_label_barite_sr, ‚Åµ‚Äãsamp_type, ‚Å∂‚Äãage_ka_bp,\n#   ‚Å∑‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\npangaea_tidy %>% glimpse()\n\nRows: 1,280\nColumns: 13\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0045, 0.0045, 0.0045, 0.0045, 0.0045,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5,‚Ä¶\n$ element                <chr> \"ba\", \"sr\", \"ca\", \"al\", \"fe\", \"ba\", \"sr\", \"ca\",‚Ä¶\n$ unit                   <chr> \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\",‚Ä¶\n$ fraction               <chr> \"leachate\", \"leachate\", \"leachate\", \"leachate\",‚Ä¶\n$ concentration          <dbl> 72.6, 767.0, 188951.9, 10612.7, 5935.0, 171.0, ‚Ä¶"
  },
  {
    "objectID": "slides/50-clean.html#and-lets-fix-the-measurement-unit",
    "href": "slides/50-clean.html#and-lets-fix-the-measurement-unit",
    "title": "Clean and Tidy Data",
    "section": "And let‚Äôs fix the measurement unit",
    "text": "And let‚Äôs fix the measurement unit\nRemember that janitor transformed ¬µ into m?\n\npangea_tidy <- \n  pangaea_tidy %>% \n  mutate(unit = unit %>% str_replace('m', '¬µ'))\n\npangaea_tidy\n\n# A tibble: 1,280 √ó 13\n   event latit‚Ä¶¬π longi‚Ä¶¬≤ eleva‚Ä¶¬≥ sampl‚Ä¶‚Å¥ samp_‚Ä¶‚Åµ depth_m age_k‚Ä¶‚Å∂ ca_co‚Ä¶‚Å∑ element\n   <chr>   <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>  \n 1 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 2 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 3 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 4 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n 5 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n 6 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ba     \n 7 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 sr     \n 8 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 ca     \n 9 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 al     \n10 SL73‚Ä¶    39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 fe     \n# ‚Ä¶ with 1,270 more rows, 3 more variables: unit <chr>, fraction <chr>,\n#   concentration <dbl>, and abbreviated variable names ¬π‚Äãlatitude, ¬≤‚Äãlongitude,\n#   ¬≥‚Äãelevation_m, ‚Å¥‚Äãsample_label_barite_sr, ‚Åµ‚Äãsamp_type, ‚Å∂‚Äãage_ka_bp,\n#   ‚Å∑‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"
  },
  {
    "objectID": "slides/50-clean.html#data-can-take-many-shapes",
    "href": "slides/50-clean.html#data-can-take-many-shapes",
    "title": "Clean and Tidy Data",
    "section": "Data can take many shapes",
    "text": "Data can take many shapes\n\npangaea_also_tidy <- \n  pangaea_tidy %>% \n  pivot_wider(names_from = 'element', values_from = 'fraction') \n  \npangaea_also_tidy \n\n# A tibble: 1,280 √ó 16\n   event  latitude longi‚Ä¶¬π eleva‚Ä¶¬≤ sampl‚Ä¶¬≥ samp_‚Ä¶‚Å¥ depth_m age_k‚Ä¶‚Åµ ca_co‚Ä¶‚Å∂ unit \n   <chr>     <dbl>   <dbl>   <dbl> <chr>   <chr>     <dbl>   <dbl>   <dbl> <chr>\n 1 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 2 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 3 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 4 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 5 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 6 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 7 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 8 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n 9 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n10 SL73BC     39.7    24.5    -339 SL73-1  non-S1   0.0045    1.66    61.5 mg/g \n# ‚Ä¶ with 1,270 more rows, 6 more variables: concentration <dbl>, ba <chr>,\n#   sr <chr>, ca <chr>, al <chr>, fe <chr>, and abbreviated variable names\n#   ¬π‚Äãlongitude, ¬≤‚Äãelevation_m, ¬≥‚Äãsample_label_barite_sr, ‚Å¥‚Äãsamp_type, ‚Åµ‚Äãage_ka_bp,\n#   ‚Å∂‚Äãca_co3_percent\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\npangaea_also_tidy %>% glimpse()\n\nRows: 1,280\nColumns: 16\n$ event                  <chr> \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC\", \"SL73BC‚Ä¶\n$ latitude               <dbl> 39.6617, 39.6617, 39.6617, 39.6617, 39.6617, 39‚Ä¶\n$ longitude              <dbl> 24.5117, 24.5117, 24.5117, 24.5117, 24.5117, 24‚Ä¶\n$ elevation_m            <dbl> -339, -339, -339, -339, -339, -339, -339, -339,‚Ä¶\n$ sample_label_barite_sr <chr> \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1\", \"SL73-1‚Ä¶\n$ samp_type              <chr> \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1\", \"non-S1‚Ä¶\n$ depth_m                <dbl> 0.0045, 0.0045, 0.0045, 0.0045, 0.0045, 0.0045,‚Ä¶\n$ age_ka_bp              <dbl> 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66,‚Ä¶\n$ ca_co3_percent         <dbl> 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5, 61.5,‚Ä¶\n$ unit                   <chr> \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\", \"mg/g\",‚Ä¶\n$ concentration          <dbl> 72.6, 767.0, 188951.9, 10612.7, 5935.0, 171.0, ‚Ä¶\n$ ba                     <chr> \"leachate\", NA, NA, NA, NA, \"residue\", NA, NA, ‚Ä¶\n$ sr                     <chr> NA, \"leachate\", NA, NA, NA, NA, \"residue\", NA, ‚Ä¶\n$ ca                     <chr> NA, NA, \"leachate\", NA, NA, NA, NA, \"residue\", ‚Ä¶\n$ al                     <chr> NA, NA, NA, \"leachate\", NA, NA, NA, NA, \"residu‚Ä¶\n$ fe                     <chr> NA, NA, NA, NA, \"leachate\", NA, NA, NA, NA, \"re‚Ä¶"
  },
  {
    "objectID": "slides/50-clean.html#exercise",
    "href": "slides/50-clean.html#exercise",
    "title": "Clean and Tidy Data",
    "section": "Exercise",
    "text": "Exercise\nTidy last week‚Äôs schedule.\n\n\n\nHome | 2022 CBSER Summer School"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#the-steps-of-eda",
    "href": "slides/60-explorative-data-analysis.html#the-steps-of-eda",
    "title": "Explorative Data Analysis",
    "section": "The steps of EDA",
    "text": "The steps of EDA\nWe have covered almost all steps of what is called Explorative Data Analysis (EDA).\n\n\nImage Source: R4DS"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#the-steps-of-eda-1",
    "href": "slides/60-explorative-data-analysis.html#the-steps-of-eda-1",
    "title": "Explorative Data Analysis",
    "section": "The Steps of EDA",
    "text": "The Steps of EDA\nThe explore part is iterative.\n\nTransform\nVisualize\nModel"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#a-imperative-for-eda",
    "href": "slides/60-explorative-data-analysis.html#a-imperative-for-eda",
    "title": "Explorative Data Analysis",
    "section": "A imperative for EDA",
    "text": "A imperative for EDA\nTo get insights from data that you haven‚Äôt faced before,\n\nLook what‚Äôs inside.\nLearn their structure\nFormulate questions\nTry to anwser them with statistical methods.\n\nBriefly, explore them."
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#transcriptome-and-phenotype-of-multiple-rice-species",
    "href": "slides/60-explorative-data-analysis.html#transcriptome-and-phenotype-of-multiple-rice-species",
    "title": "Explorative Data Analysis",
    "section": "Transcriptome and Phenotype of multiple Rice species",
    "text": "Transcriptome and Phenotype of multiple Rice species\nA set of AP2-like genes is associated with inflorescence branching and architecture in domesticated rice.\n\n\nPaper\nDOWNLOAD SUPPLEMENTARY TABLE S3 - 96Kb !It‚Äôs a CSV file!"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#rice-accessions",
    "href": "slides/60-explorative-data-analysis.html#rice-accessions",
    "title": "Explorative Data Analysis",
    "section": "4 rice accessions",
    "text": "4 rice accessions\n\n\n\n\n\nspecies_id\nspecies\ncontinent\nstatus\n\n\n\n\nOb\nOryza barthii\nAfrican\nWild\n\n\nOg\nOryza glaberrima\nAfrican\nCultivated\n\n\nOr\nOryza rufipogon\nAsian\nWild\n\n\nOs\nOryza sativa\nAsian\nCultivated"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#lets-read-the-data",
    "href": "slides/60-explorative-data-analysis.html#lets-read-the-data",
    "title": "Explorative Data Analysis",
    "section": "Let‚Äôs read the Data",
    "text": "Let‚Äôs read the Data\n\nrice <-  \n   paste0('https://raw.githubusercontent.com/othomantegazza',\n           '/mawazo-summer-school/main/data-int/rice.csv') %>% \n  read_delim(delim = ';') %>% \n  janitor::clean_names()\n\n\nrice %>% \n  glimpse()\n\nRows: 1,140\nColumns: 18\n$ id                                                     <chr> \"Ob01\", \"Ob01\",‚Ä¶\n$ species                                                <chr> \"Ob\", \"Ob\", \"Ob‚Ä¶\n$ accession_name                                         <chr> \"B197\", \"B197\",‚Ä¶\n$ origine_continent                                      <chr> \"Africa\", \"Afri‚Ä¶\n$ type_wild_cultivated                                   <chr> \"Wild\", \"Wild\",‚Ä¶\n$ sowing_localisation                                    <chr> \"Cali-Colombia\"‚Ä¶\n$ replicate_nb_1_2                                       <dbl> 1, 1, 1, 1, 1, ‚Ä¶\n$ plant_nb_1_to_3                                        <dbl> 1, 1, 1, 2, 2, ‚Ä¶\n$ panicle_nb_1_to_3                                      <dbl> 1, 2, 3, 1, 2, ‚Ä¶\n$ rachis_length_rl_in_cm                                 <dbl> 8.10, 6.51, 4.6‚Ä¶\n$ primary_branch_number_pbn                              <dbl> 5, 5, 4, 4, 4, ‚Ä¶\n$ average_of_primary_branch_length_in_cm_pbl             <dbl> 6.73, 6.26, 6.9‚Ä¶\n$ average_of_internode_along_primary_branch_in_cm_pbil   <dbl> 2.03, 1.63, 1.5‚Ä¶\n$ secondary_branch_number_sbn                            <dbl> 5, 3, 2, 5, 1, ‚Ä¶\n$ average_of_secondary_branch_length_in_cm_sbl           <dbl> 1.74, 1.51, 1.9‚Ä¶\n$ average_of_internode_along_secondary_branch_in_cm_sbil <dbl> 0.99, 0.72, 1.6‚Ä¶\n$ tertiary_branch_number_tbn                             <dbl> 0, 0, 0, 0, 0, ‚Ä¶\n$ spikelet_number_sp_n                                   <dbl> 38, 38, 30, 35,‚Ä¶\n\n\n\nrice %>% \n  count(species, origine_continent, type_wild_cultivated)\n\n# A tibble: 4 √ó 4\n  species origine_continent type_wild_cultivated     n\n  <chr>   <chr>             <chr>                <int>\n1 Ob      Africa            Wild                   264\n2 Og      Africa            Cultivated             370\n3 Or      Asia              Wild                   215\n4 Os      Asia              Cultivated             291"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#goal-of-the-paper",
    "href": "slides/60-explorative-data-analysis.html#goal-of-the-paper",
    "title": "Explorative Data Analysis",
    "section": "Goal of the paper",
    "text": "Goal of the paper\nExplore the phenotypic and transcripts of panicle development.\nTraits of agronomic interest in the panicle:\n\nNumber of Spikelet,\nNumber of Primary branches\nNumber of Seconday branches"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#section",
    "href": "slides/60-explorative-data-analysis.html#section",
    "title": "Explorative Data Analysis",
    "section": "",
    "text": "rice %>% \n  ggplot(aes(x = primary_branch_number_pbn,\n             y = secondary_branch_number_sbn)) +\n  geom_point()"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#section-1",
    "href": "slides/60-explorative-data-analysis.html#section-1",
    "title": "Explorative Data Analysis",
    "section": "",
    "text": "rice %>% \n  ggplot(aes(x = primary_branch_number_pbn,\n             y = secondary_branch_number_sbn,\n             colour = species)) +\n  geom_point()"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#section-2",
    "href": "slides/60-explorative-data-analysis.html#section-2",
    "title": "Explorative Data Analysis",
    "section": "",
    "text": "rice %>% \n  ggplot(aes(x = primary_branch_number_pbn,\n             y = secondary_branch_number_sbn,\n             colour = species)) +\n  geom_point(alpha = .4)"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#section-3",
    "href": "slides/60-explorative-data-analysis.html#section-3",
    "title": "Explorative Data Analysis",
    "section": "",
    "text": "rice %>% \n  ggplot(aes(x = primary_branch_number_pbn,\n             y = secondary_branch_number_sbn,\n             colour = species)) +\n  geom_point(alpha = .4) +\n  facet_wrap(facets = 'species')"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#section-4",
    "href": "slides/60-explorative-data-analysis.html#section-4",
    "title": "Explorative Data Analysis",
    "section": "",
    "text": "rice %>% \n  ggplot(aes(x = primary_branch_number_pbn,\n             y = secondary_branch_number_sbn)) +\n  geom_hex(bins = c(12, 3)) +\n  scale_fill_gradient(low = 'grey70', high = 'blue') +\n  facet_wrap(facets = 'species')"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#section-5",
    "href": "slides/60-explorative-data-analysis.html#section-5",
    "title": "Explorative Data Analysis",
    "section": "",
    "text": "rice %>% \n  select(species,\n         primary_branch_number_pbn,\n         secondary_branch_number_sbn) %>% \n  pivot_longer(-species,\n               names_to = 'branch_type',\n               values_to = 'branch_count') %>% \n  ggplot(aes(x = branch_type,\n             y = branch_count,\n             fill = species)) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#section-6",
    "href": "slides/60-explorative-data-analysis.html#section-6",
    "title": "Explorative Data Analysis",
    "section": "",
    "text": "# define colors\nrice_colors <- \n  c(Or = '#b5d4e9',\n    Os = '#1f74b4',\n    Ob = '#c0d787',\n    Og = '#349a37')\n\n# plot\nrice %>% \n  select(species,\n         primary_branch_number_pbn,\n         secondary_branch_number_sbn) %>% \n  pivot_longer(-species,\n               names_to = 'branch_type',\n               values_to = 'branch_count') %>% \n  ggplot(aes(x = branch_type,\n             y = branch_count,\n             fill = species)) +\n  geom_boxplot() +\n  scale_fill_manual(values = rice_colors)"
  },
  {
    "objectID": "slides/60-explorative-data-analysis.html#exercise",
    "href": "slides/60-explorative-data-analysis.html#exercise",
    "title": "Explorative Data Analysis",
    "section": "Exercise",
    "text": "Exercise\nExplore the rice panicle dataset.\nHow are the measured variable distributed? Do they correlate with each other?\nCan you find some of the traits that mark the differences between wild and domesticated varieties? And what about the differences between the Asian and African varieties.\nDid you manage to anwser all your questions with summary statistics and graphics? Note down questions that are still open and that you think should be tackled with more advanced statistics.\n\n\nHome | 2022 CBSER Summer School"
  },
  {
    "objectID": "slides/70-intro-to-models.html",
    "href": "slides/70-intro-to-models.html",
    "title": "A Few words on Statistical Models",
    "section": "",
    "text": "When you reach the limit of what graphical exploration and summary statistics can tell you, you can use statistical models to explore your data.\n\n\nWhen we look for insights in complex datasets, sometimes we want to know:\n\nIs there a multivariate pattern in the data? One that is evident only when we compare multiple variables at once.\nAre the patterns that we observe in data there by chance? If it they are not, we can start hypothesizing and exploring if they are caused by something.\n\n\n\n\n\n\nIn the lesson on supervised models, we will use linear models to test if we could ‚Äúpredict‚Äù the number of spikelets from the number primary branches and other features of rice panicles, i.e.¬†to test if we could predict a response from a collection of predictors.\n\n\n\nIn the lesson on unsupervised models, we will use clustering and Principal Component Analysis to explore if we can use multiple phenotypic features to group rice panicle in distinct sets that behave similarly; i.e.¬†to detect multivariate patterns in the data."
  },
  {
    "objectID": "slides/73-supervised.html",
    "href": "slides/73-supervised.html",
    "title": "A Glimpse to Linear Models",
    "section": "",
    "text": "Linear model are historically the first type of supervised model that is encountered when studying statistical learning, and are still probably the most used in biology, ecology and plenty of other fields. The most simple form of linear model is linear regression.\nYou can use linear model to test if a combination of one or more predictor variables can ‚Äúexplain‚Äù, infer or predict a response variable.\nFor reference on linear models check:\n\nChapters 3 to 7 of ISLR.\nChapters 16, 17 and 18 of Introduction to Data Science.\nAnalising Data Using Linear Models, for students in social, behavioural and management science, by St√©phanie M. van den Berg, basically the whole book.\n\nLet‚Äôs try linear regression in R."
  },
  {
    "objectID": "slides/73-supervised.html#load-and-check",
    "href": "slides/73-supervised.html#load-and-check",
    "title": "A Glimpse to Linear Models",
    "section": "3.1 Load and check",
    "text": "3.1 Load and check\n\n3.1.1 Read the data\nI‚Äôve mirrored the data on my instance of github, let‚Äôs read them from there.\n\nrice <-  \n  paste0(\n    'https://raw.githubusercontent.com/othomantegazza',\n    '/mawazo-summer-school/main/data-int/rice.csv'\n  ) %>% \n  read_delim(delim = ';') %>% \n  janitor::clean_names()\n\nRows: 1140 Columns: 18\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \";\"\nchr  (6): Id, Species, Accession Name, Origine Continent, Type (Wild/Cultiva...\ndbl (12): Replicate_nb (1/2), Plant_nb (1 to 3), Panicle_nb (1 to 3), Rachis...\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n3.1.2 Structure of the data\nLet‚Äôs also check how the data look like:\n\nrice\n\n# A tibble: 1,140 √ó 18\n   id    species acces‚Ä¶¬π origi‚Ä¶¬≤ type_‚Ä¶¬≥ sowin‚Ä¶‚Å¥ repli‚Ä¶‚Åµ plant‚Ä¶‚Å∂ panic‚Ä¶‚Å∑ rachi‚Ä¶‚Å∏\n   <chr> <chr>   <chr>   <chr>   <chr>   <chr>     <dbl>   <dbl>   <dbl>   <dbl>\n 1 Ob01  Ob      B197    Africa  Wild    Cali-C‚Ä¶       1       1       1    8.1 \n 2 Ob01  Ob      B197    Africa  Wild    Cali-C‚Ä¶       1       1       2    6.51\n 3 Ob01  Ob      B197    Africa  Wild    Cali-C‚Ä¶       1       1       3    4.67\n 4 Ob01  Ob      B197    Africa  Wild    Cali-C‚Ä¶       1       2       1    5.96\n 5 Ob01  Ob      B197    Africa  Wild    Cali-C‚Ä¶       1       2       2    5.99\n 6 Ob01  Ob      B197    Africa  Wild    Cali-C‚Ä¶       1       2       3    6.23\n 7 Ob01  Ob      B197    Africa  Wild    Cali-C‚Ä¶       1       3       1    5.54\n 8 Ob01  Ob      B197    Africa  Wild    Cali-C‚Ä¶       1       3       2    4.15\n 9 Ob01  Ob      B197    Africa  Wild    Cali-C‚Ä¶       1       3       3    4.71\n10 Ob01  Ob      B197    Africa  Wild    Cali-C‚Ä¶       2       1       1    6.95\n# ‚Ä¶ with 1,130 more rows, 8 more variables: primary_branch_number_pbn <dbl>,\n#   average_of_primary_branch_length_in_cm_pbl <dbl>,\n#   average_of_internode_along_primary_branch_in_cm_pbil <dbl>,\n#   secondary_branch_number_sbn <dbl>,\n#   average_of_secondary_branch_length_in_cm_sbl <dbl>,\n#   average_of_internode_along_secondary_branch_in_cm_sbil <dbl>,\n#   tertiary_branch_number_tbn <dbl>, spikelet_number_sp_n <dbl>, and ‚Ä¶\n# ‚Ñπ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n\n\n\nrice %>% glimpse()\n\nRows: 1,140\nColumns: 18\n$ id                                                     <chr> \"Ob01\", \"Ob01\",‚Ä¶\n$ species                                                <chr> \"Ob\", \"Ob\", \"Ob‚Ä¶\n$ accession_name                                         <chr> \"B197\", \"B197\",‚Ä¶\n$ origine_continent                                      <chr> \"Africa\", \"Afri‚Ä¶\n$ type_wild_cultivated                                   <chr> \"Wild\", \"Wild\",‚Ä¶\n$ sowing_localisation                                    <chr> \"Cali-Colombia\"‚Ä¶\n$ replicate_nb_1_2                                       <dbl> 1, 1, 1, 1, 1, ‚Ä¶\n$ plant_nb_1_to_3                                        <dbl> 1, 1, 1, 2, 2, ‚Ä¶\n$ panicle_nb_1_to_3                                      <dbl> 1, 2, 3, 1, 2, ‚Ä¶\n$ rachis_length_rl_in_cm                                 <dbl> 8.10, 6.51, 4.6‚Ä¶\n$ primary_branch_number_pbn                              <dbl> 5, 5, 4, 4, 4, ‚Ä¶\n$ average_of_primary_branch_length_in_cm_pbl             <dbl> 6.73, 6.26, 6.9‚Ä¶\n$ average_of_internode_along_primary_branch_in_cm_pbil   <dbl> 2.03, 1.63, 1.5‚Ä¶\n$ secondary_branch_number_sbn                            <dbl> 5, 3, 2, 5, 1, ‚Ä¶\n$ average_of_secondary_branch_length_in_cm_sbl           <dbl> 1.74, 1.51, 1.9‚Ä¶\n$ average_of_internode_along_secondary_branch_in_cm_sbil <dbl> 0.99, 0.72, 1.6‚Ä¶\n$ tertiary_branch_number_tbn                             <dbl> 0, 0, 0, 0, 0, ‚Ä¶\n$ spikelet_number_sp_n                                   <dbl> 38, 38, 30, 35,‚Ä¶\n\n\n\nrice %>% count(species)\n\n# A tibble: 4 √ó 2\n  species     n\n  <chr>   <int>\n1 Ob        264\n2 Og        370\n3 Or        215\n4 Os        291\n\n\n\nrice %>% pull(accession_name) %>% n_distinct()\n\n[1] 91\n\n\n\n\n3.1.3 Content and aim of the data\nThe dataset contains phenotypic measurements of 1140 rice panicle from 91 rice accessions of 4 different rice species.\nThe aim of the paper in which this dataset is published is to compare panicles at a phenotypic and transcriptomic level for a combination of 4 African and Asian, wild and domesticated rice species.\n\n\n\n\n\nspecies_id\nspecies\ncontinent\nstatus\n\n\n\n\nOb\nOryza barthii\nAfrican\nWild\n\n\nOg\nOryza glaberrima\nAfrican\nCultivated\n\n\nOr\nOryza rufipogon\nAsian\nWild\n\n\nOs\nOryza sativa\nAsian\nCultivated\n\n\n\n\n\nIn the picture below, from the original article (CC-BY-NC) you can find a graphical explanation of the phenotypic features measured in the rice dataset."
  },
  {
    "objectID": "slides/73-supervised.html#question",
    "href": "slides/73-supervised.html#question",
    "title": "A Glimpse to Linear Models",
    "section": "3.2 Question",
    "text": "3.2 Question\nLet‚Äôs try to answer the question: Can we use the number of branches (PB e SB) on a panicle to explain the number of spikelets (SP) on the same panicle? In case how?"
  },
  {
    "objectID": "slides/73-supervised.html#visualize-the-data-first",
    "href": "slides/73-supervised.html#visualize-the-data-first",
    "title": "A Glimpse to Linear Models",
    "section": "3.3 Visualize the data first",
    "text": "3.3 Visualize the data first\nTo answer the question, let‚Äôs first visualize the data to get an idea of how they are distributed.\n\nrice %>% \n  ggplot(aes(x = primary_branch_number_pbn,\n             y = spikelet_number_sp_n,\n             colour = species)) +\n  geom_point(alpha = .4) \n\n\n\n\nIt seems that the number of spikelets grows with the number of primary branches on a panicle. The pattern might not be perfectly linear, and there might be some variation among different rice species.\nLet‚Äôs also visualize the same data divided in facets, to get a clearer idea of how different species behave.\n\nrice %>% \n  ggplot(aes(x = primary_branch_number_pbn,\n             y = spikelet_number_sp_n,\n             colour = species)) +\n  geom_point(alpha = .4) +\n  facet_wrap(facets = 'species')\n\n\n\n\nThe data points are more dispersed vertically in Og (Oryza glaberrima) and Oryza sativa. Those two species are domesticated species, they produce many secondary branches, this ‚Äúuncouples‚Äù the number of spikelets from the number of primary branches.\nCan we describe this observation with a statistical model using linear regression?"
  },
  {
    "objectID": "slides/73-supervised.html#generic-linear-regression",
    "href": "slides/73-supervised.html#generic-linear-regression",
    "title": "A Glimpse to Linear Models",
    "section": "4.1 Generic linear regression",
    "text": "4.1 Generic linear regression\nIn a simple linear model, such as linear regression, we are modelling the response variable Y as a combination two coefficients a and b that define the intercept and the slope of the line, the predictor X and an error term that, in absence of a better explanation, we hypothesize as being random gaussian.\n\\[Y = a + b * X + error\\]\nWe can express the same concept with a tilde ~ formula.\n\\[Y \\sim a + b * X\\] If we substitute the generic terms of the equation above with the variables from the rice dataset, we can say that, in the rice problem, we are trying to guess the intercept and slope coefficients for this equation.\n\\[spikelets = intercept + slope * primary\\_branches + error\\] Let‚Äôs use a tilde formula again.\n\\[spikelets \\sim intercept + slope * primary\\_branches\\]\nWith this syntax we can express models with any number of predictors, or any mathematical combination of them.\n\\[Y = a + b_1X_1 + b\\_2X_2 + ... + b\\_nX_n + error\\] ## Model formulas in R\nR has adopted the tilde model formula definition that we have seen above to define models within it‚Äôs function, such as lm(). So, for example, the formula: spikelet_number_sp_n ~ primary_branch_number_pb will use:\n\nThe variable spikelet_number_sp_n as response.\nThe primary_branch_number_pbn as predictor.\nThe intercept and the slope get‚Äôs calculated automatically when we provide this formula and the associated data to the function lm()"
  },
  {
    "objectID": "slides/73-supervised.html#explore-the-results",
    "href": "slides/73-supervised.html#explore-the-results",
    "title": "A Glimpse to Linear Models",
    "section": "5.1 Explore the results",
    "text": "5.1 Explore the results\n\n5.1.1 A summary of the results\nThe summary() method prints:\n\nThe coefficients that we‚Äôve seen above (in this case the slope and the intercept of the linear regression line) with the associated T-statistics.\nR-squared and F-statistics measuring and scoring the overall model.\n\n\nfit %>% summary()\n\n\nCall:\nlm(formula = spikelet_number_sp_n ~ primary_branch_number_pbn, \n    data = rice)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-134.11  -28.79  -11.35   19.07  209.47 \n\nCoefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n(Intercept)               -20.4391     4.0043  -5.104 3.89e-07 ***\nprimary_branch_number_pbn  15.5966     0.4102  38.023  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 50.08 on 1138 degrees of freedom\nMultiple R-squared:  0.5596,    Adjusted R-squared:  0.5592 \nF-statistic:  1446 on 1 and 1138 DF,  p-value: < 2.2e-16\n\n\n\n\n5.1.2 Diagnostic plots\nIf you use the plot() method on a fitted lm object, R prints a selection of 4 diagnostic plots.\n\npar(mfrow = c(2, 2)) # organize the plots in a 2x2 grid\nplot(fit)"
  },
  {
    "objectID": "slides/73-supervised.html#tidy-the-results-with-broom",
    "href": "slides/73-supervised.html#tidy-the-results-with-broom",
    "title": "A Glimpse to Linear Models",
    "section": "5.2 Tidy the results with broom",
    "text": "5.2 Tidy the results with broom\nTo access the coefficients and statistics of the model systematically, what better choice than to tidy them in a tibble with the package broom\n\n\n\n\n\n\nbroom summarizes key information about models in tidy tibble()s. broom provides three verbs to make it convenient to interact with model objects:\n\ntidy() summarizes information about model components.\nglance() reports information about the entire model.\naugment() adds information about observations to a dataset.\n\n\n\nLet‚Äôs check broom‚Äôs main functions.\n\n5.2.1 Glance the results of the linear regression\nglance() reports information about the entire model, similar to what we have seen in the last lines of the output of summary(), but in a tibble.\n\nfit %>%\n  glance() %>% \n  glimpse()\n\nRows: 1\nColumns: 12\n$ r.squared     <dbl> 0.5595511\n$ adj.r.squared <dbl> 0.559164\n$ sigma         <dbl> 50.08321\n$ statistic     <dbl> 1445.727\n$ p.value       <dbl> 7.518553e-205\n$ df            <dbl> 1\n$ logLik        <dbl> -6078.191\n$ AIC           <dbl> 12162.38\n$ BIC           <dbl> 12177.5\n$ deviance      <dbl> 2854478\n$ df.residual   <int> 1138\n$ nobs          <int> 1140\n\n\n\n\n5.2.2 Tidy the results of the linear regression\ntidy() summarizes information about model coefficients and their statistics in a tibble.\n\nfit_tidy <-\n  fit %>%\n  tidy()\n\nfit_tidy\n\n# A tibble: 2 √ó 5\n  term                      estimate std.error statistic   p.value\n  <chr>                        <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)                  -20.4     4.00      -5.10 3.89e-  7\n2 primary_branch_number_pbn     15.6     0.410     38.0  7.52e-205\n\n\n\n\n5.2.3 Augment the results of the linear regression\naugment() returns a tibble with the fitted and residuals values for every observation that was used to train the model.\n\nfit_augmented <-\n  fit %>%\n  augment()\n\nfit_augmented\n\n# A tibble: 1,140 √ó 8\n   spikelet_number_sp_n primary_‚Ä¶¬π .fitted .resid    .hat .sigma .cooksd .std.‚Ä¶¬≤\n                  <dbl>      <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>   <dbl>\n 1                   38          5    57.5 -19.5  0.00199   50.1 1.52e-4 -0.391 \n 2                   38          5    57.5 -19.5  0.00199   50.1 1.52e-4 -0.391 \n 3                   30          4    41.9 -11.9  0.00260   50.1 7.44e-5 -0.239 \n 4                   35          4    41.9  -6.95 0.00260   50.1 2.51e-5 -0.139 \n 5                   22          4    41.9 -19.9  0.00260   50.1 2.07e-4 -0.399 \n 6                   28          4    41.9 -13.9  0.00260   50.1 1.01e-4 -0.279 \n 7                   34          4    41.9  -7.95 0.00260   50.1 3.29e-5 -0.159 \n 8                   18          3    26.4  -8.35 0.00335   50.1 4.68e-5 -0.167 \n 9                   29          3    26.4   2.65 0.00335   50.1 4.71e-6  0.0530\n10                   38          6    73.1 -35.1  0.00151   50.1 3.72e-4 -0.702 \n# ‚Ä¶ with 1,130 more rows, and abbreviated variable names\n#   ¬π‚Äãprimary_branch_number_pbn, ¬≤‚Äã.std.resid\n# ‚Ñπ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "slides/73-supervised.html#visualize-the-results-of-the-linear-regression",
    "href": "slides/73-supervised.html#visualize-the-results-of-the-linear-regression",
    "title": "A Glimpse to Linear Models",
    "section": "5.3 Visualize the results of the linear regression",
    "text": "5.3 Visualize the results of the linear regression\nOnce we have extracted the model coefficients with broom, we can use ggplot to represent the regression line graphically.\n\nmod_intercept <- fit_tidy %>% slice(1) %>% pull(estimate)\nmod_slope <- fit_tidy %>% slice(2) %>% pull(estimate)\n\nrice %>% \n  ggplot(aes(x = primary_branch_number_pbn,\n             y = spikelet_number_sp_n)) +\n  geom_point(alpha = .2) +\n  geom_abline(intercept = mod_intercept,\n              slope = mod_slope)\n\n\n\n\nIt‚Äôs basically the same result that we get if we add a geom_smooth() to the graphic, with the parameter method = 'lm'.\n\nrice %>% \n  ggplot(aes(x = primary_branch_number_pbn,\n             y = spikelet_number_sp_n)) +\n  geom_point(alpha = .2) +\n  geom_smooth(method = 'lm')\n\n`geom_smooth()` using formula 'y ~ x'"
  },
  {
    "objectID": "slides/73-supervised.html#conclusions-from-the-model-and-from-the-graph",
    "href": "slides/73-supervised.html#conclusions-from-the-model-and-from-the-graph",
    "title": "A Glimpse to Linear Models",
    "section": "5.4 Conclusions from the model and from the graph",
    "text": "5.4 Conclusions from the model and from the graph\n\nThe model suggests that the number of spikelets grows with the number of primary branches. More precisely, the model estimates that on average, you get 15.6 spikelets every new primary branch.\nWe can see visually that the variance of the response variable spikelet_number_sp_n grows when the predictor primary_branch_number_pbn grows. So at high number of primary branches we can expect our predictions of spikelet number to be more approximated.\nYou can see from the diagnostic plot, that the relationship between number of spikelets and primary branches might not be perfectly linear. One educated hypothesis to explain this behaviour might be that the species that produce most spikelets rely heavily on secondary branches, and not only on primary branches."
  },
  {
    "objectID": "slides/73-supervised.html#what-if-we-want-to-use-more-than-one-predictor",
    "href": "slides/73-supervised.html#what-if-we-want-to-use-more-than-one-predictor",
    "title": "A Glimpse to Linear Models",
    "section": "6.1 What if we want to use more than one predictor",
    "text": "6.1 What if we want to use more than one predictor\nWe can specify any type of formula, including as predictor both continuous and categorical variables or any type of mathematical transformation of such variables.\nSee chapter 3 and 7 of Introduction to Statistical Learning to learn in detail about multiple regression and moving beyond linearity.\nLet‚Äôs try to fit the spikelet number as a function of both primary and secondary branch number. To achieve this we can add the variable secondary_branch_number_sbn to the model formula that we have seen above.\nspikelet_number_sp_n ~ primary_branch_number_pbn + secondary_branch_number_sbn\n\nfit_multiple <- lm(\n  formula = spikelet_number_sp_n ~\n    primary_branch_number_pbn +\n    secondary_branch_number_sbn,\n  data = rice)\n\nLet‚Äôs explore the results of the fit:\n\nfit_multiple %>%\n  glance() %>% \n  glimpse()\n\nRows: 1\nColumns: 12\n$ r.squared     <dbl> 0.9525715\n$ adj.r.squared <dbl> 0.9524881\n$ sigma         <dbl> 16.44202\n$ statistic     <dbl> 11417.96\n$ p.value       <dbl> 0\n$ df            <dbl> 2\n$ logLik        <dbl> -4807.906\n$ AIC           <dbl> 9623.811\n$ BIC           <dbl> 9643.966\n$ deviance      <dbl> 307376.4\n$ df.residual   <int> 1137\n$ nobs          <int> 1140\n\n\n\nfit_multiple %>% \n  tidy()\n\n# A tibble: 3 √ó 5\n  term                        estimate std.error statistic  p.value\n  <chr>                          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)                     4.72    1.34        3.52 4.43e- 4\n2 primary_branch_number_pbn       4.13    0.179      23.0  1.00e-96\n3 secondary_branch_number_sbn     4.09    0.0421     97.1  0       \n\n\nThe p-value of the new term secondary_branch_number_sbn has an incredibly low p-value (approximated at 0), a hint that the this term is adding information to the model and is helping us building a better function that connects the spikelet number to the branch number.\nWe can use the diagnostic plot to check how this model is performing.\n\npar(mfrow = c(2, 2)) # organize the plots in a 2x2 grid\nfit_multiple %>% plot()\n\n\n\n\nYou can extend this reasoning to any variable in the dataset.\nFor example, try yourself to model the number of spikelet with this formula below, in which we add the variable as a new predictor species:\nspikelet_number_sp_n ~\n   primary_branch_number_pbn +\n   secondary_branch_number_sbn +\n   species"
  },
  {
    "objectID": "slides/73-supervised.html#comparing-models",
    "href": "slides/73-supervised.html#comparing-models",
    "title": "A Glimpse to Linear Models",
    "section": "6.2 Comparing models",
    "text": "6.2 Comparing models\nAs our model become more and more nuanced and complicated, it gets harder to understand the output intuitively, and to visualize the results.\nThus it gets harder to answer vital questions such as:\n\nwhich combination and transformation of predictors should I include in the model,\nwhich model is best to encapsulate the signal in my data, successfully excluding the noise.\n\nPredictor and model selection is an incredibly important and wide field in modelling and the method might change whether you‚Äôre aim is inference or prediction.\nA very basic example of ways to compare similar model is to run an anova to check if the model with an added term is explaining more variance then the simpler one.\n\nanova(\n  fit, \n  fit_multiple\n)\n\nAnalysis of Variance Table\n\nModel 1: spikelet_number_sp_n ~ primary_branch_number_pbn\nModel 2: spikelet_number_sp_n ~ primary_branch_number_pbn + secondary_branch_number_sbn\n  Res.Df     RSS Df Sum of Sq      F    Pr(>F)    \n1   1138 2854478                                  \n2   1137  307376  1   2547101 9421.8 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nBut you can learn more effective ways to select and test if your linear model is working properly in:\n\nChapter 5 ‚ÄúResampling Methods‚Äù and chapter 6 ‚ÄúLinear Model Selection and Regularization‚Äù of Introduction to Statistical Learning.\nChapter 10 to 15 of Tidy Modeling with R."
  },
  {
    "objectID": "slides/73-supervised.html#example-with-linear-regression",
    "href": "slides/73-supervised.html#example-with-linear-regression",
    "title": "A Glimpse to Linear Models",
    "section": "7.1 Example with linear regression",
    "text": "7.1 Example with linear regression\nLet‚Äôs load also the tidymodels package parsnip and use it to fit the same linear regression that we have seen above.\n\nlibrary(parsnip)\n\nFirst let‚Äôs define a linear regression model and declare that we are using lm() as the modelling engine.\n\nmod <-\n  linear_reg() %>%\n  set_engine('lm')\n\nThen, let‚Äôs fit the model\n\nmod_fit <- \n  mod %>% \n  fit(\n    formula = spikelet_number_sp_n ~ primary_branch_number_pbn,\n    data = rice\n  )\n\ntidy(mod_fit)\n\n# A tibble: 2 √ó 5\n  term                      estimate std.error statistic   p.value\n  <chr>                        <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)                  -20.4     4.00      -5.10 3.89e-  7\n2 primary_branch_number_pbn     15.6     0.410     38.0  7.52e-205"
  },
  {
    "objectID": "slides/73-supervised.html#a-unified-framework",
    "href": "slides/73-supervised.html#a-unified-framework",
    "title": "A Glimpse to Linear Models",
    "section": "7.2 A unified framework",
    "text": "7.2 A unified framework\nWe have achieved the same as when we where calling lm(). Although we have used more lines of code, if you get used to the tidymodels syntax, you will have access to advanced modeling methods and workflows easily, because the same standardized syntax will apply to all modeling methods that you want to apply.\nCheck the Tidymodels with R book to take your next step in the statistical modeling world with R."
  },
  {
    "objectID": "slides/76-unsupervised.html",
    "href": "slides/76-unsupervised.html",
    "title": "Unsupervised Learning - Explore your Data with Clustering and PCA",
    "section": "",
    "text": "üöß Work in Progress ‚ö†Ô∏è"
  },
  {
    "objectID": "slides/76-unsupervised.html#references-first",
    "href": "slides/76-unsupervised.html#references-first",
    "title": "Unsupervised Learning - Explore your Data with Clustering and PCA",
    "section": "1.1 References first",
    "text": "1.1 References first\nAs always, references first, and my favorite references for unsupervised learning are:\n\nIntroduction to Statistical Learning, chapter 12.\nIntroduction to Data Science: chapter 34 and part of chapter 33.\nChapter 16 of Tidy Modeling with R.\nA tutorial on Principal Component Analysis [PDF] by Jonathon Shlens.\n\nThere‚Äôs an additional reference that I really like, that explains Principal Components visually. Check it out!"
  },
  {
    "objectID": "slides/76-unsupervised.html#ok-but-what-is-unsupervised-learning",
    "href": "slides/76-unsupervised.html#ok-but-what-is-unsupervised-learning",
    "title": "Unsupervised Learning - Explore your Data with Clustering and PCA",
    "section": "1.2 Ok, but what is Unsupervised Learning?",
    "text": "1.2 Ok, but what is Unsupervised Learning?\nUnsupervised learning might seem strange.\n\n1.2.1 A quick recap about supervised learning\nIn order to define it, let‚Äôs first take a step back and remember what we have learned about supervised learning in the previous chapter. When we fit a supervised learning model, such as a linear regression model, we are looking for a function that is able to guess an outcome \\(Y\\) starting from the value of a series of predictors \\(X_1, X_2, ..., X_n\\); both the outcome variable \\(Y\\) and the predictor variables \\(X_1, X_2, ..., X_n\\) are already part of our data, before fit the model. When we do fit the model, we estimate parameters for the function that connects the outcome and the predictor. In the linear regression example, those parameters would be the slope and intercept of the regression line.\nOnce we have estimated those parameters, then we can then use statistical indicators to investigate if the model that we have selected and the parameters that we have estimated are convincingly explaining how \\(Y\\) responds to variations in the predictors \\(X\\). If they don‚Äôt, the model that we have selected might be inappropriate for capturing how the outcome responds to the predictors; or it might be that the outcome is not responding to changes in the predictor variables at all.\n\n\n1.2.2 Let‚Äôs compare it to unsupervised learning\nIn supervised learning instead, we don‚Äôt have an outcome variable \\(Y\\), or we don‚Äôt care to look at it, thus the world ‚Äúunsupervised‚Äù. We look only at a series of predictors \\(X_1, X_2, ... X_n\\), and we ask to ourselves: is there any interesting pattern in the predictor? Do they co-variate in interesting ways? Can we group them together in an insightful way judging from their covariance patterns?\nSince we don‚Äôt have an outcome variable \\(Y\\) that we could use to test the performance of our model, there is no real way to tell if our unsupervised model is ‚Äúgood‚Äù or ‚Äúbad‚Äù; if it is ‚Äúsuccessful‚Äù or not. The model will probably show us some pattern in the data; it‚Äôs up to us to further investigate those patterns to understand if they are useful and insightful, or not.\n\n\n1.2.3 Examples of unsupervised learning methods\nThe unsupervised learning methods that you have probably already heard about are :\n\nClustering.\nPrincipal Component Analysis.\n\nYou could also have heard the term dimension reduction as a synonym to unsupervised learning. This is a great term to describe it, since we often use those methods to reduce the dimensions (read: number of variables i.e.¬†number of columns), of a complex multivariate dataset to a smaller, informative and more manageable subset or combination of them.\n\n\n1.2.4 Examples of unsupervised learning questions\nFor example, we might be measuring a range of pollutants in many samples of soil from selected areas around the world. In this setup, the pollutants would be the variable/predictors of the data and each sample of soil would be an observation. We want to know if there are groups of soils with similar combination of pollutants, to investigate their history, and their effects.\nOr, similarly, we could use transcriptomics to measure gene expression at the transcriptomics level in many samples of different tumors tissues. We want to look at those data to seek for patterns and understand if group of tumors have similar gene expression pattern. Again, we could use unsupervised learning to search for those patterns.\nComing back to the rice panicles dataset: The group that published the paper have measured many variables (predictors): rachis_length, primary_branch_length, primary_branch_number, secondary_branch_length, internode_length and so on. We might be interested to know if there are groups of rice accessions (observations) that share similar panicle features. For example, maybe there is an unexpected group of rice varieties with long secondary branches, short rachis, and few primary branches, or vice-versa.\nIt might be that we don‚Äôt even know which pattern we are looking for, we just want to know if there are groups of rice varieties with similar panicle features, so that later we can investigate those features. If our data are multivariate, and they often are, it is unlikely that we will manage to explore all the combination of features visually, so we can seek for pattern in the data with unsupervised learning, such as PCA or clustering.\nWe will use the rice panicle dataset to demonstrate how to run PCA and hierarchical clustering in R."
  },
  {
    "objectID": "slides/76-unsupervised.html#r-packages",
    "href": "slides/76-unsupervised.html#r-packages",
    "title": "Unsupervised Learning - Explore your Data with Clustering and PCA",
    "section": "2.1 R packages",
    "text": "2.1 R packages\nLet‚Äôs load the R packages needed to cover the examples in this chapter.\n\nlibrary(dplyr)\nlibrary(readr)\nlibrary(magrittr)\nlibrary(tidyr)\nlibrary(palmerpenguins)\nlibrary(tibble)\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(here)\nlibrary(stringr)\nlibrary(broom)\n\ntheme_update(axis.title = element_text(size = 15),\n             axis.text = element_text(size = 15),\n             strip.text = element_text(size = 15))"
  },
  {
    "objectID": "slides/76-unsupervised.html#a-naive-example-on-synthetic-data",
    "href": "slides/76-unsupervised.html#a-naive-example-on-synthetic-data",
    "title": "Unsupervised Learning - Explore your Data with Clustering and PCA",
    "section": "3.1 A Naive Example on Synthetic Data",
    "text": "3.1 A Naive Example on Synthetic Data\nWe generally use PCA to make sense of multidimensional (i.e.¬†multivariate) datasets.\nInstead, for demonstration sake, before dealing with a complex dataset, let‚Äôs start from a simple example with data in 2 dimension. We will use this data to demostrate of how the PCA works and how to interpret it.\nFor the next example, let‚Äôs draw from satellite imaging of cultivated fields. While plant leaves absorb blue and red light, they reflect green and IR light, Thus, satellite images of vegetated area will show strong reflection values in those wavelength.\nLet‚Äôs imagine that we have collected a dataset in two dimensions, storing:\n\n2 variables: green and IR reflectance,\n2000 observations, that cover a rectangular grid over a vegetated area.\n\nBoth variables will basically be a function of the vegetation density, plus some ‚Äúnoise‚Äù coming from atmospheric disturbance, different plant composition or else. However, for the sake of demostrationm, let‚Äôs imagine that we don‚Äôt know that yet.\n\n3.1.1 Generate the data\nLet‚Äôs assume that vegetation coverage is measured in a value ranging between 0 and 1. We can generate a vector that stores 100 numbers sampled randomly from a uniform distribution, that simulates vegetation coverage values between 0.3 and 1. This vector represents the vegetation coverage, thus we call it veg.\n\nset.seed(21)\nsize <- 100\nnoise <- .2\nveg <- runif(size, min = 0.3, 1)\n\nIR and green reflectance will both be a linear function of the vegetation coverage stored in v, plus a small random noise.\n\nreflectance <- \n  tibble(\n    ir = veg*2 + rnorm(size, mean = 0, sd = noise),\n    green = veg*1.3 + rnorm(size, mean = 0, sd = noise/2)\n  )\n\n\nSo, the reflectance dataset looks like this:\n\nreflectance\n\n# A tibble: 100 √ó 2\n      ir green\n   <dbl> <dbl>\n 1 1.58  1.16 \n 2 1.31  0.551\n 3 1.54  0.895\n 4 0.788 0.565\n 5 2.06  1.33 \n 6 2.09  1.28 \n 7 0.738 0.579\n 8 0.660 0.465\n 9 2.16  1.33 \n10 2.02  1.05 \n# ‚Ä¶ with 90 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows\n\n\nIf we plot green vs.¬†ir reflectance, we see right away that the two variables are correlated.\n\nreflectance %>% \n  ggplot() +\n  aes(x = green,\n      y = ir) +\n  geom_point(alpha = .6) +\n  labs(title = \"Reflectance\")\n\n\n\n\nWhat if we want to describe how green and ir covariates through PCA?\n\n\n3.1.2 Let‚Äôs run the PCA\nTo run the PCA, first we have to center the data at 0 and to scale them to z-scores.\nThis can be achieved with the function scale() from base R.\n\nreflectance_scaled <- \n  reflectance %>%\n  scale() %>%\n  as_tibble()\n\nWe call as_tibble() after scale() because the scale function returns a matrix-like object, while for simplicity, we tend to work with tibble dataframes.\nLet‚Äôs plot the centered and scaled data to see what they look like.\n\nreflectance_scaled %>% \n  ggplot() +\n  aes(x = green,\n      y = ir) +\n  geom_point(alpha = .6) +\n  labs(title = \"Reflectance, scaled\")\n\n\n\n\nWe can see that now the two variables (ir and green reflectance) are both centered at zero and roughly in range (-2, 2). The scale of the variables has changed, but the main pattern in the data is unchanged.\nCalling the function prcomp() we can run a principal component analysis on this dataset, and store the results in the object pca.\n\npca <- \n  reflectance_scaled %>% \n  prcomp()\n\nThe ouput of prcomp() is a list with 5 elements in it:\n\nsdesv: the standard deviation of each component.\nrotation: the matrix of variable loading, indicating how the original dataset was rotated.\nx: the projection of our original data on the principal components, which is a dataset that has the same dimensions of our original data (in this case 2x100).\ncenter and scale, the center and scale used (if centering and scaling was performed before, they should approximate to 0).\n\n\nclass(pca)\n\n[1] \"prcomp\"\n\n\n\ntypeof(pca)\n\n[1] \"list\"\n\n\n\nls(pca)\n\n[1] \"center\"   \"rotation\" \"scale\"    \"sdev\"     \"x\"       \n\n\nLet‚Äôs interpret the PCA results from an Exploratory Data Analysis point of view, and learn how to make use of each of those output.\n\n\n3.1.3 Analytical interpretation of PCA results\nRemember that when we run a principal component analysis, we find the main axis of variation of our data, project the original data on those main axis of variation, and then we hypothesis the projections on the first principal components contains the signal, while the projection on the last components, is the noise.\nWe have the projection for our vegetation dataset in the matrix x stored within the list pca . Let‚Äôs access this object calling pca$x at the R console, and turn it into a tibble to explore it‚Äôs content.\n\nprojections <-\n  pca$x %>% \n  as_tibble()\n\n\nprojections\n\n# A tibble: 100 √ó 2\n      PC1       PC2\n    <dbl>     <dbl>\n 1 -0.964  0.317   \n 2  0.934 -0.749   \n 3 -0.247 -0.257   \n 4  1.68   0.0708  \n 5 -2.08  -0.000405\n 6 -2.03  -0.142   \n 7  1.73   0.178   \n 8  2.12   0.0185  \n 9 -2.25  -0.137   \n10 -1.35  -0.619   \n# ‚Ä¶ with 90 more rows\n# ‚Ñπ Use `print(n = ...)` to see more rows\n\n\nThe projection matrix has the same size and dimension of the original dataset (2x100), the first column stores projections of original data on the first principal component PC1, while the second column stores the projections of original data on the second principal component PC2.\nBy definition the principal components are ordered by the standard deviation of the data projected on them, in decreasing order. Indeed, if we check it:\n\nprojections %>% \n  summarise(\n    standard_deviation_PC1 = sd(PC1),\n    standard_deviation_PC2 = sd(PC2)\n  )\n\n# A tibble: 1 √ó 2\n  standard_deviation_PC1 standard_deviation_PC2\n                   <dbl>                  <dbl>\n1                   1.36                  0.373\n\n\n\nprojections <- \n  projections %>% \n  mutate(signal = veg) %>% \n  bind_cols(reflectance)\n\n\nprojections %>% \n  ggplot() +\n  aes(x = veg,\n      y = PC1) +\n  geom_point()\n\n\n\n\n\nprojections %>% \n  GGally::ggpairs()\n\n\n\n\n\n\n\n\nThe signal is more correlated to PC1 (r :-0.964) than to the simulated measurements ir (r: 0.909) and green (r: 0.952).\nThe signal is less correlated to PC2 (or no correlated at all to it) than ir and green .\n\nIt‚Äôs almost as if the principal component analysis had denoised our data, and it had stored the signal in PC1 and the noise PC2.\n\npca$rotation\n\n             PC1        PC2\nir    -0.7071068 -0.7071068\ngreen -0.7071068  0.7071068\n\n\n\nhead(as.matrix(reflectance_scaled) %*% pca$rotation)\n\n            PC1           PC2\n[1,] -0.9640769  0.3174623206\n[2,]  0.9340633 -0.7491069178\n[3,] -0.2465952 -0.2574111245\n[4,]  1.6827974  0.0708281317\n[5,] -2.0820700 -0.0004048589\n[6,] -2.0264513 -0.1416268228\n\nhead((as.matrix(reflectance_scaled) %*% pca$rotation) %*% t(pca$rotation))\n\n             ir        green\n[1,]  0.4572255  0.906185047\n[2,] -0.1307839 -1.190181109\n[3,]  0.3563863 -0.007648046\n[4,] -1.2400005 -1.139834377\n[5,]  1.4725321  1.471959522\n[6,]  1.5330628  1.332772189\n\n\n\npca$x %>% \n  as_tibble() %>% \n  ggplot() +\n  aes(x = PC1,\n      y = PC2) +\n  geom_point() +\n  coord_fixed()\n\n\n\n\n\npca$sdev %>% \n  as_tibble() %>% \n  mutate(pc = c('PC1', 'PC2')) %>% \n  ggplot() +\n  aes(x = pc,\n      y = value) +\n  geom_col()"
  },
  {
    "objectID": "slides/76-unsupervised.html#data",
    "href": "slides/76-unsupervised.html#data",
    "title": "Unsupervised Learning - Explore your Data with Clustering and PCA",
    "section": "3.2 Data",
    "text": "3.2 Data\nWe will keep working on the rice dataset.\n\nrice <-  \n   paste0('https://raw.githubusercontent.com/othomantegazza',\n           '/mawazo-summer-school/main/data-int/rice.csv') %>% \n  read_delim(delim = ';') %>% \n  janitor::clean_names()\n\n\n# define colors\nrice_colors <- \n  c(Or = '#b5d4e9',\n    Os = '#1f74b4',\n    Ob = '#c0d787',\n    Og = '#349a37')\n\n\nrice_simple <- \n  rice %>% \n  sample_n(50)\n\nrice_simple %>% \n  select(species, rachis_length_rl_in_cm:spikelet_number_sp_n) %>% \n  mutate(species = paste(species, 1:n())) %>% \n  column_to_rownames('species') %>% \n  mutate_all(~scales::rescale(., to = c(0,1), from = range(.))) %>% \n  dist() %>% \n  hclust() %>% \n  plot()\n\nrice_simple %>% \n  select(species, rachis_length_rl_in_cm:spikelet_number_sp_n) %>% \n  mutate(species = paste(species, 1:n())) %>% \n  column_to_rownames('species') %>% \n  mutate_all(~scales::rescale(., to = c(0,1), from = range(.))) %>% \n  as.matrix() %>% \n  heatmap()\n\nrice_pc <- \n  rice %>% \n  select(species, rachis_length_rl_in_cm:spikelet_number_sp_n) %>% \n  mutate(species = paste(species, 1:n())) %>% \n  column_to_rownames('species') %>% \n  # mutate_all(~scales::rescale(., to = c(0,1), from = range(.))) %>% \n  prcomp(center = T, scale = T)\n\nrice_pc_data <- \n  rice_pc %>% \n  augment() %>% \n  bind_cols(rice)\n\nrice_pc_data %>% \n  ggplot(aes(x = .fittedPC1,\n             y = .fittedPC2,\n             colour = species)) +\n  geom_point() +\n  scale_color_manual(values = rice_colors)\n\nrice_pc$sdev\n\nrice_pc$rotation %>% \n  as.data.frame() %>% \n  rownames_to_column(var = 'measurement') %>% \n  pivot_longer(-measurement,\n               names_to = 'component',\n               values_to = 'rotation') %>% \n  filter(component %in% c('PC1', 'PC2')) %>% \n  ggplot(aes(y = measurement,\n             x = rotation)) +\n  geom_col() +\n  facet_grid(rows = vars(component))"
  },
  {
    "objectID": "slides/76-unsupervised.html#exercise",
    "href": "slides/76-unsupervised.html#exercise",
    "title": "Unsupervised Learning - Explore your Data with Clustering and PCA",
    "section": "3.3 Exercise",
    "text": "3.3 Exercise"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Analysis in R",
    "section": "",
    "text": "Introduction:\n\nIntroduction\n\nHands on data with R:\n\nMeet R\nManipulate Data\nMissing Values\nVisualize Data\nNotes on Correlation\nRobust Statistics\nGet Data into R\nClean Data with R\nExplorative Data Analysis\n\nExplore your data with statistical models:\n\nA Few Words on Statistical Models\nSupervised Learning - A glimpse to Linear Models and an introduction to Tidymodels\n[üöß Work in Progress ‚ö†Ô∏è] Unsupervised Learning - Explore your Data with Clustering and PCA"
  },
  {
    "objectID": "index.html#r-and-rstudio",
    "href": "index.html#r-and-rstudio",
    "title": "Data Analysis in R",
    "section": "R and Rstudio",
    "text": "R and Rstudio\nYou can run within Visual Studio Code, in the docker container provided by the summer school organizers.\nOtherwise, you can also:\n\nInstall R from CRAN.\nInstall the Rstudio interface.\n\nRemeber! R works with packages."
  },
  {
    "objectID": "index.html#install-a-package",
    "href": "index.html#install-a-package",
    "title": "Data Analysis in R",
    "section": "Install a package",
    "text": "Install a package\nFirst install the package with install.packages() (you only have to do it once)."
  },
  {
    "objectID": "index.html#load-a-package",
    "href": "index.html#load-a-package",
    "title": "Data Analysis in R",
    "section": "Load a package",
    "text": "Load a package\nThen load it with library(), to make it‚Äôs functions available. (you have to do it at the beginning of each of your scripts)."
  },
  {
    "objectID": "index.html#packages-that-we-are-going-to-use",
    "href": "index.html#packages-that-we-are-going-to-use",
    "title": "Data Analysis in R",
    "section": "Packages that we are going to use:",
    "text": "Packages that we are going to use:\nPlease install this packages:\ninstall.packages(c('tidyverse', 'palmerpenguins', 'here', 'broom', 'janitor'))\nand place this snippet of code in front of all your scripts.\nlibrary(tidyverse)\nlibrary(here)\nlibrary(palmerpenguins)\nlibrary(broom)\nlibrary(janitor)"
  },
  {
    "objectID": "index.html#r",
    "href": "index.html#r",
    "title": "Data Analysis in R",
    "section": "R",
    "text": "R\n\nR for Data Science: An introduction to data analysis with R/Tidyverse by Hadley Wickham and Garret Grolemund.\n\n(2nd edition coming out soon).\n\nIntroduction to Data Science - A detailed introduction to Data science by the biostatistician Rafael A. Irizarry.\nAdvanced R - All you wish to know about programming in R by Hadley Wickham.\nIntroduction to Statistical Learning - A detailed introductio to modern statistical methods, implemented in R by Gareth James, Jeffrey Heer, Dominik Moritz, Jake VanderPlas, and Brock Craft, Trevor Hastie and Rob Tibshirani.\nText Mining in R Analyzing natural language and written text in R, by Julia Silge and David Robinson.\nTidy Modeling with R An introduction to the tools that compose R‚Äôs machine learning framework, by Max Kuhn and Julia Silge.\nAnalising Data Using Linear Models, for students in social, behavioural and management science, by St√©phanie M. van den Berg."
  },
  {
    "objectID": "index.html#python",
    "href": "index.html#python",
    "title": "Data Analysis in R",
    "section": "Python",
    "text": "Python\n\nThe Python Data Science Handbook, foundation of python for data science, by Jake VanderPlas.\nA Whirlwind Introduction to Python, a fast paced introduction to python, by Jake VanderPlas.\nPython for Data Analysis, the basics of data analysis in Python, with numpy and pandas, by Wes McKinney.\nVisualization Curriculum Data Visualization with Python, through Vega-Lite and Altair. Available also for javascript, by Jeffrey Heer, Dominik Moritz, Jake VanderPlas, and Brock Craft."
  },
  {
    "objectID": "index.html#javascript",
    "href": "index.html#javascript",
    "title": "Data Analysis in R",
    "section": "Javascript",
    "text": "Javascript\n\nJavascript for Data Science an introduction to modern Javascript by Maya Gans, Toby Hodges, and Greg Wilson.\nD3 in Depth, visualize data on the web with D3, by Peter Cook."
  },
  {
    "objectID": "index.html#git-github",
    "href": "index.html#git-github",
    "title": "Data Analysis in R",
    "section": "Git / Github",
    "text": "Git / Github\n\nHappy Git and Github for useR by Jenny Brian and Jim Hester.\nPro Git Book, don‚Äôt worry, it starts from the basics; by Scott Chacon and Ben Straub.\nGithub Skills A set of practical exercise to learn Github."
  },
  {
    "objectID": "index.html#project-management",
    "href": "index.html#project-management",
    "title": "Data Analysis in R",
    "section": "Project management",
    "text": "Project management\n\nDesigning and Building Data Science Solutions how to set up a data science project, Jonathan Leslie and Neri Van Otten."
  },
  {
    "objectID": "index.html#dataviz-design",
    "href": "index.html#dataviz-design",
    "title": "Data Analysis in R",
    "section": "Dataviz Design",
    "text": "Dataviz Design\n\nData Visualization - A practical introduction Visualize data in R, by Kieran Healy.\nScientific Color Palettes üé® Perceptually uniform colors, for scientific data visualization, by Fabio Crameri.\n\nScico, Fabio Crameri‚Äôs color palettes ported to ggplot2, by Thomas Lin Pedersen."
  },
  {
    "objectID": "index.html#dashboards",
    "href": "index.html#dashboards",
    "title": "Data Analysis in R",
    "section": "Dashboards",
    "text": "Dashboards\n\nDashboards with R + Docker + Github Actions by Rami Krispin, head of data science at Apple."
  },
  {
    "objectID": "index.html#computer-science",
    "href": "index.html#computer-science",
    "title": "Data Analysis in R",
    "section": "Computer Science",
    "text": "Computer Science\n\nMissing Semester A generic intro to basic CS productivity tips and tools, by Anish Athalye."
  },
  {
    "objectID": "index.html#more-books-at-bookdown",
    "href": "index.html#more-books-at-bookdown",
    "title": "Data Analysis in R",
    "section": "More Books at Bookdown",
    "text": "More Books at Bookdown\n\nCheck out the bookdown repository for many more"
  }
]