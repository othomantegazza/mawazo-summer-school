---
title: "Explore your Data with Models"
author: "Otho Mantegazza"
execute: 
  echo: true
format:
  revealjs:
    theme: [simple, style/theme.scss]
    footer: '[Home](../index.html) | [2022 CBSER Summer School](https://www.summercompschool.mawazoinstitute.org/)'
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: false

library(dplyr)
library(readr)
library(magrittr)
library(tidyr)
library(palmerpenguins)
library(tibble)
library(ggplot2)
library(readr)
library(here)
library(stringr)
library(broom)

theme_update(axis.title = element_text(size = 15),
             axis.text = element_text(size = 15),
             strip.text = element_text(size = 15))
```

## Data

We will keep working on the [rice dataset](https://academic.oup.com/jxb/article/70/20/5617/5538968).

```{r}
rice <-  
   paste0('https://raw.githubusercontent.com/othomantegazza',
           '/mawazo-summer-school/main/data-int/rice.csv') %>% 
  read_delim(delim = ';') %>% 
  janitor::clean_names()


# define colors
rice_colors <- 
  c(Or = '#b5d4e9',
    Os = '#1f74b4',
    Ob = '#c0d787',
    Og = '#349a37')
```


# Why Statistical Models


## Why?

When we look for **insights** in complex datasets, sometimes we want to know:

- Is there a **multivariate pattern** in the data? One that is evident only when we compare multiple variables at once.
- Are the patterns that we observe in data there **by chance**? Or are they **caused** by something.

## Which models?

### Supervised models

We will use **linear models** to see if we could **"predict"** the number of secondary branches from the number primary branches. 

### Unsupervised models

We will use **clustering** and **Principal Component Analysis** to detect multivariate patterns in the data.


# Linear Models

## Primary branches and spikelets {.scrollable}

::: {style="height: 700px; width: 1000px;"}

```{r}
#| fig.height: 5.5
#| fig-width: 8.5

rice %>% 
  ggplot(aes(x = primary_branch_number_pbn,
             y = spikelet_number_sp_n,
             colour = species)) +
  geom_point(alpha = .4) 
```

:::

## Primary branches and spikelets {.scrollable}

::: {style="height: 700px; width: 1000px;"}

```{r}
#| fig.height: 7.5
#| fig-width: 8.5

rice %>% 
  ggplot(aes(x = primary_branch_number_pbn,
             y = spikelet_number_sp_n,
             colour = species)) +
  geom_point(alpha = .4) +
  facet_wrap(facets = 'species')
```

:::



## Linear Regression {.scrollable}


What is regression model?

$$secondary\_branch\_number = intercept + slope * body\_mass\_g$$
$$secondary\_branch\_number = intercept + slope * body\_mass\_g + error$$
$$Y = \beta_0 + \beta_1X_1 + \beta_2X_2 + ... + \beta_nX_n + error$$
```{r}
fit <- lm(spikelet_number_sp_n ~ primary_branch_number_pbn, data = rice)
```

```{r}
fit
```

```{r}
fit %>% summary()
```

```{r}
fit
```

```{r}
```


## Broom

```{r}
fit %>% glance()
```

```{r}
fit_tidy <- fit %>% tidy()
```

```{r}
fit_simple <- fit %>% augment()
```

```{r}
rice %>% 
  ggplot(aes(x = primary_branch_number_pbn,
             y = spikelet_number_sp_n)) +
  geom_point() +
  geom_abline(intercept = fit_tidy$estimate[1],
              slope = fit_tidy$estimate[2])
```

## Multiple Regression

```{r}
fit_multiple <- lm(
  spikelet_number_sp_n ~
    species +
    primary_branch_number_pbn,
  data = rice)
```

```{r}
fit_multiple %>%
  glance()
```

```{r}
anova(
  fit,
  fit_multiple
)
```

```{r}

```


rice %>% 
  ggplot(aes(x = primary_branch_number_pbn,
             y = secondary_branch_number_sbn,
             colour = species)) +
  geom_point(alpha = .4) +
  geom_smooth(method = 'lm')

```{r}
fit_multiple_interaction <-
  lm(spikelet_number_sp_n ~
       species +
       primary_branch_number_pbn +
       species*primary_branch_number_pbn,
     data = rice)
```

```{r}
anova(
  fit,
  fit_multiple,
  fit_multiple_interaction
)
```


```{r}
fit_multiple %>% tidy()

fit_multiple %>% augment()
```

```{r}
rice %>% 
  ggplot(aes(x = primary_branch_number_pbn,
             y = secondary_branch_number_sbn,
             colour = species)) +
  geom_point(alpha = .4) +
  geom_smooth(method = 'lm')
```

```{r}
rice_simple <- 
  rice %>% 
  sample_n(50)

rice_simple %>% 
  select(species, rachis_length_rl_in_cm:spikelet_number_sp_n) %>% 
  mutate(species = paste(species, 1:n())) %>% 
  column_to_rownames('species') %>% 
  mutate_all(~scales::rescale(., to = c(0,1), from = range(.))) %>% 
  dist() %>% 
  hclust() %>% 
  plot()
```

```{r}
rice_simple %>% 
  select(species, rachis_length_rl_in_cm:spikelet_number_sp_n) %>% 
  mutate(species = paste(species, 1:n())) %>% 
  column_to_rownames('species') %>% 
  mutate_all(~scales::rescale(., to = c(0,1), from = range(.))) %>% 
  as.matrix() %>% 
  heatmap()
```

With superheat?

```{r}
rice_pc <- 
  rice %>% 
  select(species, rachis_length_rl_in_cm:spikelet_number_sp_n) %>% 
  mutate(species = paste(species, 1:n())) %>% 
  column_to_rownames('species') %>% 
  # mutate_all(~scales::rescale(., to = c(0,1), from = range(.))) %>% 
  prcomp(center = T, scale = T)
  
```

```{r}
rice_pc_data <- 
  rice_pc %>% 
  augment() %>% 
  bind_cols(rice)
```

```{r}
rice_pc_data %>% 
  ggplot(aes(x = .fittedPC1,
             y = .fittedPC2,
             colour = species)) +
  geom_point() +
  scale_color_manual(values = rice_colors)
```

```{r}
rice_pc$sdev
```


```{r}
rice_pc$rotation %>% 
  as.data.frame() %>% 
  rownames_to_column(var = 'measurement') %>% 
  pivot_longer(-measurement,
               names_to = 'component',
               values_to = 'rotation') %>% 
  filter(component %in% c('PC1', 'PC2')) %>% 
  ggplot(aes(y = measurement,
             x = rotation)) +
  geom_col() +
  facet_grid(rows = vars(component)) 
```

## Exercise {.exercise}


